<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ include file="..\..\AutoGenerated.tt"#>

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Havit.Data.Entity.Patterns.QueryServices.Fakes;
using Havit.Data.Entity.Patterns.SoftDeletes;
using Havit.Data.Patterns.Attributes;

namespace <#= Model.NamespaceName #>
{
	[Fake]
	[System.CodeDom.Compiler.GeneratedCode("Havit.Entity.CodeGenerator", "2.0")]
	public class <#= Model.FakeDataSourceClassName #> : FakeDataSource<<#= Model.ModelClassFullName #>>, <#= Model.InterfaceDataSourceFullName #>
	{
		public <#= Model.FakeDataSourceClassName #>(params <#= Model.ModelClassFullName #>[] data)
			: this((IEnumerable<<#= Model.ModelClassFullName #>>)data)
		{			
		}

		public <#= Model.FakeDataSourceClassName #>(IEnumerable<<#= Model.ModelClassFullName #>> data, ISoftDeleteManager softDeleteManager = null)
			: base(data, softDeleteManager)
		{
		}
	}
}