
namespace Havit.Ares;
//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 612 // Disable "CS0612 '...' is obsolete"
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"
#pragma warning disable 8603 // Disable "CS8603 Possible null reference return"
#pragma warning disable 8604 // Disable "CS8604 Possible null reference argument for parameter"
#pragma warning disable 8625 // Disable "CS8625 Cannot convert null literal to non-nullable reference type"



[System.CodeDom.Compiler.GeneratedCode("NSwag", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]

internal partial class AresRestApi
{
#pragma warning disable 8618
	private string _baseUrl;
#pragma warning restore 8618

	private System.Net.Http.HttpClient _httpClient;
	private static System.Lazy<System.Text.Json.JsonSerializerOptions> _settings = new System.Lazy<System.Text.Json.JsonSerializerOptions>(CreateSerializerSettings, true);

	internal AresRestApi(System.Net.Http.HttpClient httpClient)
	{
		_httpClient = httpClient;
	}

	private static System.Text.Json.JsonSerializerOptions CreateSerializerSettings()
	{
		var settings = new System.Text.Json.JsonSerializerOptions();
		UpdateJsonSerializerSettings(settings);
		return settings;
	}

	internal string BaseUrl
	{
		get { return _baseUrl; }
		set
		{
			_baseUrl = value;
			if (!string.IsNullOrEmpty(_baseUrl) && !_baseUrl.EndsWith("/"))
				_baseUrl += '/';
		}
	}

	protected System.Text.Json.JsonSerializerOptions JsonSerializerSettings { get { return _settings.Value; } }

	static partial void UpdateJsonSerializerSettings(System.Text.Json.JsonSerializerOptions settings);

	partial void PrepareRequest(System.Net.Http.HttpClient client, System.Net.Http.HttpRequestMessage request, string url);
	partial void PrepareRequest(System.Net.Http.HttpClient client, System.Net.Http.HttpRequestMessage request, System.Text.StringBuilder urlBuilder);
	partial void ProcessResponse(System.Net.Http.HttpClient client, System.Net.Http.HttpResponseMessage response);

	/// <remarks>
	/// Vyhledání seznamu ekonomických subjektů ARES podle komplexního filtru
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual System.Threading.Tasks.Task<EkonomickeSubjektySeznam> VyhledejEkonomickeSubjektyAsync(EkonomickeSubjektyKomplexFiltr body)
	{
		return VyhledejEkonomickeSubjektyAsync(body, System.Threading.CancellationToken.None);
	}

	/// <remarks>
	/// Vyhledání seznamu ekonomických subjektů ARES podle komplexního filtru
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual EkonomickeSubjektySeznam VyhledejEkonomickeSubjekty(EkonomickeSubjektyKomplexFiltr body)
	{
		return System.Threading.Tasks.Task.Run(async () => await VyhledejEkonomickeSubjektyAsync(body, System.Threading.CancellationToken.None)).GetAwaiter().GetResult();
	}

	/// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
	/// <remarks>
	/// Vyhledání seznamu ekonomických subjektů ARES podle komplexního filtru
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual async System.Threading.Tasks.Task<EkonomickeSubjektySeznam> VyhledejEkonomickeSubjektyAsync(EkonomickeSubjektyKomplexFiltr body, System.Threading.CancellationToken cancellationToken)
	{
		var client_ = _httpClient;
		var disposeClient_ = false;
		try
		{
			using (var request_ = new System.Net.Http.HttpRequestMessage())
			{
				var json_ = System.Text.Json.JsonSerializer.SerializeToUtf8Bytes(body, _settings.Value);
				var content_ = new System.Net.Http.ByteArrayContent(json_);
				content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
				request_.Content = content_;
				request_.Method = new System.Net.Http.HttpMethod("POST");
				request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("application/json"));

				var urlBuilder_ = new System.Text.StringBuilder();
				if (!string.IsNullOrEmpty(_baseUrl)) urlBuilder_.Append(_baseUrl);
				// Operation Path: "ekonomicke-subjekty/vyhledat"
				urlBuilder_.Append("ekonomicke-subjekty/vyhledat");

				PrepareRequest(client_, request_, urlBuilder_);

				var url_ = urlBuilder_.ToString();
				request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

				PrepareRequest(client_, request_, url_);

				var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
				var disposeResponse_ = true;
				try
				{
					var headers_ = new System.Collections.Generic.Dictionary<string, System.Collections.Generic.IEnumerable<string>>();
					foreach (var item_ in response_.Headers)
						headers_[item_.Key] = item_.Value;
					if (response_.Content != null && response_.Content.Headers != null)
					{
						foreach (var item_ in response_.Content.Headers)
							headers_[item_.Key] = item_.Value;
					}

					ProcessResponse(client_, response_);

					var status_ = (int)response_.StatusCode;
					if (status_ == 200)
					{
						var objectResponse_ = await ReadObjectResponseAsync<EkonomickeSubjektySeznam>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						return objectResponse_.Object;
					}
					else
					if (status_ == 400)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Chyba vstupu", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 401)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Chyba autentizace", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 403)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("P\u0159\u00edstup zam\u00edtnut", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 404)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Zdroj nenalezen", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 500)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Neo\u010dek\u00e1van\u00e1 chyba", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					{
						var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
						throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
					}
				}
				finally
				{
					if (disposeResponse_)
						response_.Dispose();
				}
			}
		}
		finally
		{
			if (disposeClient_)
				client_.Dispose();
		}
	}

	/// <remarks>
	/// Vyhledání ekonomického subjektu ARES podle zadaného iča
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual System.Threading.Tasks.Task<EkonomickySubjekt> VratEkonomickySubjektAsync(string ico)
	{
		return VratEkonomickySubjektAsync(ico, System.Threading.CancellationToken.None);
	}

	/// <remarks>
	/// Vyhledání ekonomického subjektu ARES podle zadaného iča
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual EkonomickySubjekt VratEkonomickySubjekt(string ico)
	{
		return System.Threading.Tasks.Task.Run(async () => await VratEkonomickySubjektAsync(ico, System.Threading.CancellationToken.None)).GetAwaiter().GetResult();
	}

	/// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
	/// <remarks>
	/// Vyhledání ekonomického subjektu ARES podle zadaného iča
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual async System.Threading.Tasks.Task<EkonomickySubjekt> VratEkonomickySubjektAsync(string ico, System.Threading.CancellationToken cancellationToken)
	{
		if (ico == null)
			throw new System.ArgumentNullException("ico");

		var client_ = _httpClient;
		var disposeClient_ = false;
		try
		{
			using (var request_ = new System.Net.Http.HttpRequestMessage())
			{
				request_.Method = new System.Net.Http.HttpMethod("GET");
				request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("application/json"));

				var urlBuilder_ = new System.Text.StringBuilder();
				if (!string.IsNullOrEmpty(_baseUrl)) urlBuilder_.Append(_baseUrl);
				// Operation Path: "ekonomicke-subjekty/{ico}"
				urlBuilder_.Append("ekonomicke-subjekty/");
				urlBuilder_.Append(System.Uri.EscapeDataString(ConvertToString(ico, System.Globalization.CultureInfo.InvariantCulture)));

				PrepareRequest(client_, request_, urlBuilder_);

				var url_ = urlBuilder_.ToString();
				request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

				PrepareRequest(client_, request_, url_);

				var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
				var disposeResponse_ = true;
				try
				{
					var headers_ = new System.Collections.Generic.Dictionary<string, System.Collections.Generic.IEnumerable<string>>();
					foreach (var item_ in response_.Headers)
						headers_[item_.Key] = item_.Value;
					if (response_.Content != null && response_.Content.Headers != null)
					{
						foreach (var item_ in response_.Content.Headers)
							headers_[item_.Key] = item_.Value;
					}

					ProcessResponse(client_, response_);

					var status_ = (int)response_.StatusCode;
					if (status_ == 200)
					{
						var objectResponse_ = await ReadObjectResponseAsync<EkonomickySubjekt>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						return objectResponse_.Object;
					}
					else
					if (status_ == 400)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Chyba vstupu", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 401)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Chyba autentizace", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 403)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("P\u0159\u00edstup zam\u00edtnut", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 404)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Zdroj nenalezen", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 500)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Neo\u010dek\u00e1van\u00e1 chyba", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					{
						var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
						throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
					}
				}
				finally
				{
					if (disposeResponse_)
						response_.Dispose();
				}
			}
		}
		finally
		{
			if (disposeClient_)
				client_.Dispose();
		}
	}

	/// <remarks>
	/// Vyhledání konkrétního ekonomického subjektu ze zdroje VR
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual System.Threading.Tasks.Task<EkonomickySubjektVr> VratEkonomickySubjektVrAsync(string ico)
	{
		return VratEkonomickySubjektVrAsync(ico, System.Threading.CancellationToken.None);
	}

	/// <remarks>
	/// Vyhledání konkrétního ekonomického subjektu ze zdroje VR
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual EkonomickySubjektVr VratEkonomickySubjektVr(string ico)
	{
		return System.Threading.Tasks.Task.Run(async () => await VratEkonomickySubjektVrAsync(ico, System.Threading.CancellationToken.None)).GetAwaiter().GetResult();
	}

	/// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
	/// <remarks>
	/// Vyhledání konkrétního ekonomického subjektu ze zdroje VR
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual async System.Threading.Tasks.Task<EkonomickySubjektVr> VratEkonomickySubjektVrAsync(string ico, System.Threading.CancellationToken cancellationToken)
	{
		if (ico == null)
			throw new System.ArgumentNullException("ico");

		var client_ = _httpClient;
		var disposeClient_ = false;
		try
		{
			using (var request_ = new System.Net.Http.HttpRequestMessage())
			{
				request_.Method = new System.Net.Http.HttpMethod("GET");
				request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("application/json"));

				var urlBuilder_ = new System.Text.StringBuilder();
				if (!string.IsNullOrEmpty(_baseUrl)) urlBuilder_.Append(_baseUrl);
				// Operation Path: "ekonomicke-subjekty-vr/{ico}"
				urlBuilder_.Append("ekonomicke-subjekty-vr/");
				urlBuilder_.Append(System.Uri.EscapeDataString(ConvertToString(ico, System.Globalization.CultureInfo.InvariantCulture)));

				PrepareRequest(client_, request_, urlBuilder_);

				var url_ = urlBuilder_.ToString();
				request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

				PrepareRequest(client_, request_, url_);

				var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
				var disposeResponse_ = true;
				try
				{
					var headers_ = new System.Collections.Generic.Dictionary<string, System.Collections.Generic.IEnumerable<string>>();
					foreach (var item_ in response_.Headers)
						headers_[item_.Key] = item_.Value;
					if (response_.Content != null && response_.Content.Headers != null)
					{
						foreach (var item_ in response_.Content.Headers)
							headers_[item_.Key] = item_.Value;
					}

					ProcessResponse(client_, response_);

					var status_ = (int)response_.StatusCode;
					if (status_ == 200)
					{
						var objectResponse_ = await ReadObjectResponseAsync<EkonomickySubjektVr>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						return objectResponse_.Object;
					}
					else
					if (status_ == 400)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Chyba vstupu", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 401)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Chyba autentizace", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 403)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("P\u0159\u00edstup zam\u00edtnut", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 404)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Zdroj nenalezen", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 500)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Neo\u010dek\u00e1van\u00e1 chyba", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					{
						var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
						throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
					}
				}
				finally
				{
					if (disposeResponse_)
						response_.Dispose();
				}
			}
		}
		finally
		{
			if (disposeClient_)
				client_.Dispose();
		}
	}

	/// <remarks>
	/// Vyhledání seznamu ekonomických subjektu ze zdroje VR
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual System.Threading.Tasks.Task<EkonomickeSubjektyVrSeznam> VyhledejSeznamEkonomickychSubjektuVrAsync(EkonomickeSubjektyRegistraceFiltr body)
	{
		return VyhledejSeznamEkonomickychSubjektuVrAsync(body, System.Threading.CancellationToken.None);
	}

	/// <remarks>
	/// Vyhledání seznamu ekonomických subjektu ze zdroje VR
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual EkonomickeSubjektyVrSeznam VyhledejSeznamEkonomickychSubjektuVr(EkonomickeSubjektyRegistraceFiltr body)
	{
		return System.Threading.Tasks.Task.Run(async () => await VyhledejSeznamEkonomickychSubjektuVrAsync(body, System.Threading.CancellationToken.None)).GetAwaiter().GetResult();
	}

	/// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
	/// <remarks>
	/// Vyhledání seznamu ekonomických subjektu ze zdroje VR
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual async System.Threading.Tasks.Task<EkonomickeSubjektyVrSeznam> VyhledejSeznamEkonomickychSubjektuVrAsync(EkonomickeSubjektyRegistraceFiltr body, System.Threading.CancellationToken cancellationToken)
	{
		var client_ = _httpClient;
		var disposeClient_ = false;
		try
		{
			using (var request_ = new System.Net.Http.HttpRequestMessage())
			{
				var json_ = System.Text.Json.JsonSerializer.SerializeToUtf8Bytes(body, _settings.Value);
				var content_ = new System.Net.Http.ByteArrayContent(json_);
				content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
				request_.Content = content_;
				request_.Method = new System.Net.Http.HttpMethod("POST");
				request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("application/json"));

				var urlBuilder_ = new System.Text.StringBuilder();
				if (!string.IsNullOrEmpty(_baseUrl)) urlBuilder_.Append(_baseUrl);
				// Operation Path: "ekonomicke-subjekty-vr/vyhledat"
				urlBuilder_.Append("ekonomicke-subjekty-vr/vyhledat");

				PrepareRequest(client_, request_, urlBuilder_);

				var url_ = urlBuilder_.ToString();
				request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

				PrepareRequest(client_, request_, url_);

				var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
				var disposeResponse_ = true;
				try
				{
					var headers_ = new System.Collections.Generic.Dictionary<string, System.Collections.Generic.IEnumerable<string>>();
					foreach (var item_ in response_.Headers)
						headers_[item_.Key] = item_.Value;
					if (response_.Content != null && response_.Content.Headers != null)
					{
						foreach (var item_ in response_.Content.Headers)
							headers_[item_.Key] = item_.Value;
					}

					ProcessResponse(client_, response_);

					var status_ = (int)response_.StatusCode;
					if (status_ == 200)
					{
						var objectResponse_ = await ReadObjectResponseAsync<EkonomickeSubjektyVrSeznam>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						return objectResponse_.Object;
					}
					else
					if (status_ == 400)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Chyba vstupu", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 401)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Chyba autentizace", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 403)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("P\u0159\u00edstup zam\u00edtnut", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 404)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Zdroj nenalezen", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 500)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Neo\u010dek\u00e1van\u00e1 chyba", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					{
						var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
						throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
					}
				}
				finally
				{
					if (disposeResponse_)
						response_.Dispose();
				}
			}
		}
		finally
		{
			if (disposeClient_)
				client_.Dispose();
		}
	}

	/// <remarks>
	/// Vyhledání konkrétního ekonomického subjektu ze zdroje RES
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual System.Threading.Tasks.Task<EkonomickySubjektRes> VratEkonomickySubjektResAsync(string ico)
	{
		return VratEkonomickySubjektResAsync(ico, System.Threading.CancellationToken.None);
	}

	/// <remarks>
	/// Vyhledání konkrétního ekonomického subjektu ze zdroje RES
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual EkonomickySubjektRes VratEkonomickySubjektRes(string ico)
	{
		return System.Threading.Tasks.Task.Run(async () => await VratEkonomickySubjektResAsync(ico, System.Threading.CancellationToken.None)).GetAwaiter().GetResult();
	}

	/// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
	/// <remarks>
	/// Vyhledání konkrétního ekonomického subjektu ze zdroje RES
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual async System.Threading.Tasks.Task<EkonomickySubjektRes> VratEkonomickySubjektResAsync(string ico, System.Threading.CancellationToken cancellationToken)
	{
		if (ico == null)
			throw new System.ArgumentNullException("ico");

		var client_ = _httpClient;
		var disposeClient_ = false;
		try
		{
			using (var request_ = new System.Net.Http.HttpRequestMessage())
			{
				request_.Method = new System.Net.Http.HttpMethod("GET");
				request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("application/json"));

				var urlBuilder_ = new System.Text.StringBuilder();
				if (!string.IsNullOrEmpty(_baseUrl)) urlBuilder_.Append(_baseUrl);
				// Operation Path: "ekonomicke-subjekty-res/{ico}"
				urlBuilder_.Append("ekonomicke-subjekty-res/");
				urlBuilder_.Append(System.Uri.EscapeDataString(ConvertToString(ico, System.Globalization.CultureInfo.InvariantCulture)));

				PrepareRequest(client_, request_, urlBuilder_);

				var url_ = urlBuilder_.ToString();
				request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

				PrepareRequest(client_, request_, url_);

				var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
				var disposeResponse_ = true;
				try
				{
					var headers_ = new System.Collections.Generic.Dictionary<string, System.Collections.Generic.IEnumerable<string>>();
					foreach (var item_ in response_.Headers)
						headers_[item_.Key] = item_.Value;
					if (response_.Content != null && response_.Content.Headers != null)
					{
						foreach (var item_ in response_.Content.Headers)
							headers_[item_.Key] = item_.Value;
					}

					ProcessResponse(client_, response_);

					var status_ = (int)response_.StatusCode;
					if (status_ == 200)
					{
						var objectResponse_ = await ReadObjectResponseAsync<EkonomickySubjektRes>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						return objectResponse_.Object;
					}
					else
					if (status_ == 400)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Chyba vstupu", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 401)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Chyba autentizace", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 403)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("P\u0159\u00edstup zam\u00edtnut", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 404)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Zdroj nenalezen", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 500)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Neo\u010dek\u00e1van\u00e1 chyba", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					{
						var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
						throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
					}
				}
				finally
				{
					if (disposeResponse_)
						response_.Dispose();
				}
			}
		}
		finally
		{
			if (disposeClient_)
				client_.Dispose();
		}
	}

	/// <remarks>
	/// Vyhledání seznamu ekonomických subjektu ze zdroje RES
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual System.Threading.Tasks.Task<EkonomickeSubjektyResSeznam> VyhledejSeznamEkonomickychSubjektuResAsync(EkonomickeSubjektyRegistraceFiltr body)
	{
		return VyhledejSeznamEkonomickychSubjektuResAsync(body, System.Threading.CancellationToken.None);
	}

	/// <remarks>
	/// Vyhledání seznamu ekonomických subjektu ze zdroje RES
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual EkonomickeSubjektyResSeznam VyhledejSeznamEkonomickychSubjektuRes(EkonomickeSubjektyRegistraceFiltr body)
	{
		return System.Threading.Tasks.Task.Run(async () => await VyhledejSeznamEkonomickychSubjektuResAsync(body, System.Threading.CancellationToken.None)).GetAwaiter().GetResult();
	}

	/// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
	/// <remarks>
	/// Vyhledání seznamu ekonomických subjektu ze zdroje RES
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual async System.Threading.Tasks.Task<EkonomickeSubjektyResSeznam> VyhledejSeznamEkonomickychSubjektuResAsync(EkonomickeSubjektyRegistraceFiltr body, System.Threading.CancellationToken cancellationToken)
	{
		var client_ = _httpClient;
		var disposeClient_ = false;
		try
		{
			using (var request_ = new System.Net.Http.HttpRequestMessage())
			{
				var json_ = System.Text.Json.JsonSerializer.SerializeToUtf8Bytes(body, _settings.Value);
				var content_ = new System.Net.Http.ByteArrayContent(json_);
				content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
				request_.Content = content_;
				request_.Method = new System.Net.Http.HttpMethod("POST");
				request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("application/json"));

				var urlBuilder_ = new System.Text.StringBuilder();
				if (!string.IsNullOrEmpty(_baseUrl)) urlBuilder_.Append(_baseUrl);
				// Operation Path: "ekonomicke-subjekty-res/vyhledat"
				urlBuilder_.Append("ekonomicke-subjekty-res/vyhledat");

				PrepareRequest(client_, request_, urlBuilder_);

				var url_ = urlBuilder_.ToString();
				request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

				PrepareRequest(client_, request_, url_);

				var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
				var disposeResponse_ = true;
				try
				{
					var headers_ = new System.Collections.Generic.Dictionary<string, System.Collections.Generic.IEnumerable<string>>();
					foreach (var item_ in response_.Headers)
						headers_[item_.Key] = item_.Value;
					if (response_.Content != null && response_.Content.Headers != null)
					{
						foreach (var item_ in response_.Content.Headers)
							headers_[item_.Key] = item_.Value;
					}

					ProcessResponse(client_, response_);

					var status_ = (int)response_.StatusCode;
					if (status_ == 200)
					{
						var objectResponse_ = await ReadObjectResponseAsync<EkonomickeSubjektyResSeznam>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						return objectResponse_.Object;
					}
					else
					if (status_ == 400)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Chyba vstupu", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 401)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Chyba autentizace", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 403)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("P\u0159\u00edstup zam\u00edtnut", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 404)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Zdroj nenalezen", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 500)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Neo\u010dek\u00e1van\u00e1 chyba", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					{
						var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
						throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
					}
				}
				finally
				{
					if (disposeResponse_)
						response_.Dispose();
				}
			}
		}
		finally
		{
			if (disposeClient_)
				client_.Dispose();
		}
	}

	/// <remarks>
	/// Vyhledání konkrétního ekonomického subjektu ze zdroje RŽP
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual System.Threading.Tasks.Task<EkonomickySubjektRzp> VratEkonomickySubjektRzpAsync(string ico)
	{
		return VratEkonomickySubjektRzpAsync(ico, System.Threading.CancellationToken.None);
	}

	/// <remarks>
	/// Vyhledání konkrétního ekonomického subjektu ze zdroje RŽP
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual EkonomickySubjektRzp VratEkonomickySubjektRzp(string ico)
	{
		return System.Threading.Tasks.Task.Run(async () => await VratEkonomickySubjektRzpAsync(ico, System.Threading.CancellationToken.None)).GetAwaiter().GetResult();
	}

	/// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
	/// <remarks>
	/// Vyhledání konkrétního ekonomického subjektu ze zdroje RŽP
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual async System.Threading.Tasks.Task<EkonomickySubjektRzp> VratEkonomickySubjektRzpAsync(string ico, System.Threading.CancellationToken cancellationToken)
	{
		if (ico == null)
			throw new System.ArgumentNullException("ico");

		var client_ = _httpClient;
		var disposeClient_ = false;
		try
		{
			using (var request_ = new System.Net.Http.HttpRequestMessage())
			{
				request_.Method = new System.Net.Http.HttpMethod("GET");
				request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("application/json"));

				var urlBuilder_ = new System.Text.StringBuilder();
				if (!string.IsNullOrEmpty(_baseUrl)) urlBuilder_.Append(_baseUrl);
				// Operation Path: "ekonomicke-subjekty-rzp/{ico}"
				urlBuilder_.Append("ekonomicke-subjekty-rzp/");
				urlBuilder_.Append(System.Uri.EscapeDataString(ConvertToString(ico, System.Globalization.CultureInfo.InvariantCulture)));

				PrepareRequest(client_, request_, urlBuilder_);

				var url_ = urlBuilder_.ToString();
				request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

				PrepareRequest(client_, request_, url_);

				var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
				var disposeResponse_ = true;
				try
				{
					var headers_ = new System.Collections.Generic.Dictionary<string, System.Collections.Generic.IEnumerable<string>>();
					foreach (var item_ in response_.Headers)
						headers_[item_.Key] = item_.Value;
					if (response_.Content != null && response_.Content.Headers != null)
					{
						foreach (var item_ in response_.Content.Headers)
							headers_[item_.Key] = item_.Value;
					}

					ProcessResponse(client_, response_);

					var status_ = (int)response_.StatusCode;
					if (status_ == 200)
					{
						var objectResponse_ = await ReadObjectResponseAsync<EkonomickySubjektRzp>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						return objectResponse_.Object;
					}
					else
					if (status_ == 400)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Chyba vstupu", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 401)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Chyba autentizace", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 403)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("P\u0159\u00edstup zam\u00edtnut", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 404)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Zdroj nenalezen", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 500)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Neo\u010dek\u00e1van\u00e1 chyba", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					{
						var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
						throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
					}
				}
				finally
				{
					if (disposeResponse_)
						response_.Dispose();
				}
			}
		}
		finally
		{
			if (disposeClient_)
				client_.Dispose();
		}
	}

	/// <remarks>
	/// Vyhledání seznamu ekonomických subjektu ze zdroje RŽP
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual System.Threading.Tasks.Task<EkonomickeSubjektyRzpSeznam> VyhledejSeznamEkonomickychSubjektuRzpAsync(EkonomickeSubjektyRegistraceFiltr body)
	{
		return VyhledejSeznamEkonomickychSubjektuRzpAsync(body, System.Threading.CancellationToken.None);
	}

	/// <remarks>
	/// Vyhledání seznamu ekonomických subjektu ze zdroje RŽP
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual EkonomickeSubjektyRzpSeznam VyhledejSeznamEkonomickychSubjektuRzp(EkonomickeSubjektyRegistraceFiltr body)
	{
		return System.Threading.Tasks.Task.Run(async () => await VyhledejSeznamEkonomickychSubjektuRzpAsync(body, System.Threading.CancellationToken.None)).GetAwaiter().GetResult();
	}

	/// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
	/// <remarks>
	/// Vyhledání seznamu ekonomických subjektu ze zdroje RŽP
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual async System.Threading.Tasks.Task<EkonomickeSubjektyRzpSeznam> VyhledejSeznamEkonomickychSubjektuRzpAsync(EkonomickeSubjektyRegistraceFiltr body, System.Threading.CancellationToken cancellationToken)
	{
		var client_ = _httpClient;
		var disposeClient_ = false;
		try
		{
			using (var request_ = new System.Net.Http.HttpRequestMessage())
			{
				var json_ = System.Text.Json.JsonSerializer.SerializeToUtf8Bytes(body, _settings.Value);
				var content_ = new System.Net.Http.ByteArrayContent(json_);
				content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
				request_.Content = content_;
				request_.Method = new System.Net.Http.HttpMethod("POST");
				request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("application/json"));

				var urlBuilder_ = new System.Text.StringBuilder();
				if (!string.IsNullOrEmpty(_baseUrl)) urlBuilder_.Append(_baseUrl);
				// Operation Path: "ekonomicke-subjekty-rzp/vyhledat"
				urlBuilder_.Append("ekonomicke-subjekty-rzp/vyhledat");

				PrepareRequest(client_, request_, urlBuilder_);

				var url_ = urlBuilder_.ToString();
				request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

				PrepareRequest(client_, request_, url_);

				var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
				var disposeResponse_ = true;
				try
				{
					var headers_ = new System.Collections.Generic.Dictionary<string, System.Collections.Generic.IEnumerable<string>>();
					foreach (var item_ in response_.Headers)
						headers_[item_.Key] = item_.Value;
					if (response_.Content != null && response_.Content.Headers != null)
					{
						foreach (var item_ in response_.Content.Headers)
							headers_[item_.Key] = item_.Value;
					}

					ProcessResponse(client_, response_);

					var status_ = (int)response_.StatusCode;
					if (status_ == 200)
					{
						var objectResponse_ = await ReadObjectResponseAsync<EkonomickeSubjektyRzpSeznam>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						return objectResponse_.Object;
					}
					else
					if (status_ == 400)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Chyba vstupu", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 401)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Chyba autentizace", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 403)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("P\u0159\u00edstup zam\u00edtnut", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 404)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Zdroj nenalezen", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 500)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Neo\u010dek\u00e1van\u00e1 chyba", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					{
						var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
						throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
					}
				}
				finally
				{
					if (disposeResponse_)
						response_.Dispose();
				}
			}
		}
		finally
		{
			if (disposeClient_)
				client_.Dispose();
		}
	}

	/// <remarks>
	/// Vyhledání seznamu ekonomických subjektu ze zdroje NRPZS
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual System.Threading.Tasks.Task<EkonomickeSubjektyNrpzsSeznam> VyhledejSeznamEkonomickychSubjektuNrpzsAsync(EkonomickeSubjektyRegistraceFiltr body)
	{
		return VyhledejSeznamEkonomickychSubjektuNrpzsAsync(body, System.Threading.CancellationToken.None);
	}

	/// <remarks>
	/// Vyhledání seznamu ekonomických subjektu ze zdroje NRPZS
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual EkonomickeSubjektyNrpzsSeznam VyhledejSeznamEkonomickychSubjektuNrpzs(EkonomickeSubjektyRegistraceFiltr body)
	{
		return System.Threading.Tasks.Task.Run(async () => await VyhledejSeznamEkonomickychSubjektuNrpzsAsync(body, System.Threading.CancellationToken.None)).GetAwaiter().GetResult();
	}

	/// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
	/// <remarks>
	/// Vyhledání seznamu ekonomických subjektu ze zdroje NRPZS
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual async System.Threading.Tasks.Task<EkonomickeSubjektyNrpzsSeznam> VyhledejSeznamEkonomickychSubjektuNrpzsAsync(EkonomickeSubjektyRegistraceFiltr body, System.Threading.CancellationToken cancellationToken)
	{
		var client_ = _httpClient;
		var disposeClient_ = false;
		try
		{
			using (var request_ = new System.Net.Http.HttpRequestMessage())
			{
				var json_ = System.Text.Json.JsonSerializer.SerializeToUtf8Bytes(body, _settings.Value);
				var content_ = new System.Net.Http.ByteArrayContent(json_);
				content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
				request_.Content = content_;
				request_.Method = new System.Net.Http.HttpMethod("POST");
				request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("application/json"));

				var urlBuilder_ = new System.Text.StringBuilder();
				if (!string.IsNullOrEmpty(_baseUrl)) urlBuilder_.Append(_baseUrl);
				// Operation Path: "ekonomicke-subjekty-nrpzs/vyhledat"
				urlBuilder_.Append("ekonomicke-subjekty-nrpzs/vyhledat");

				PrepareRequest(client_, request_, urlBuilder_);

				var url_ = urlBuilder_.ToString();
				request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

				PrepareRequest(client_, request_, url_);

				var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
				var disposeResponse_ = true;
				try
				{
					var headers_ = new System.Collections.Generic.Dictionary<string, System.Collections.Generic.IEnumerable<string>>();
					foreach (var item_ in response_.Headers)
						headers_[item_.Key] = item_.Value;
					if (response_.Content != null && response_.Content.Headers != null)
					{
						foreach (var item_ in response_.Content.Headers)
							headers_[item_.Key] = item_.Value;
					}

					ProcessResponse(client_, response_);

					var status_ = (int)response_.StatusCode;
					if (status_ == 200)
					{
						var objectResponse_ = await ReadObjectResponseAsync<EkonomickeSubjektyNrpzsSeznam>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						return objectResponse_.Object;
					}
					else
					if (status_ == 400)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Chyba vstupu", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 401)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Chyba autentizace", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 403)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("P\u0159\u00edstup zam\u00edtnut", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 404)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Zdroj nenalezen", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 500)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Neo\u010dek\u00e1van\u00e1 chyba", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					{
						var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
						throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
					}
				}
				finally
				{
					if (disposeResponse_)
						response_.Dispose();
				}
			}
		}
		finally
		{
			if (disposeClient_)
				client_.Dispose();
		}
	}

	/// <remarks>
	/// Vyhledání konkrétního ekonomického subjektu ze zdroje NRPZS
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual System.Threading.Tasks.Task<EkonomickySubjektNrpzs> VratEkonomickySubjektNrpzsAsync(string ico)
	{
		return VratEkonomickySubjektNrpzsAsync(ico, System.Threading.CancellationToken.None);
	}

	/// <remarks>
	/// Vyhledání konkrétního ekonomického subjektu ze zdroje NRPZS
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual EkonomickySubjektNrpzs VratEkonomickySubjektNrpzs(string ico)
	{
		return System.Threading.Tasks.Task.Run(async () => await VratEkonomickySubjektNrpzsAsync(ico, System.Threading.CancellationToken.None)).GetAwaiter().GetResult();
	}

	/// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
	/// <remarks>
	/// Vyhledání konkrétního ekonomického subjektu ze zdroje NRPZS
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual async System.Threading.Tasks.Task<EkonomickySubjektNrpzs> VratEkonomickySubjektNrpzsAsync(string ico, System.Threading.CancellationToken cancellationToken)
	{
		if (ico == null)
			throw new System.ArgumentNullException("ico");

		var client_ = _httpClient;
		var disposeClient_ = false;
		try
		{
			using (var request_ = new System.Net.Http.HttpRequestMessage())
			{
				request_.Method = new System.Net.Http.HttpMethod("GET");
				request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("application/json"));

				var urlBuilder_ = new System.Text.StringBuilder();
				if (!string.IsNullOrEmpty(_baseUrl)) urlBuilder_.Append(_baseUrl);
				// Operation Path: "ekonomicke-subjekty-nrpzs/{ico}"
				urlBuilder_.Append("ekonomicke-subjekty-nrpzs/");
				urlBuilder_.Append(System.Uri.EscapeDataString(ConvertToString(ico, System.Globalization.CultureInfo.InvariantCulture)));

				PrepareRequest(client_, request_, urlBuilder_);

				var url_ = urlBuilder_.ToString();
				request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

				PrepareRequest(client_, request_, url_);

				var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
				var disposeResponse_ = true;
				try
				{
					var headers_ = new System.Collections.Generic.Dictionary<string, System.Collections.Generic.IEnumerable<string>>();
					foreach (var item_ in response_.Headers)
						headers_[item_.Key] = item_.Value;
					if (response_.Content != null && response_.Content.Headers != null)
					{
						foreach (var item_ in response_.Content.Headers)
							headers_[item_.Key] = item_.Value;
					}

					ProcessResponse(client_, response_);

					var status_ = (int)response_.StatusCode;
					if (status_ == 200)
					{
						var objectResponse_ = await ReadObjectResponseAsync<EkonomickySubjektNrpzs>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						return objectResponse_.Object;
					}
					else
					if (status_ == 400)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Chyba vstupu", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 401)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Chyba autentizace", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 403)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("P\u0159\u00edstup zam\u00edtnut", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 404)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Zdroj nenalezen", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 500)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Neo\u010dek\u00e1van\u00e1 chyba", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					{
						var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
						throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
					}
				}
				finally
				{
					if (disposeResponse_)
						response_.Dispose();
				}
			}
		}
		finally
		{
			if (disposeClient_)
				client_.Dispose();
		}
	}

	/// <remarks>
	/// Vyhledání konkrétního ekonomického subjektu ze zdroje RPSH
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual System.Threading.Tasks.Task<EkonomickySubjektRpsh> VratEkonomickySubjektRpshAsync(string ico)
	{
		return VratEkonomickySubjektRpshAsync(ico, System.Threading.CancellationToken.None);
	}

	/// <remarks>
	/// Vyhledání konkrétního ekonomického subjektu ze zdroje RPSH
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual EkonomickySubjektRpsh VratEkonomickySubjektRpsh(string ico)
	{
		return System.Threading.Tasks.Task.Run(async () => await VratEkonomickySubjektRpshAsync(ico, System.Threading.CancellationToken.None)).GetAwaiter().GetResult();
	}

	/// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
	/// <remarks>
	/// Vyhledání konkrétního ekonomického subjektu ze zdroje RPSH
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual async System.Threading.Tasks.Task<EkonomickySubjektRpsh> VratEkonomickySubjektRpshAsync(string ico, System.Threading.CancellationToken cancellationToken)
	{
		if (ico == null)
			throw new System.ArgumentNullException("ico");

		var client_ = _httpClient;
		var disposeClient_ = false;
		try
		{
			using (var request_ = new System.Net.Http.HttpRequestMessage())
			{
				request_.Method = new System.Net.Http.HttpMethod("GET");
				request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("application/json"));

				var urlBuilder_ = new System.Text.StringBuilder();
				if (!string.IsNullOrEmpty(_baseUrl)) urlBuilder_.Append(_baseUrl);
				// Operation Path: "ekonomicke-subjekty-rpsh/{ico}"
				urlBuilder_.Append("ekonomicke-subjekty-rpsh/");
				urlBuilder_.Append(System.Uri.EscapeDataString(ConvertToString(ico, System.Globalization.CultureInfo.InvariantCulture)));

				PrepareRequest(client_, request_, urlBuilder_);

				var url_ = urlBuilder_.ToString();
				request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

				PrepareRequest(client_, request_, url_);

				var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
				var disposeResponse_ = true;
				try
				{
					var headers_ = new System.Collections.Generic.Dictionary<string, System.Collections.Generic.IEnumerable<string>>();
					foreach (var item_ in response_.Headers)
						headers_[item_.Key] = item_.Value;
					if (response_.Content != null && response_.Content.Headers != null)
					{
						foreach (var item_ in response_.Content.Headers)
							headers_[item_.Key] = item_.Value;
					}

					ProcessResponse(client_, response_);

					var status_ = (int)response_.StatusCode;
					if (status_ == 200)
					{
						var objectResponse_ = await ReadObjectResponseAsync<EkonomickySubjektRpsh>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						return objectResponse_.Object;
					}
					else
					if (status_ == 400)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Chyba vstupu", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 401)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Chyba autentizace", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 403)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("P\u0159\u00edstup zam\u00edtnut", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 404)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Zdroj nenalezen", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 500)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Neo\u010dek\u00e1van\u00e1 chyba", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					{
						var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
						throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
					}
				}
				finally
				{
					if (disposeResponse_)
						response_.Dispose();
				}
			}
		}
		finally
		{
			if (disposeClient_)
				client_.Dispose();
		}
	}

	/// <remarks>
	/// Vyhledání seznamu ekonomických subjektu ze zdroje RPSH
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual System.Threading.Tasks.Task<EkonomickeSubjektyRpshSeznam> VyhledejSeznamEkonomickychSubjektuRpshAsync(EkonomickeSubjektyRegistraceFiltr body)
	{
		return VyhledejSeznamEkonomickychSubjektuRpshAsync(body, System.Threading.CancellationToken.None);
	}

	/// <remarks>
	/// Vyhledání seznamu ekonomických subjektu ze zdroje RPSH
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual EkonomickeSubjektyRpshSeznam VyhledejSeznamEkonomickychSubjektuRpsh(EkonomickeSubjektyRegistraceFiltr body)
	{
		return System.Threading.Tasks.Task.Run(async () => await VyhledejSeznamEkonomickychSubjektuRpshAsync(body, System.Threading.CancellationToken.None)).GetAwaiter().GetResult();
	}

	/// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
	/// <remarks>
	/// Vyhledání seznamu ekonomických subjektu ze zdroje RPSH
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual async System.Threading.Tasks.Task<EkonomickeSubjektyRpshSeznam> VyhledejSeznamEkonomickychSubjektuRpshAsync(EkonomickeSubjektyRegistraceFiltr body, System.Threading.CancellationToken cancellationToken)
	{
		var client_ = _httpClient;
		var disposeClient_ = false;
		try
		{
			using (var request_ = new System.Net.Http.HttpRequestMessage())
			{
				var json_ = System.Text.Json.JsonSerializer.SerializeToUtf8Bytes(body, _settings.Value);
				var content_ = new System.Net.Http.ByteArrayContent(json_);
				content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
				request_.Content = content_;
				request_.Method = new System.Net.Http.HttpMethod("POST");
				request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("application/json"));

				var urlBuilder_ = new System.Text.StringBuilder();
				if (!string.IsNullOrEmpty(_baseUrl)) urlBuilder_.Append(_baseUrl);
				// Operation Path: "ekonomicke-subjekty-rpsh/vyhledat"
				urlBuilder_.Append("ekonomicke-subjekty-rpsh/vyhledat");

				PrepareRequest(client_, request_, urlBuilder_);

				var url_ = urlBuilder_.ToString();
				request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

				PrepareRequest(client_, request_, url_);

				var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
				var disposeResponse_ = true;
				try
				{
					var headers_ = new System.Collections.Generic.Dictionary<string, System.Collections.Generic.IEnumerable<string>>();
					foreach (var item_ in response_.Headers)
						headers_[item_.Key] = item_.Value;
					if (response_.Content != null && response_.Content.Headers != null)
					{
						foreach (var item_ in response_.Content.Headers)
							headers_[item_.Key] = item_.Value;
					}

					ProcessResponse(client_, response_);

					var status_ = (int)response_.StatusCode;
					if (status_ == 200)
					{
						var objectResponse_ = await ReadObjectResponseAsync<EkonomickeSubjektyRpshSeznam>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						return objectResponse_.Object;
					}
					else
					if (status_ == 400)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Chyba vstupu", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 401)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Chyba autentizace", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 403)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("P\u0159\u00edstup zam\u00edtnut", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 404)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Zdroj nenalezen", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 500)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Neo\u010dek\u00e1van\u00e1 chyba", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					{
						var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
						throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
					}
				}
				finally
				{
					if (disposeResponse_)
						response_.Dispose();
				}
			}
		}
		finally
		{
			if (disposeClient_)
				client_.Dispose();
		}
	}

	/// <remarks>
	/// Vyhledání konkrétního ekonomického subjektu ze zdroje RCNS
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual System.Threading.Tasks.Task<EkonomickySubjektRcns> VratEkonomickySubjektRcnsAsync(string ico)
	{
		return VratEkonomickySubjektRcnsAsync(ico, System.Threading.CancellationToken.None);
	}

	/// <remarks>
	/// Vyhledání konkrétního ekonomického subjektu ze zdroje RCNS
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual EkonomickySubjektRcns VratEkonomickySubjektRcns(string ico)
	{
		return System.Threading.Tasks.Task.Run(async () => await VratEkonomickySubjektRcnsAsync(ico, System.Threading.CancellationToken.None)).GetAwaiter().GetResult();
	}

	/// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
	/// <remarks>
	/// Vyhledání konkrétního ekonomického subjektu ze zdroje RCNS
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual async System.Threading.Tasks.Task<EkonomickySubjektRcns> VratEkonomickySubjektRcnsAsync(string ico, System.Threading.CancellationToken cancellationToken)
	{
		if (ico == null)
			throw new System.ArgumentNullException("ico");

		var client_ = _httpClient;
		var disposeClient_ = false;
		try
		{
			using (var request_ = new System.Net.Http.HttpRequestMessage())
			{
				request_.Method = new System.Net.Http.HttpMethod("GET");
				request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("application/json"));

				var urlBuilder_ = new System.Text.StringBuilder();
				if (!string.IsNullOrEmpty(_baseUrl)) urlBuilder_.Append(_baseUrl);
				// Operation Path: "ekonomicke-subjekty-rcns/{ico}"
				urlBuilder_.Append("ekonomicke-subjekty-rcns/");
				urlBuilder_.Append(System.Uri.EscapeDataString(ConvertToString(ico, System.Globalization.CultureInfo.InvariantCulture)));

				PrepareRequest(client_, request_, urlBuilder_);

				var url_ = urlBuilder_.ToString();
				request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

				PrepareRequest(client_, request_, url_);

				var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
				var disposeResponse_ = true;
				try
				{
					var headers_ = new System.Collections.Generic.Dictionary<string, System.Collections.Generic.IEnumerable<string>>();
					foreach (var item_ in response_.Headers)
						headers_[item_.Key] = item_.Value;
					if (response_.Content != null && response_.Content.Headers != null)
					{
						foreach (var item_ in response_.Content.Headers)
							headers_[item_.Key] = item_.Value;
					}

					ProcessResponse(client_, response_);

					var status_ = (int)response_.StatusCode;
					if (status_ == 200)
					{
						var objectResponse_ = await ReadObjectResponseAsync<EkonomickySubjektRcns>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						return objectResponse_.Object;
					}
					else
					if (status_ == 400)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Chyba vstupu", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 401)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Chyba autentizace", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 403)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("P\u0159\u00edstup zam\u00edtnut", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 404)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Zdroj nenalezen", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 500)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Neo\u010dek\u00e1van\u00e1 chyba", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					{
						var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
						throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
					}
				}
				finally
				{
					if (disposeResponse_)
						response_.Dispose();
				}
			}
		}
		finally
		{
			if (disposeClient_)
				client_.Dispose();
		}
	}

	/// <remarks>
	/// Vyhledání seznamu ekonomických subjektu ze zdroje RCNS
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual System.Threading.Tasks.Task<EkonomickeSubjektyRcnsSeznam> VyhledejSeznamEkonomickychSubjektuRcnsAsync(EkonomickeSubjektyRegistraceFiltr body)
	{
		return VyhledejSeznamEkonomickychSubjektuRcnsAsync(body, System.Threading.CancellationToken.None);
	}

	/// <remarks>
	/// Vyhledání seznamu ekonomických subjektu ze zdroje RCNS
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual EkonomickeSubjektyRcnsSeznam VyhledejSeznamEkonomickychSubjektuRcns(EkonomickeSubjektyRegistraceFiltr body)
	{
		return System.Threading.Tasks.Task.Run(async () => await VyhledejSeznamEkonomickychSubjektuRcnsAsync(body, System.Threading.CancellationToken.None)).GetAwaiter().GetResult();
	}

	/// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
	/// <remarks>
	/// Vyhledání seznamu ekonomických subjektu ze zdroje RCNS
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual async System.Threading.Tasks.Task<EkonomickeSubjektyRcnsSeznam> VyhledejSeznamEkonomickychSubjektuRcnsAsync(EkonomickeSubjektyRegistraceFiltr body, System.Threading.CancellationToken cancellationToken)
	{
		var client_ = _httpClient;
		var disposeClient_ = false;
		try
		{
			using (var request_ = new System.Net.Http.HttpRequestMessage())
			{
				var json_ = System.Text.Json.JsonSerializer.SerializeToUtf8Bytes(body, _settings.Value);
				var content_ = new System.Net.Http.ByteArrayContent(json_);
				content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
				request_.Content = content_;
				request_.Method = new System.Net.Http.HttpMethod("POST");
				request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("application/json"));

				var urlBuilder_ = new System.Text.StringBuilder();
				if (!string.IsNullOrEmpty(_baseUrl)) urlBuilder_.Append(_baseUrl);
				// Operation Path: "ekonomicke-subjekty-rcns/vyhledat"
				urlBuilder_.Append("ekonomicke-subjekty-rcns/vyhledat");

				PrepareRequest(client_, request_, urlBuilder_);

				var url_ = urlBuilder_.ToString();
				request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

				PrepareRequest(client_, request_, url_);

				var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
				var disposeResponse_ = true;
				try
				{
					var headers_ = new System.Collections.Generic.Dictionary<string, System.Collections.Generic.IEnumerable<string>>();
					foreach (var item_ in response_.Headers)
						headers_[item_.Key] = item_.Value;
					if (response_.Content != null && response_.Content.Headers != null)
					{
						foreach (var item_ in response_.Content.Headers)
							headers_[item_.Key] = item_.Value;
					}

					ProcessResponse(client_, response_);

					var status_ = (int)response_.StatusCode;
					if (status_ == 200)
					{
						var objectResponse_ = await ReadObjectResponseAsync<EkonomickeSubjektyRcnsSeznam>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						return objectResponse_.Object;
					}
					else
					if (status_ == 400)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Chyba vstupu", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 401)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Chyba autentizace", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 403)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("P\u0159\u00edstup zam\u00edtnut", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 404)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Zdroj nenalezen", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 500)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Neo\u010dek\u00e1van\u00e1 chyba", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					{
						var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
						throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
					}
				}
				finally
				{
					if (disposeResponse_)
						response_.Dispose();
				}
			}
		}
		finally
		{
			if (disposeClient_)
				client_.Dispose();
		}
	}

	/// <remarks>
	/// Vyhledání konkrétního ekonomického subjektu ze zdroje SZR - subregistr EZP
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual System.Threading.Tasks.Task<EkonomickySubjektSzr> VratEkonomickySubjektSzrAsync(string ico)
	{
		return VratEkonomickySubjektSzrAsync(ico, System.Threading.CancellationToken.None);
	}

	/// <remarks>
	/// Vyhledání konkrétního ekonomického subjektu ze zdroje SZR - subregistr EZP
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual EkonomickySubjektSzr VratEkonomickySubjektSzr(string ico)
	{
		return System.Threading.Tasks.Task.Run(async () => await VratEkonomickySubjektSzrAsync(ico, System.Threading.CancellationToken.None)).GetAwaiter().GetResult();
	}

	/// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
	/// <remarks>
	/// Vyhledání konkrétního ekonomického subjektu ze zdroje SZR - subregistr EZP
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual async System.Threading.Tasks.Task<EkonomickySubjektSzr> VratEkonomickySubjektSzrAsync(string ico, System.Threading.CancellationToken cancellationToken)
	{
		if (ico == null)
			throw new System.ArgumentNullException("ico");

		var client_ = _httpClient;
		var disposeClient_ = false;
		try
		{
			using (var request_ = new System.Net.Http.HttpRequestMessage())
			{
				request_.Method = new System.Net.Http.HttpMethod("GET");
				request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("application/json"));

				var urlBuilder_ = new System.Text.StringBuilder();
				if (!string.IsNullOrEmpty(_baseUrl)) urlBuilder_.Append(_baseUrl);
				// Operation Path: "ekonomicke-subjekty-szr/{ico}"
				urlBuilder_.Append("ekonomicke-subjekty-szr/");
				urlBuilder_.Append(System.Uri.EscapeDataString(ConvertToString(ico, System.Globalization.CultureInfo.InvariantCulture)));

				PrepareRequest(client_, request_, urlBuilder_);

				var url_ = urlBuilder_.ToString();
				request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

				PrepareRequest(client_, request_, url_);

				var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
				var disposeResponse_ = true;
				try
				{
					var headers_ = new System.Collections.Generic.Dictionary<string, System.Collections.Generic.IEnumerable<string>>();
					foreach (var item_ in response_.Headers)
						headers_[item_.Key] = item_.Value;
					if (response_.Content != null && response_.Content.Headers != null)
					{
						foreach (var item_ in response_.Content.Headers)
							headers_[item_.Key] = item_.Value;
					}

					ProcessResponse(client_, response_);

					var status_ = (int)response_.StatusCode;
					if (status_ == 200)
					{
						var objectResponse_ = await ReadObjectResponseAsync<EkonomickySubjektSzr>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						return objectResponse_.Object;
					}
					else
					if (status_ == 400)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Chyba vstupu", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 401)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Chyba autentizace", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 403)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("P\u0159\u00edstup zam\u00edtnut", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 404)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Zdroj nenalezen", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 500)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Neo\u010dek\u00e1van\u00e1 chyba", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					{
						var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
						throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
					}
				}
				finally
				{
					if (disposeResponse_)
						response_.Dispose();
				}
			}
		}
		finally
		{
			if (disposeClient_)
				client_.Dispose();
		}
	}

	/// <remarks>
	/// Vyhledání seznamu ekonomických subjektu ze zdroje SZR - subregistr EZP
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual System.Threading.Tasks.Task<EkonomickeSubjektySzrSeznam> VyhledejSeznamEkonomickychSubjektuSzrAsync(EkonomickeSubjektyRegistraceFiltr body)
	{
		return VyhledejSeznamEkonomickychSubjektuSzrAsync(body, System.Threading.CancellationToken.None);
	}

	/// <remarks>
	/// Vyhledání seznamu ekonomických subjektu ze zdroje SZR - subregistr EZP
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual EkonomickeSubjektySzrSeznam VyhledejSeznamEkonomickychSubjektuSzr(EkonomickeSubjektyRegistraceFiltr body)
	{
		return System.Threading.Tasks.Task.Run(async () => await VyhledejSeznamEkonomickychSubjektuSzrAsync(body, System.Threading.CancellationToken.None)).GetAwaiter().GetResult();
	}

	/// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
	/// <remarks>
	/// Vyhledání seznamu ekonomických subjektu ze zdroje SZR - subregistr EZP
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual async System.Threading.Tasks.Task<EkonomickeSubjektySzrSeznam> VyhledejSeznamEkonomickychSubjektuSzrAsync(EkonomickeSubjektyRegistraceFiltr body, System.Threading.CancellationToken cancellationToken)
	{
		var client_ = _httpClient;
		var disposeClient_ = false;
		try
		{
			using (var request_ = new System.Net.Http.HttpRequestMessage())
			{
				var json_ = System.Text.Json.JsonSerializer.SerializeToUtf8Bytes(body, _settings.Value);
				var content_ = new System.Net.Http.ByteArrayContent(json_);
				content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
				request_.Content = content_;
				request_.Method = new System.Net.Http.HttpMethod("POST");
				request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("application/json"));

				var urlBuilder_ = new System.Text.StringBuilder();
				if (!string.IsNullOrEmpty(_baseUrl)) urlBuilder_.Append(_baseUrl);
				// Operation Path: "ekonomicke-subjekty-szr/vyhledat"
				urlBuilder_.Append("ekonomicke-subjekty-szr/vyhledat");

				PrepareRequest(client_, request_, urlBuilder_);

				var url_ = urlBuilder_.ToString();
				request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

				PrepareRequest(client_, request_, url_);

				var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
				var disposeResponse_ = true;
				try
				{
					var headers_ = new System.Collections.Generic.Dictionary<string, System.Collections.Generic.IEnumerable<string>>();
					foreach (var item_ in response_.Headers)
						headers_[item_.Key] = item_.Value;
					if (response_.Content != null && response_.Content.Headers != null)
					{
						foreach (var item_ in response_.Content.Headers)
							headers_[item_.Key] = item_.Value;
					}

					ProcessResponse(client_, response_);

					var status_ = (int)response_.StatusCode;
					if (status_ == 200)
					{
						var objectResponse_ = await ReadObjectResponseAsync<EkonomickeSubjektySzrSeznam>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						return objectResponse_.Object;
					}
					else
					if (status_ == 400)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Chyba vstupu", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 401)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Chyba autentizace", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 403)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("P\u0159\u00edstup zam\u00edtnut", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 404)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Zdroj nenalezen", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 500)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Neo\u010dek\u00e1van\u00e1 chyba", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					{
						var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
						throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
					}
				}
				finally
				{
					if (disposeResponse_)
						response_.Dispose();
				}
			}
		}
		finally
		{
			if (disposeClient_)
				client_.Dispose();
		}
	}

	/// <remarks>
	/// Vyhledání konkrétního ekonomického subjektu ze zdroje RŠ
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual System.Threading.Tasks.Task<EkonomickySubjektRs> VratEkonomickySubjektRsAsync(string ico)
	{
		return VratEkonomickySubjektRsAsync(ico, System.Threading.CancellationToken.None);
	}

	/// <remarks>
	/// Vyhledání konkrétního ekonomického subjektu ze zdroje RŠ
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual EkonomickySubjektRs VratEkonomickySubjektRs(string ico)
	{
		return System.Threading.Tasks.Task.Run(async () => await VratEkonomickySubjektRsAsync(ico, System.Threading.CancellationToken.None)).GetAwaiter().GetResult();
	}

	/// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
	/// <remarks>
	/// Vyhledání konkrétního ekonomického subjektu ze zdroje RŠ
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual async System.Threading.Tasks.Task<EkonomickySubjektRs> VratEkonomickySubjektRsAsync(string ico, System.Threading.CancellationToken cancellationToken)
	{
		if (ico == null)
			throw new System.ArgumentNullException("ico");

		var client_ = _httpClient;
		var disposeClient_ = false;
		try
		{
			using (var request_ = new System.Net.Http.HttpRequestMessage())
			{
				request_.Method = new System.Net.Http.HttpMethod("GET");
				request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("application/json"));

				var urlBuilder_ = new System.Text.StringBuilder();
				if (!string.IsNullOrEmpty(_baseUrl)) urlBuilder_.Append(_baseUrl);
				// Operation Path: "ekonomicke-subjekty-rs/{ico}"
				urlBuilder_.Append("ekonomicke-subjekty-rs/");
				urlBuilder_.Append(System.Uri.EscapeDataString(ConvertToString(ico, System.Globalization.CultureInfo.InvariantCulture)));

				PrepareRequest(client_, request_, urlBuilder_);

				var url_ = urlBuilder_.ToString();
				request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

				PrepareRequest(client_, request_, url_);

				var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
				var disposeResponse_ = true;
				try
				{
					var headers_ = new System.Collections.Generic.Dictionary<string, System.Collections.Generic.IEnumerable<string>>();
					foreach (var item_ in response_.Headers)
						headers_[item_.Key] = item_.Value;
					if (response_.Content != null && response_.Content.Headers != null)
					{
						foreach (var item_ in response_.Content.Headers)
							headers_[item_.Key] = item_.Value;
					}

					ProcessResponse(client_, response_);

					var status_ = (int)response_.StatusCode;
					if (status_ == 200)
					{
						var objectResponse_ = await ReadObjectResponseAsync<EkonomickySubjektRs>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						return objectResponse_.Object;
					}
					else
					if (status_ == 400)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Chyba vstupu", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 401)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Chyba autentizace", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 403)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("P\u0159\u00edstup zam\u00edtnut", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 404)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Zdroj nenalezen", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 500)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Neo\u010dek\u00e1van\u00e1 chyba", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					{
						var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
						throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
					}
				}
				finally
				{
					if (disposeResponse_)
						response_.Dispose();
				}
			}
		}
		finally
		{
			if (disposeClient_)
				client_.Dispose();
		}
	}

	/// <remarks>
	/// Vyhledání seznamu ekonomických subjektu ze zdroje RŠ
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual System.Threading.Tasks.Task<EkonomickeSubjektyRsSeznam> VyhledejSeznamEkonomickychSubjektuRsAsync(EkonomickeSubjektyRegistraceFiltr body)
	{
		return VyhledejSeznamEkonomickychSubjektuRsAsync(body, System.Threading.CancellationToken.None);
	}

	/// <remarks>
	/// Vyhledání seznamu ekonomických subjektu ze zdroje RŠ
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual EkonomickeSubjektyRsSeznam VyhledejSeznamEkonomickychSubjektuRs(EkonomickeSubjektyRegistraceFiltr body)
	{
		return System.Threading.Tasks.Task.Run(async () => await VyhledejSeznamEkonomickychSubjektuRsAsync(body, System.Threading.CancellationToken.None)).GetAwaiter().GetResult();
	}

	/// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
	/// <remarks>
	/// Vyhledání seznamu ekonomických subjektu ze zdroje RŠ
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual async System.Threading.Tasks.Task<EkonomickeSubjektyRsSeznam> VyhledejSeznamEkonomickychSubjektuRsAsync(EkonomickeSubjektyRegistraceFiltr body, System.Threading.CancellationToken cancellationToken)
	{
		var client_ = _httpClient;
		var disposeClient_ = false;
		try
		{
			using (var request_ = new System.Net.Http.HttpRequestMessage())
			{
				var json_ = System.Text.Json.JsonSerializer.SerializeToUtf8Bytes(body, _settings.Value);
				var content_ = new System.Net.Http.ByteArrayContent(json_);
				content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
				request_.Content = content_;
				request_.Method = new System.Net.Http.HttpMethod("POST");
				request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("application/json"));

				var urlBuilder_ = new System.Text.StringBuilder();
				if (!string.IsNullOrEmpty(_baseUrl)) urlBuilder_.Append(_baseUrl);
				// Operation Path: "ekonomicke-subjekty-rs/vyhledat"
				urlBuilder_.Append("ekonomicke-subjekty-rs/vyhledat");

				PrepareRequest(client_, request_, urlBuilder_);

				var url_ = urlBuilder_.ToString();
				request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

				PrepareRequest(client_, request_, url_);

				var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
				var disposeResponse_ = true;
				try
				{
					var headers_ = new System.Collections.Generic.Dictionary<string, System.Collections.Generic.IEnumerable<string>>();
					foreach (var item_ in response_.Headers)
						headers_[item_.Key] = item_.Value;
					if (response_.Content != null && response_.Content.Headers != null)
					{
						foreach (var item_ in response_.Content.Headers)
							headers_[item_.Key] = item_.Value;
					}

					ProcessResponse(client_, response_);

					var status_ = (int)response_.StatusCode;
					if (status_ == 200)
					{
						var objectResponse_ = await ReadObjectResponseAsync<EkonomickeSubjektyRsSeznam>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						return objectResponse_.Object;
					}
					else
					if (status_ == 400)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Chyba vstupu", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 401)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Chyba autentizace", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 403)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("P\u0159\u00edstup zam\u00edtnut", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 404)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Zdroj nenalezen", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 500)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Neo\u010dek\u00e1van\u00e1 chyba", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					{
						var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
						throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
					}
				}
				finally
				{
					if (disposeResponse_)
						response_.Dispose();
				}
			}
		}
		finally
		{
			if (disposeClient_)
				client_.Dispose();
		}
	}

	/// <remarks>
	/// Vyhledání číselníků používaných v IS ARES podle komplexního filtru
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual System.Threading.Tasks.Task<CiselnikyNazevnikSeznam> VyhledejCiselnikAsync(CiselnikyZakladniFiltr body)
	{
		return VyhledejCiselnikAsync(body, System.Threading.CancellationToken.None);
	}

	/// <remarks>
	/// Vyhledání číselníků používaných v IS ARES podle komplexního filtru
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual CiselnikyNazevnikSeznam VyhledejCiselnik(CiselnikyZakladniFiltr body)
	{
		return System.Threading.Tasks.Task.Run(async () => await VyhledejCiselnikAsync(body, System.Threading.CancellationToken.None)).GetAwaiter().GetResult();
	}

	/// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
	/// <remarks>
	/// Vyhledání číselníků používaných v IS ARES podle komplexního filtru
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual async System.Threading.Tasks.Task<CiselnikyNazevnikSeznam> VyhledejCiselnikAsync(CiselnikyZakladniFiltr body, System.Threading.CancellationToken cancellationToken)
	{
		var client_ = _httpClient;
		var disposeClient_ = false;
		try
		{
			using (var request_ = new System.Net.Http.HttpRequestMessage())
			{
				var json_ = System.Text.Json.JsonSerializer.SerializeToUtf8Bytes(body, _settings.Value);
				var content_ = new System.Net.Http.ByteArrayContent(json_);
				content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
				request_.Content = content_;
				request_.Method = new System.Net.Http.HttpMethod("POST");
				request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("application/json"));

				var urlBuilder_ = new System.Text.StringBuilder();
				if (!string.IsNullOrEmpty(_baseUrl)) urlBuilder_.Append(_baseUrl);
				// Operation Path: "ciselniky-nazevniky/vyhledat"
				urlBuilder_.Append("ciselniky-nazevniky/vyhledat");

				PrepareRequest(client_, request_, urlBuilder_);

				var url_ = urlBuilder_.ToString();
				request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

				PrepareRequest(client_, request_, url_);

				var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
				var disposeResponse_ = true;
				try
				{
					var headers_ = new System.Collections.Generic.Dictionary<string, System.Collections.Generic.IEnumerable<string>>();
					foreach (var item_ in response_.Headers)
						headers_[item_.Key] = item_.Value;
					if (response_.Content != null && response_.Content.Headers != null)
					{
						foreach (var item_ in response_.Content.Headers)
							headers_[item_.Key] = item_.Value;
					}

					ProcessResponse(client_, response_);

					var status_ = (int)response_.StatusCode;
					if (status_ == 200)
					{
						var objectResponse_ = await ReadObjectResponseAsync<CiselnikyNazevnikSeznam>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						return objectResponse_.Object;
					}
					else
					if (status_ == 400)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Chyba vstupu", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 401)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Chyba autentizace", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 403)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("P\u0159\u00edstup zam\u00edtnut", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 404)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Zdroj nenalezen", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 500)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Neo\u010dek\u00e1van\u00e1 chyba", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					{
						var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
						throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
					}
				}
				finally
				{
					if (disposeResponse_)
						response_.Dispose();
				}
			}
		}
		finally
		{
			if (disposeClient_)
				client_.Dispose();
		}
	}

	/// <remarks>
	/// Vyhledání seznamu standardizovaných adres RÚIAN podle komplexního filtru
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual System.Threading.Tasks.Task<StandardizovaneAdresySeznam> VyhledejStandardizovaneAdresyAsync(StandardizovanaAdresaFiltr body)
	{
		return VyhledejStandardizovaneAdresyAsync(body, System.Threading.CancellationToken.None);
	}

	/// <remarks>
	/// Vyhledání seznamu standardizovaných adres RÚIAN podle komplexního filtru
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual StandardizovaneAdresySeznam VyhledejStandardizovaneAdresy(StandardizovanaAdresaFiltr body)
	{
		return System.Threading.Tasks.Task.Run(async () => await VyhledejStandardizovaneAdresyAsync(body, System.Threading.CancellationToken.None)).GetAwaiter().GetResult();
	}

	/// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
	/// <remarks>
	/// Vyhledání seznamu standardizovaných adres RÚIAN podle komplexního filtru
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual async System.Threading.Tasks.Task<StandardizovaneAdresySeznam> VyhledejStandardizovaneAdresyAsync(StandardizovanaAdresaFiltr body, System.Threading.CancellationToken cancellationToken)
	{
		var client_ = _httpClient;
		var disposeClient_ = false;
		try
		{
			using (var request_ = new System.Net.Http.HttpRequestMessage())
			{
				var json_ = System.Text.Json.JsonSerializer.SerializeToUtf8Bytes(body, _settings.Value);
				var content_ = new System.Net.Http.ByteArrayContent(json_);
				content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
				request_.Content = content_;
				request_.Method = new System.Net.Http.HttpMethod("POST");
				request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("application/json"));

				var urlBuilder_ = new System.Text.StringBuilder();
				if (!string.IsNullOrEmpty(_baseUrl)) urlBuilder_.Append(_baseUrl);
				// Operation Path: "standardizovane-adresy/vyhledat"
				urlBuilder_.Append("standardizovane-adresy/vyhledat");

				PrepareRequest(client_, request_, urlBuilder_);

				var url_ = urlBuilder_.ToString();
				request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

				PrepareRequest(client_, request_, url_);

				var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
				var disposeResponse_ = true;
				try
				{
					var headers_ = new System.Collections.Generic.Dictionary<string, System.Collections.Generic.IEnumerable<string>>();
					foreach (var item_ in response_.Headers)
						headers_[item_.Key] = item_.Value;
					if (response_.Content != null && response_.Content.Headers != null)
					{
						foreach (var item_ in response_.Content.Headers)
							headers_[item_.Key] = item_.Value;
					}

					ProcessResponse(client_, response_);

					var status_ = (int)response_.StatusCode;
					if (status_ == 200)
					{
						var objectResponse_ = await ReadObjectResponseAsync<StandardizovaneAdresySeznam>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						return objectResponse_.Object;
					}
					else
					if (status_ == 400)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Chyba vstupu", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 401)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Chyba autentizace", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 403)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("P\u0159\u00edstup zam\u00edtnut", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 404)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Zdroj nenalezen", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 500)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Neo\u010dek\u00e1van\u00e1 chyba", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					{
						var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
						throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
					}
				}
				finally
				{
					if (disposeResponse_)
						response_.Dispose();
				}
			}
		}
		finally
		{
			if (disposeClient_)
				client_.Dispose();
		}
	}

	/// <remarks>
	/// Vyhledání konkrétního úpadce ze zdroje CEÚ
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual System.Threading.Tasks.Task<EkonomickySubjektCeu> VratEkonomickySubjektCeuAsync(string ico)
	{
		return VratEkonomickySubjektCeuAsync(ico, System.Threading.CancellationToken.None);
	}

	/// <remarks>
	/// Vyhledání konkrétního úpadce ze zdroje CEÚ
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual EkonomickySubjektCeu VratEkonomickySubjektCeu(string ico)
	{
		return System.Threading.Tasks.Task.Run(async () => await VratEkonomickySubjektCeuAsync(ico, System.Threading.CancellationToken.None)).GetAwaiter().GetResult();
	}

	/// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
	/// <remarks>
	/// Vyhledání konkrétního úpadce ze zdroje CEÚ
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual async System.Threading.Tasks.Task<EkonomickySubjektCeu> VratEkonomickySubjektCeuAsync(string ico, System.Threading.CancellationToken cancellationToken)
	{
		if (ico == null)
			throw new System.ArgumentNullException("ico");

		var client_ = _httpClient;
		var disposeClient_ = false;
		try
		{
			using (var request_ = new System.Net.Http.HttpRequestMessage())
			{
				request_.Method = new System.Net.Http.HttpMethod("GET");
				request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("application/json"));

				var urlBuilder_ = new System.Text.StringBuilder();
				if (!string.IsNullOrEmpty(_baseUrl)) urlBuilder_.Append(_baseUrl);
				// Operation Path: "ekonomicke-subjekty-ceu/{ico}"
				urlBuilder_.Append("ekonomicke-subjekty-ceu/");
				urlBuilder_.Append(System.Uri.EscapeDataString(ConvertToString(ico, System.Globalization.CultureInfo.InvariantCulture)));

				PrepareRequest(client_, request_, urlBuilder_);

				var url_ = urlBuilder_.ToString();
				request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

				PrepareRequest(client_, request_, url_);

				var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
				var disposeResponse_ = true;
				try
				{
					var headers_ = new System.Collections.Generic.Dictionary<string, System.Collections.Generic.IEnumerable<string>>();
					foreach (var item_ in response_.Headers)
						headers_[item_.Key] = item_.Value;
					if (response_.Content != null && response_.Content.Headers != null)
					{
						foreach (var item_ in response_.Content.Headers)
							headers_[item_.Key] = item_.Value;
					}

					ProcessResponse(client_, response_);

					var status_ = (int)response_.StatusCode;
					if (status_ == 200)
					{
						var objectResponse_ = await ReadObjectResponseAsync<EkonomickySubjektCeu>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						return objectResponse_.Object;
					}
					else
					if (status_ == 400)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Chyba vstupu", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 401)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Chyba autentizace", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 403)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("P\u0159\u00edstup zam\u00edtnut", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 404)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Zdroj nenalezen", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 500)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Neo\u010dek\u00e1van\u00e1 chyba", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					{
						var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
						throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
					}
				}
				finally
				{
					if (disposeResponse_)
						response_.Dispose();
				}
			}
		}
		finally
		{
			if (disposeClient_)
				client_.Dispose();
		}
	}

	/// <remarks>
	/// Vyhledání seznamu úpadců ze zdroje CEÚ
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual System.Threading.Tasks.Task<EkonomickeSubjektyCeuSeznam> VyhledejSeznamEkonomickychSubjektuCeuAsync(EkonomickeSubjektyRegistraceFiltr body)
	{
		return VyhledejSeznamEkonomickychSubjektuCeuAsync(body, System.Threading.CancellationToken.None);
	}

	/// <remarks>
	/// Vyhledání seznamu úpadců ze zdroje CEÚ
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual EkonomickeSubjektyCeuSeznam VyhledejSeznamEkonomickychSubjektuCeu(EkonomickeSubjektyRegistraceFiltr body)
	{
		return System.Threading.Tasks.Task.Run(async () => await VyhledejSeznamEkonomickychSubjektuCeuAsync(body, System.Threading.CancellationToken.None)).GetAwaiter().GetResult();
	}

	/// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
	/// <remarks>
	/// Vyhledání seznamu úpadců ze zdroje CEÚ
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual async System.Threading.Tasks.Task<EkonomickeSubjektyCeuSeznam> VyhledejSeznamEkonomickychSubjektuCeuAsync(EkonomickeSubjektyRegistraceFiltr body, System.Threading.CancellationToken cancellationToken)
	{
		var client_ = _httpClient;
		var disposeClient_ = false;
		try
		{
			using (var request_ = new System.Net.Http.HttpRequestMessage())
			{
				var json_ = System.Text.Json.JsonSerializer.SerializeToUtf8Bytes(body, _settings.Value);
				var content_ = new System.Net.Http.ByteArrayContent(json_);
				content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
				request_.Content = content_;
				request_.Method = new System.Net.Http.HttpMethod("POST");
				request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("application/json"));

				var urlBuilder_ = new System.Text.StringBuilder();
				if (!string.IsNullOrEmpty(_baseUrl)) urlBuilder_.Append(_baseUrl);
				// Operation Path: "ekonomicke-subjekty-ceu/vyhledat"
				urlBuilder_.Append("ekonomicke-subjekty-ceu/vyhledat");

				PrepareRequest(client_, request_, urlBuilder_);

				var url_ = urlBuilder_.ToString();
				request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

				PrepareRequest(client_, request_, url_);

				var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
				var disposeResponse_ = true;
				try
				{
					var headers_ = new System.Collections.Generic.Dictionary<string, System.Collections.Generic.IEnumerable<string>>();
					foreach (var item_ in response_.Headers)
						headers_[item_.Key] = item_.Value;
					if (response_.Content != null && response_.Content.Headers != null)
					{
						foreach (var item_ in response_.Content.Headers)
							headers_[item_.Key] = item_.Value;
					}

					ProcessResponse(client_, response_);

					var status_ = (int)response_.StatusCode;
					if (status_ == 200)
					{
						var objectResponse_ = await ReadObjectResponseAsync<EkonomickeSubjektyCeuSeznam>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						return objectResponse_.Object;
					}
					else
					if (status_ == 400)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Chyba vstupu", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 401)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Chyba autentizace", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 403)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("P\u0159\u00edstup zam\u00edtnut", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 404)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Zdroj nenalezen", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 500)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Neo\u010dek\u00e1van\u00e1 chyba", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					{
						var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
						throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
					}
				}
				finally
				{
					if (disposeResponse_)
						response_.Dispose();
				}
			}
		}
		finally
		{
			if (disposeClient_)
				client_.Dispose();
		}
	}

	/// <remarks>
	/// Vyhledání seznamu notifikačních dávek ekonomických subjektů ARES podle zvoleného filtru
	/// </remarks>
	/// <param name="body">Datový zdroj notifikační dávky - kód</param>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual System.Threading.Tasks.Task<SeznamNotifikacnichDavek> VyhledejSeznamNotifikacnichDavekAsync(EkonomickeSubjektyNotifikaceFiltr body)
	{
		return VyhledejSeznamNotifikacnichDavekAsync(body, System.Threading.CancellationToken.None);
	}

	/// <remarks>
	/// Vyhledání seznamu notifikačních dávek ekonomických subjektů ARES podle zvoleného filtru
	/// </remarks>
	/// <param name="body">Datový zdroj notifikační dávky - kód</param>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual SeznamNotifikacnichDavek VyhledejSeznamNotifikacnichDavek(EkonomickeSubjektyNotifikaceFiltr body)
	{
		return System.Threading.Tasks.Task.Run(async () => await VyhledejSeznamNotifikacnichDavekAsync(body, System.Threading.CancellationToken.None)).GetAwaiter().GetResult();
	}

	/// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
	/// <remarks>
	/// Vyhledání seznamu notifikačních dávek ekonomických subjektů ARES podle zvoleného filtru
	/// </remarks>
	/// <param name="body">Datový zdroj notifikační dávky - kód</param>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual async System.Threading.Tasks.Task<SeznamNotifikacnichDavek> VyhledejSeznamNotifikacnichDavekAsync(EkonomickeSubjektyNotifikaceFiltr body, System.Threading.CancellationToken cancellationToken)
	{
		var client_ = _httpClient;
		var disposeClient_ = false;
		try
		{
			using (var request_ = new System.Net.Http.HttpRequestMessage())
			{
				var json_ = System.Text.Json.JsonSerializer.SerializeToUtf8Bytes(body, _settings.Value);
				var content_ = new System.Net.Http.ByteArrayContent(json_);
				content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
				request_.Content = content_;
				request_.Method = new System.Net.Http.HttpMethod("POST");
				request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("application/json"));

				var urlBuilder_ = new System.Text.StringBuilder();
				if (!string.IsNullOrEmpty(_baseUrl)) urlBuilder_.Append(_baseUrl);
				// Operation Path: "ekonomicke-subjekty-notifikace/vyhledat"
				urlBuilder_.Append("ekonomicke-subjekty-notifikace/vyhledat");

				PrepareRequest(client_, request_, urlBuilder_);

				var url_ = urlBuilder_.ToString();
				request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

				PrepareRequest(client_, request_, url_);

				var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
				var disposeResponse_ = true;
				try
				{
					var headers_ = new System.Collections.Generic.Dictionary<string, System.Collections.Generic.IEnumerable<string>>();
					foreach (var item_ in response_.Headers)
						headers_[item_.Key] = item_.Value;
					if (response_.Content != null && response_.Content.Headers != null)
					{
						foreach (var item_ in response_.Content.Headers)
							headers_[item_.Key] = item_.Value;
					}

					ProcessResponse(client_, response_);

					var status_ = (int)response_.StatusCode;
					if (status_ == 200)
					{
						var objectResponse_ = await ReadObjectResponseAsync<SeznamNotifikacnichDavek>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						return objectResponse_.Object;
					}
					else
					if (status_ == 400)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Chyba vstupu", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 401)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Chyba autentizace", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 403)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("P\u0159\u00edstup zam\u00edtnut", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 404)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Zdroj nenalezen", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 500)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Neo\u010dek\u00e1van\u00e1 chyba", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					{
						var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
						throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
					}
				}
				finally
				{
					if (disposeResponse_)
						response_.Dispose();
				}
			}
		}
		finally
		{
			if (disposeClient_)
				client_.Dispose();
		}
	}

	/// <remarks>
	/// Vyhledání  konkrétní notifikační dávky zdroje ARES podle vstupcách parametrů (zdroj, číslo notifikační dávky)
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual System.Threading.Tasks.Task<NotifikacniDavkaZaznam> VratNotifikacniDavkuAsync(string datovyZdroj, int cisloDavky)
	{
		return VratNotifikacniDavkuAsync(datovyZdroj, cisloDavky, System.Threading.CancellationToken.None);
	}

	/// <remarks>
	/// Vyhledání  konkrétní notifikační dávky zdroje ARES podle vstupcách parametrů (zdroj, číslo notifikační dávky)
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual NotifikacniDavkaZaznam VratNotifikacniDavku(string datovyZdroj, int cisloDavky)
	{
		return System.Threading.Tasks.Task.Run(async () => await VratNotifikacniDavkuAsync(datovyZdroj, cisloDavky, System.Threading.CancellationToken.None)).GetAwaiter().GetResult();
	}

	/// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
	/// <remarks>
	/// Vyhledání  konkrétní notifikační dávky zdroje ARES podle vstupcách parametrů (zdroj, číslo notifikační dávky)
	/// </remarks>
	/// <returns>OK</returns>
	/// <exception cref="ApiException">A server side error occurred.</exception>
	internal virtual async System.Threading.Tasks.Task<NotifikacniDavkaZaznam> VratNotifikacniDavkuAsync(string datovyZdroj, int cisloDavky, System.Threading.CancellationToken cancellationToken)
	{
		if (datovyZdroj == null)
			throw new System.ArgumentNullException("datovyZdroj");

		if (cisloDavky == null)
			throw new System.ArgumentNullException("cisloDavky");

		var client_ = _httpClient;
		var disposeClient_ = false;
		try
		{
			using (var request_ = new System.Net.Http.HttpRequestMessage())
			{
				request_.Method = new System.Net.Http.HttpMethod("GET");
				request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("application/json"));

				var urlBuilder_ = new System.Text.StringBuilder();
				if (!string.IsNullOrEmpty(_baseUrl)) urlBuilder_.Append(_baseUrl);
				// Operation Path: "ekonomicke-subjekty-notifikace/datovy-zdroj/{datovyZdroj}/cislo-davky/{cisloDavky}"
				urlBuilder_.Append("ekonomicke-subjekty-notifikace/datovy-zdroj/");
				urlBuilder_.Append(System.Uri.EscapeDataString(ConvertToString(datovyZdroj, System.Globalization.CultureInfo.InvariantCulture)));
				urlBuilder_.Append("/cislo-davky/");
				urlBuilder_.Append(System.Uri.EscapeDataString(ConvertToString(cisloDavky, System.Globalization.CultureInfo.InvariantCulture)));

				PrepareRequest(client_, request_, urlBuilder_);

				var url_ = urlBuilder_.ToString();
				request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

				PrepareRequest(client_, request_, url_);

				var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
				var disposeResponse_ = true;
				try
				{
					var headers_ = new System.Collections.Generic.Dictionary<string, System.Collections.Generic.IEnumerable<string>>();
					foreach (var item_ in response_.Headers)
						headers_[item_.Key] = item_.Value;
					if (response_.Content != null && response_.Content.Headers != null)
					{
						foreach (var item_ in response_.Content.Headers)
							headers_[item_.Key] = item_.Value;
					}

					ProcessResponse(client_, response_);

					var status_ = (int)response_.StatusCode;
					if (status_ == 200)
					{
						var objectResponse_ = await ReadObjectResponseAsync<NotifikacniDavkaZaznam>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						return objectResponse_.Object;
					}
					else
					if (status_ == 400)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Chyba vstupu", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 401)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Chyba autentizace", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 403)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("P\u0159\u00edstup zam\u00edtnut", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 404)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Zdroj nenalezen", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					if (status_ == 500)
					{
						var objectResponse_ = await ReadObjectResponseAsync<Chyba>(response_, headers_, cancellationToken).ConfigureAwait(false);
						if (objectResponse_.Object == null)
						{
							throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
						}
						throw new ApiException<Chyba>("Neo\u010dek\u00e1van\u00e1 chyba", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
					}
					else
					{
						var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
						throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
					}
				}
				finally
				{
					if (disposeResponse_)
						response_.Dispose();
				}
			}
		}
		finally
		{
			if (disposeClient_)
				client_.Dispose();
		}
	}

	protected struct ObjectResponseResult<T>
	{
		public ObjectResponseResult(T responseObject, string responseText)
		{
			this.Object = responseObject;
			this.Text = responseText;
		}

		public T Object { get; }

		public string Text { get; }
	}

	public bool ReadResponseAsString { get; set; }

	protected virtual async System.Threading.Tasks.Task<ObjectResponseResult<T>> ReadObjectResponseAsync<T>(System.Net.Http.HttpResponseMessage response, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, System.Threading.CancellationToken cancellationToken)
	{
		if (response == null || response.Content == null)
		{
			return new ObjectResponseResult<T>(default(T), string.Empty);
		}

		if (ReadResponseAsString)
		{
			var responseText = await response.Content.ReadAsStringAsync().ConfigureAwait(false);
			try
			{
				var typedBody = System.Text.Json.JsonSerializer.Deserialize<T>(responseText, JsonSerializerSettings);
				return new ObjectResponseResult<T>(typedBody, responseText);
			}
			catch (System.Text.Json.JsonException exception)
			{
				var message = "Could not deserialize the response body string as " + typeof(T).FullName + ".";
				throw new ApiException(message, (int)response.StatusCode, responseText, headers, exception);
			}
		}
		else
		{
			try
			{
				using (var responseStream = await response.Content.ReadAsStreamAsync().ConfigureAwait(false))
				{
					var typedBody = await System.Text.Json.JsonSerializer.DeserializeAsync<T>(responseStream, JsonSerializerSettings, cancellationToken).ConfigureAwait(false);
					return new ObjectResponseResult<T>(typedBody, string.Empty);
				}
			}
			catch (System.Text.Json.JsonException exception)
			{
				var message = "Could not deserialize the response body stream as " + typeof(T).FullName + ".";
				throw new ApiException(message, (int)response.StatusCode, string.Empty, headers, exception);
			}
		}
	}

	private string ConvertToString(object value, System.Globalization.CultureInfo cultureInfo)
	{
		if (value == null)
		{
			return "";
		}

		if (value is System.Enum)
		{
			var name = System.Enum.GetName(value.GetType(), value);
			if (name != null)
			{
				var field = System.Reflection.IntrospectionExtensions.GetTypeInfo(value.GetType()).GetDeclaredField(name);
				if (field != null)
				{
					var attribute = System.Reflection.CustomAttributeExtensions.GetCustomAttribute(field, typeof(System.Runtime.Serialization.EnumMemberAttribute))
						as System.Runtime.Serialization.EnumMemberAttribute;
					if (attribute != null)
					{
						return attribute.Value != null ? attribute.Value : name;
					}
				}

				var converted = System.Convert.ToString(System.Convert.ChangeType(value, System.Enum.GetUnderlyingType(value.GetType()), cultureInfo));
				return converted == null ? string.Empty : converted;
			}
		}
		else if (value is bool)
		{
			return System.Convert.ToString((bool)value, cultureInfo).ToLowerInvariant();
		}
		else if (value is byte[])
		{
			return System.Convert.ToBase64String((byte[])value);
		}
		else if (value is string[])
		{
			return string.Join(",", (string[])value);
		}
		else if (value.GetType().IsArray)
		{
			var valueArray = (System.Array)value;
			var valueTextArray = new string[valueArray.Length];
			for (var i = 0; i < valueArray.Length; i++)
			{
				valueTextArray[i] = ConvertToString(valueArray.GetValue(i), cultureInfo);
			}
			return string.Join(",", valueTextArray);
		}

		var result = System.Convert.ToString(value, cultureInfo);
		return result == null ? "" : result;
	}
}

/// <summary>
/// Adresa - obecný předek 
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class Adresa
{
	/// <summary>
	/// Kód státu (ciselnikKod: Stat) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("kodStatu")]
	[System.ComponentModel.DataAnnotations.StringLength(3, MinimumLength = 3)]
	public string KodStatu { get; set; }

	/// <summary>
	/// Název státu
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("nazevStatu")]
	[System.ComponentModel.DataAnnotations.StringLength(32)]
	public string NazevStatu { get; set; }

	/// <summary>
	/// Kód kraje
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("kodKraje")]
	[System.ComponentModel.DataAnnotations.Range(0, 999)]
	public int KodKraje { get; set; }

	/// <summary>
	/// Název kraje
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("nazevKraje")]
	[System.ComponentModel.DataAnnotations.StringLength(32)]
	public string NazevKraje { get; set; }

	/// <summary>
	/// Kód okresu
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("kodOkresu")]
	[System.ComponentModel.DataAnnotations.Range(0, 9999)]
	public int KodOkresu { get; set; }

	/// <summary>
	/// Název okresu
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("nazevOkresu")]
	[System.ComponentModel.DataAnnotations.StringLength(32)]
	public string NazevOkresu { get; set; }

	/// <summary>
	/// Kód obce
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("kodObce")]
	[System.ComponentModel.DataAnnotations.Range(0, 999999)]
	public int KodObce { get; set; }

	/// <summary>
	/// Název obce
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("nazevObce")]
	[System.ComponentModel.DataAnnotations.StringLength(48)]
	public string NazevObce { get; set; }

	/// <summary>
	/// Kód správního obvodu Prahy
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("kodSpravnihoObvodu")]
	[System.ComponentModel.DataAnnotations.Range(0, 999)]
	public int KodSpravnihoObvodu { get; set; }

	/// <summary>
	/// Název správního obvodu Prahy 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("nazevSpravnihoObvodu")]
	[System.ComponentModel.DataAnnotations.StringLength(32)]
	public string NazevSpravnihoObvodu { get; set; }

	/// <summary>
	/// Kód městského obvodu Prahy
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("kodMestskehoObvodu")]
	[System.ComponentModel.DataAnnotations.Range(0, 999)]
	public int KodMestskehoObvodu { get; set; }

	/// <summary>
	/// Název městského obvodu Prahy
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("nazevMestskehoObvodu")]
	[System.ComponentModel.DataAnnotations.StringLength(32)]
	public string NazevMestskehoObvodu { get; set; }

	/// <summary>
	/// Kód městské části statutárního města
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("kodMestskeCastiObvodu")]
	[System.ComponentModel.DataAnnotations.Range(0, 999999)]
	public int KodMestskeCastiObvodu { get; set; }

	/// <summary>
	/// Kód ulice, veřejného prostranství ze zdroje
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("kodUlice")]
	[System.ComponentModel.DataAnnotations.Range(0, 9999999)]
	public int KodUlice { get; set; }

	/// <summary>
	/// Název městské části statutárního města 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("nazevMestskeCastiObvodu")]
	[System.ComponentModel.DataAnnotations.StringLength(48)]
	public string NazevMestskeCastiObvodu { get; set; }

	/// <summary>
	/// Název ulice, veřejného prostranství 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("nazevUlice")]
	[System.ComponentModel.DataAnnotations.StringLength(48)]
	public string NazevUlice { get; set; }

	/// <summary>
	/// Číslo domovní
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("cisloDomovni")]
	[System.ComponentModel.DataAnnotations.Range(int.MinValue, 9999)]
	public int CisloDomovni { get; set; }

	/// <summary>
	/// Doplňující informace adresního popisu
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("doplnekAdresy")]
	[System.ComponentModel.DataAnnotations.StringLength(1500)]
	public string DoplnekAdresy { get; set; }

	/// <summary>
	/// Kód časti obce
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("kodCastiObce")]
	[System.ComponentModel.DataAnnotations.Range(0, 999999)]
	public int KodCastiObce { get; set; }

	/// <summary>
	/// Číslo orientační - číselná část
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("cisloOrientacni")]
	[System.ComponentModel.DataAnnotations.Range(int.MinValue, 999)]
	public int CisloOrientacni { get; set; }

	/// <summary>
	/// Číslo orientační - písmenná část
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("cisloOrientacniPismeno")]
	[System.ComponentModel.DataAnnotations.StringLength(1)]
	public string CisloOrientacniPismeno { get; set; }

	/// <summary>
	/// Název části obce
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("nazevCastiObce")]
	[System.ComponentModel.DataAnnotations.StringLength(48)]
	public string NazevCastiObce { get; set; }

	/// <summary>
	/// Kód adresního místa
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("kodAdresnihoMista")]
	[System.ComponentModel.DataAnnotations.Range(0, 999999999)]
	public int KodAdresnihoMista { get; set; }

	/// <summary>
	/// Poštovní směrovací číslo adresní pošty
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("psc")]
	public int Psc { get; set; }

	/// <summary>
	/// Nestrukturovaná adresa (formátovaná adresa)
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("textovaAdresa")]
	[System.ComponentModel.DataAnnotations.StringLength(1500)]
	public string TextovaAdresa { get; set; }

	/// <summary>
	/// Nestrukturované číslo/a použíté v adrese
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("cisloDoAdresy")]
	[System.ComponentModel.DataAnnotations.StringLength(255)]
	public string CisloDoAdresy { get; set; }

	/// <summary>
	/// Typ čísla domu (ciselnikKod: TypCislaDomovniho) 
	/// 25.6. Manuálně změněno ze string na int (viz změna ARES ChangeLog Seznam změn ve verzi 1.10 oproti verzi 1.00:)  Task #77757
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("typCisloDomovni")]
	public int TypCisloDomovni { get; set; }

	/// <summary>
	/// Stav standardizace adresy dle RÚIAN
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("standardizaceAdresy")]
	public bool StandardizaceAdresy { get; set; }

	/// <summary>
	/// Psč zahraničních nebo nestandardně definovaných čísel
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("pscTxt")]
	public string PscTxt { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

/// <summary>
/// Osoba v angažmá ekonomického subjektu
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class AngazovanaOsoba
{
	/// <summary>
	/// Jméno fyzické osoby
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("jmeno")]
	[System.ComponentModel.DataAnnotations.StringLength(100)]
	public string Jmeno { get; set; }

	/// <summary>
	/// Příjmení fyzické osoby
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("prijmeni")]
	[System.ComponentModel.DataAnnotations.StringLength(100)]
	public string Prijmeni { get; set; }

	/// <summary>
	/// Titul před jménem fyzické osoby 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("titulPredJmenem")]
	[System.ComponentModel.DataAnnotations.StringLength(32)]
	public string TitulPredJmenem { get; set; }

	/// <summary>
	/// Titul za jménem fyzické osoby
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("titulZaJmenem")]
	[System.ComponentModel.DataAnnotations.StringLength(32)]
	public string TitulZaJmenem { get; set; }

	/// <summary>
	/// Datum narození fyzické osoby
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("datumNarozeni")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset DatumNarozeni { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

/// <summary>
/// Základní informace o ekonomickém subjektu - obecný předek
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class EkonomickySubjektZaklad
{
	/// <summary>
	/// Identifikační číslo osoby - IČO
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("ico")]
	[System.ComponentModel.DataAnnotations.StringLength(8, MinimumLength = 8)]
	[System.ComponentModel.DataAnnotations.RegularExpression(@"^\d{8}$")]
	public string Ico { get; set; }

	/// <summary>
	/// Obchodní jméno ekonomického subjektu
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("obchodniJmeno")]
	[System.ComponentModel.DataAnnotations.StringLength(2000, MinimumLength = 1)]
	public string ObchodniJmeno { get; set; }

	/// <summary>
	/// Sídlo ekonomického subjektu
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("sidlo")]
	public Adresa Sidlo { get; set; }

	/// <summary>
	/// Právní forma - kód (ciselnikKod: PravniForma, zdroj: res, com) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("pravniForma")]
	[System.ComponentModel.DataAnnotations.StringLength(3, MinimumLength = 3)]
	[System.ComponentModel.DataAnnotations.RegularExpression(@"^\d{3}$")]
	public string PravniForma { get; set; }

	/// <summary>
	/// Správně příslušný finanční úřad - kód (ciselnikKod: FinancniUrad, zdroj:ufo) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("financniUrad")]
	[System.ComponentModel.DataAnnotations.StringLength(3, MinimumLength = 3)]
	[System.ComponentModel.DataAnnotations.RegularExpression(@"^\d{3}$")]
	public string FinancniUrad { get; set; }

	/// <summary>
	/// Datum vzniku ekonomického subjektu 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("datumVzniku")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset DatumVzniku { get; set; }

	/// <summary>
	/// Datum zániku ekonomického subjektu
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("datumZaniku")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset DatumZaniku { get; set; }

	/// <summary>
	/// Datum aktualizace záznamu
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("datumAktualizace")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset DatumAktualizace { get; set; }

	/// <summary>
	/// Daňové identifikační číslo ve formátu CZNNNNNNNNNN
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("dic")]
	public string Dic { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

/// <summary>
/// Adresa doručovací dle vyhlášky 359/2011 sb.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class AdresaDorucovaci
{
	/// <summary>
	/// 1. řádek doručovací adresy
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("radekAdresy1")]
	[System.ComponentModel.DataAnnotations.StringLength(255)]
	public string RadekAdresy1 { get; set; }

	/// <summary>
	/// 2. řádek doručovací adresy
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("radekAdresy2")]
	[System.ComponentModel.DataAnnotations.StringLength(255)]
	public string RadekAdresy2 { get; set; }

	/// <summary>
	/// 3. řádek doručovací adresy
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("radekAdresy3")]
	[System.ComponentModel.DataAnnotations.StringLength(255)]
	public string RadekAdresy3 { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

/// <summary>
/// Seznam nalezených záznamů - obecný předek.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class Seznam
{
	/// <summary>
	/// Počet prvků seznamu.
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("pocetCelkem")]
	[System.ComponentModel.DataAnnotations.Range(0, int.MaxValue)]
	public int PocetCelkem { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

/// <summary>
/// Předek pro všechny seznamy obsahující stránkování a řazení. Defaultní parametry pro všechny aplikace s komplexním filtrem: [+/-]icoiD [+/-]obchodniJmeno [+/-]nazevObce 
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class StrankovaniARazeni
{
	/// <summary>
	/// Offset pro stránkování (poloha prvního vráceného prvku).
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("start")]
	[System.ComponentModel.DataAnnotations.Range(0, int.MaxValue)]
	public int Start { get; set; }

	/// <summary>
	/// Počet prvků k výstupu.
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("pocet")]
	[System.ComponentModel.DataAnnotations.Range(0, int.MaxValue)]
	public int Pocet { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("razeni")]
	public System.Collections.Generic.ICollection<string> Razeni { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class Chyba
{
	/// <summary>
	/// Číselníkový kód chyby
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("kod")]
	[System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
	public KodChybyEnum Kod { get; set; }

	/// <summary>
	/// Popis chyby
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("popis")]
	public string Popis { get; set; }

	/// <summary>
	/// Subkod chyby
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("subKod")]
	public string SubKod { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class Chyby
{

	[System.Text.Json.Serialization.JsonPropertyName("chyby")]
	public System.Collections.Generic.ICollection<Chyba> Chyby1 { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

/// <summary>
/// Adresa s platností
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class AdresaAres
{
	/// <summary>
	/// Sídlo
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("sidlo")]
	public Adresa Sidlo { get; set; }

	/// <summary>
	/// Primární záznam
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("primarniZaznam")]
	public bool PrimarniZaznam { get; set; }

	/// <summary>
	/// Platnost údaje od data
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("platnostOd")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset PlatnostOd { get; set; }

	/// <summary>
	/// Platnost údaje od data
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("platnostDo")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset PlatnostDo { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

/// <summary>
/// Další údaje o ekonomickém subjektu
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class EkonomickySubjektDalsiUdaje
{

	[System.Text.Json.Serialization.JsonPropertyName("obchodniJmeno")]
	public System.Collections.Generic.ICollection<ObchodniJmenoAres> ObchodniJmeno { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("sidlo")]
	public System.Collections.Generic.ICollection<AdresaAres> Sidlo { get; set; }

	/// <summary>
	/// Právní forma - kód (ciselnikKod: PravniForma, zdroj: res, com)
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("pravniForma")]
	[System.ComponentModel.DataAnnotations.StringLength(3, MinimumLength = 3)]
	[System.ComponentModel.DataAnnotations.RegularExpression(@"^\d{3}$")]
	public string PravniForma { get; set; }

	/// <summary>
	/// Aktuální spisová značka ve tvaru ODDIL xx/SOUD (např. B 100/MSPH) - poskytováno pouze pro zdroj: Veřejné rejstříky 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("spisovaZnacka")]
	[System.ComponentModel.DataAnnotations.StringLength(32)]
	public string SpisovaZnacka { get; set; }

	/// <summary>
	/// Identifikace primárního zdroje dat - kód (ciselnikKod: TypZdroje, zdroj: com) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("datovyZdroj")]
	[System.ComponentModel.DataAnnotations.StringLength(30)]
	public string DatovyZdroj { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

/// <summary>
/// Obchodní jméno s platností
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class ObchodniJmenoAres
{
	/// <summary>
	/// Platnost údaje od data
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("platnostOd")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset PlatnostOd { get; set; }

	/// <summary>
	/// Platnost údaje do data
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("platnostDo")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset PlatnostDo { get; set; }

	/// <summary>
	/// Obchodní jméno ekonomického subjektu
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("obchodniJmeno")]
	[System.ComponentModel.DataAnnotations.StringLength(2000, MinimumLength = 1)]
	public string ObchodniJmeno { get; set; }

	/// <summary>
	/// Primární záznam 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("primarniZaznam")]
	public bool PrimarniZaznam { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

/// <summary>
/// Filtr pro vyhledání seznamu ekonomických subjektů
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class EkonomickeSubjektyKomplexFiltr : EkonomickeSubjektyZakladFiltr
{

	[System.Text.Json.Serialization.JsonPropertyName("czNace")]
	public System.Collections.Generic.ICollection<string> CzNace { get; set; }

}

/// <summary>
/// Seznam registrací ekonomického subjektu v jednotlivých zdrojích
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class SeznamRegistraci
{
	/// <summary>
	/// Stav ekonomického subjektu ve zdroji VR (Veřejné rejstříky) - kód (ciselnikKod: StavZdroje, zdroj: com) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("stavZdrojeVr")]
	[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 1)]
	public string StavZdrojeVr { get; set; }

	/// <summary>
	/// Stav ekonomického subjektu ve zdroji RES (Registr ekonomických subjektů) - kód (ciselnikKod: StavZdroje, zdroj: com) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("stavZdrojeRes")]
	[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 1)]
	public string StavZdrojeRes { get; set; }

	/// <summary>
	/// Stav ekonomického subjektu ve zdroji RŽP (Registr živnostenského podnikání) - kód (ciselnikKod: StavZdroje, zdroj: com) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("stavZdrojeRzp")]
	[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 1)]
	public string StavZdrojeRzp { get; set; }

	/// <summary>
	/// Stav ekonomického subjektu ve zdroji NRPZS (Národní registr poskytovatelů zdrovotnických služeb) - kód (ciselnikKod: StavZdroje, zdroj: com) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("stavZdrojeNrpzs")]
	[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 1)]
	public string StavZdrojeNrpzs { get; set; }

	/// <summary>
	/// Stav ekonomického subjektu ve zdroji RPSH (Registr politických stran a hnutí) - kód (ciselnikKod: StavZdroje, zdroj: com) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("stavZdrojeRpsh")]
	[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 1)]
	public string StavZdrojeRpsh { get; set; }

	/// <summary>
	/// Stav ekonomického subjektu ve zdroji RCNS(Registr církví a náboženských společenství) - kód (ciselnikKod: StavZdroje, zdroj: com) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("stavZdrojeRcns")]
	[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 1)]
	public string StavZdrojeRcns { get; set; }

	/// <summary>
	/// Stav ekonomického subjektu ve zdroji  SZR(Společný zemědělský registr) - kód (ciselnikKod: StavZdroje, zdroj: com) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("stavZdrojeSzr")]
	[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 1)]
	public string StavZdrojeSzr { get; set; }

	/// <summary>
	/// Stav ekonomického subjektu ve zdroji DPH(Registr plátců daně s přidané hodnoty) - kód (ciselnikKod: StavZdroje, zdroj: com) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("stavZdrojeDph")]
	[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 1)]
	public string StavZdrojeDph { get; set; }

	/// <summary>
	/// Stav ekonomického subjektu ve zdroji SD(Registr plátců spotřební daně) - kód (ciselnikKod: StavZdroje, zdroj: com) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("stavZdrojeSd")]
	[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 1)]
	public string StavZdrojeSd { get; set; }

	/// <summary>
	/// Stav ekonomického subjektu ve zdroji ISIR(Insolvenční rejstřík) - kód (ciselnikKod: StavZdroje, zdroj: com) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("stavZdrojeIr")]
	[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 1)]
	public string StavZdrojeIr { get; set; }

	/// <summary>
	/// Stav ekonomického subjektu ve zdroji CEÚ(Centrální evidence úpadců) - kód (ciselnikKod: StavZdroje, zdroj: com) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("stavZdrojeCeu")]
	[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 1)]
	public string StavZdrojeCeu { get; set; }

	/// <summary>
	/// Stav ekonomického subjektu ve zdroji RŠ(Registr škol) - kód (ciselnikKod: StavZdroje, zdroj: com) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("stavZdrojeRs")]
	[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 1)]
	public string StavZdrojeRs { get; set; }

	/// <summary>
	/// Stav ekonomického subjektu ve zdroji RED(Registr evidence dotací) - kód (ciselnikKod: StavZdroje, zdroj: com) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("stavZdrojeRed")]
	[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 1)]
	public string StavZdrojeRed { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

/// <summary>
/// Seznam ekonomických subjektů ARES
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class EkonomickeSubjektySeznam : Seznam
{

	[System.Text.Json.Serialization.JsonPropertyName("ekonomickeSubjekty")]
	public System.Collections.Generic.ICollection<EkonomickySubjekt> EkonomickeSubjekty { get; set; }

}

/// <summary>
/// Základní informace o ekonomickém subjektu
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class EkonomickySubjekt : EkonomickySubjektZaklad
{
	/// <summary>
	/// Ičo ekonomického subjektu, pokud je ičo přidělené. Id ekonomického subjektu, pokud je ičo nepřidělené.
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("icoId")]
	[System.ComponentModel.DataAnnotations.StringLength(32)]
	[System.ComponentModel.DataAnnotations.RegularExpression(@"^(ARES_)?\d{8}$")]
	public string IcoId { get; set; }

	/// <summary>
	/// Doručovací adresa sídla ekonomického subjektu
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("adresaDorucovaci")]
	public AdresaDorucovaci AdresaDorucovaci { get; set; }

	/// <summary>
	/// Seznam registraci ekonomického subjektu v jednotlivých datových zdrojích
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("seznamRegistraci")]
	public SeznamRegistraci SeznamRegistraci { get; set; }

	/// <summary>
	/// Identifikace primárního zdroje dat.
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("primarniZdroj")]
	[System.ComponentModel.DataAnnotations.StringLength(30)]
	public string PrimarniZdroj { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("dalsiUdaje")]
	public System.Collections.Generic.ICollection<EkonomickySubjektDalsiUdaje> DalsiUdaje { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("czNace")]
	public System.Collections.Generic.ICollection<string> CzNace { get; set; }

	/// <summary>
	/// Indeftifikátor sub-registru zdroje SZR - kód (ciselnikKod: SubRegistrSzr, zdroj:com) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("subRegistrSzr")]
	public string SubRegistrSzr { get; set; }

	/// <summary>
	/// Daňové identifikační číslo skupiny plátce DPH ve formátu CZNNNNNNNNNN 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("dicSkDph")]
	public string DicSkDph { get; set; }

}

/// <summary>
/// Angažná - fyzická osoba
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class AngazmaFyzickaOsobaVr : DatumZapisuVymazuUdajeVr
{
	/// <summary>
	/// Členství
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("clenstvi")]
	public AngazmaClenstviVr Clenstvi { get; set; }

	/// <summary>
	/// Fyzická osoba
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("fyzickaOsoba")]
	public FyzickaOsobaVr FyzickaOsoba { get; set; }

	/// <summary>
	/// Název angažmá - nestandardní
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("nazevAngazma")]
	[System.ComponentModel.DataAnnotations.StringLength(255)]
	public string NazevAngazma { get; set; }

	/// <summary>
	/// Typ angažmá  - kód (ciselnikKod: TypAngazma, zdroj: vr) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("typAngazma")]
	[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 1)]
	public string TypAngazma { get; set; }

}

/// <summary>
/// Angažovaná osoba
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class AngazmaOsobaVr : DatumZapisuVymazuUdajeVr
{
	/// <summary>
	/// Skrytý údaj
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("skrytyUdaj")]
	public ObecnyTextVr SkrytyUdaj { get; set; }

	/// <summary>
	/// Typ angažmá  - kód (ciselnikKod: TypAngazma, zdroj: vr) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("typAngazma")]
	[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 1)]
	public string TypAngazma { get; set; }

	/// <summary>
	/// Členství
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("clenstvi")]
	public AngazmaClenstviVr Clenstvi { get; set; }

	/// <summary>
	/// Název angažmá - nestandardní
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("nazevAngazma")]
	[System.ComponentModel.DataAnnotations.StringLength(255)]
	public string NazevAngazma { get; set; }

	/// <summary>
	/// Právnická osoba
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("pravnickaOsoba")]
	public PravnickaOsobaVr PravnickaOsoba { get; set; }

	/// <summary>
	/// Fyzická osoba
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("fyzickaOsoba")]
	public FyzickaOsobaVr FyzickaOsoba { get; set; }

}

/// <summary>
/// Seznam ekonomických subjektů ze zdroje VR
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class EkonomickeSubjektyVrSeznam : Seznam
{

	[System.Text.Json.Serialization.JsonPropertyName("ekonomickeSubjekty")]
	public System.Collections.Generic.ICollection<EkonomickySubjektVr> EkonomickeSubjekty { get; set; }

}

/// <summary>
/// Ekonomický subjekt
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class EkonomickySubjektVr
{
	/// <summary>
	/// ičo/id ekonomického subjektu
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("icoId")]
	[System.ComponentModel.DataAnnotations.StringLength(32)]
	[System.ComponentModel.DataAnnotations.RegularExpression(@"^(ARES_)?\d{8}$")]
	public string IcoId { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("zaznamy")]
	public System.Collections.Generic.ICollection<ZaznamVr> Zaznamy { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

/// <summary>
/// Insolvence
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class InsolvencniRizeniVr : DatumZapisuVymazuUdajeVr
{

	[System.Text.Json.Serialization.JsonPropertyName("spravce")]
	public System.Collections.Generic.ICollection<AngazmaOsobaVr> Spravce { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("insolvencniZapis")]
	public System.Collections.Generic.ICollection<InsolvencniZapisVr> InsolvencniZapis { get; set; }

}

/// <summary>
/// Konkurzní řízení
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class KonkursVr : DatumZapisuVymazuUdajeVr
{

	[System.Text.Json.Serialization.JsonPropertyName("spravce")]
	public System.Collections.Generic.ICollection<AngazmaOsobaVr> Spravce { get; set; }

	/// <summary>
	/// Typ konkursu - kód (ciselnikKod: TypKonkursu) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("typKonkursu")]
	[System.ComponentModel.DataAnnotations.StringLength(50)]
	public string TypKonkursu { get; set; }

	/// <summary>
	/// Datum rozhodnutí okresního soudu
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("datumRozhodnutiOs")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset DatumRozhodnutiOs { get; set; }

	/// <summary>
	/// Datum vyvěšení rozhodnutí
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("datumVyveseni")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset DatumVyveseni { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("spisZnOs")]
	[System.ComponentModel.DataAnnotations.StringLength(255)]
	public string SpisZnOs { get; set; }

	/// <summary>
	/// Vlastní informace o konkurzním řízení
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("text")]
	public string Text { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("zruseniKonkursu")]
	public System.Collections.Generic.ICollection<ObecnyTextVr> ZruseniKonkursu { get; set; }

}

/// <summary>
/// Odštěpný závod
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class OdstepnyZavodVr : DatumZapisuVymazuUdajeVr
{

	[System.Text.Json.Serialization.JsonPropertyName("vedouci")]
	public System.Collections.Generic.ICollection<AngazmaOsobaVr> Vedouci { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("ostatniSkutecnosti")]
	public System.Collections.Generic.ICollection<ObecnyTextVr> OstatniSkutecnosti { get; set; }

	/// <summary>
	/// Předmět podnikání, předmět činnosti, účel
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("cinnosti")]
	public CinnostiVr Cinnosti { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("ico")]
	public System.Collections.Generic.ICollection<IcoVr> Ico { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("sidlo")]
	public System.Collections.Generic.ICollection<AdresaVr> Sidlo { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("pravniForma")]
	public System.Collections.Generic.ICollection<PravniFormaVr> PravniForma { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("obchodniJmeno")]
	public System.Collections.Generic.ICollection<ObchodniJmenoVr> ObchodniJmeno { get; set; }

}

/// <summary>
/// Řídící orgán - obecný předek
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class OrganVr : DatumZapisuVymazuUdajeVr
{
	/// <summary>
	/// Název orgánu - nestandardní
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("nazevOrganu")]
	[System.ComponentModel.DataAnnotations.StringLength(255)]
	public string NazevOrganu { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("pocetClenu")]
	public System.Collections.Generic.ICollection<PocetClenuVr> PocetClenu { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("clenoveOrganu")]
	public System.Collections.Generic.ICollection<AngazmaOsobaVr> ClenoveOrganu { get; set; }

	/// <summary>
	/// Typ orgánu - kód (ciselnikKod: TypOrganu, zdroj: vr) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("typOrganu")]
	[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 1)]
	public string TypOrganu { get; set; }

	/// <summary>
	/// Název orgánu - nestandardní
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("nazevAngazma")]
	[System.ComponentModel.DataAnnotations.StringLength(255)]
	public string NazevAngazma { get; set; }

	/// <summary>
	/// Typ orgánu - kód (ciselnikKod: TypOrganu, zdroj: vr) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("typAngazma")]
	[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 1)]
	public string TypAngazma { get; set; }

}

/// <summary>
/// Podnikatel
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class PodnikatelVr : DatumZapisuVymazuUdajeVr
{

	[System.Text.Json.Serialization.JsonPropertyName("bydliste")]
	public System.Collections.Generic.ICollection<AdresaVr> Bydliste { get; set; }

	/// <summary>
	/// Informace o osobě podnikatele
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("osobaPodnikatel")]
	public AngazmaFyzickaOsobaVr OsobaPodnikatel { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("pobyt")]
	public System.Collections.Generic.ICollection<AdresaVr> Pobyt { get; set; }

	/// <summary>
	/// Typ angažmá  - kód (ciselnikKod: TypAngazma, zdroj: vr) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("typAngazma")]
	[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 1)]
	public string TypAngazma { get; set; }

	/// <summary>
	/// Název angažmá - nestandardní
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("nazevAngazma")]
	[System.ComponentModel.DataAnnotations.StringLength(255)]
	public string NazevAngazma { get; set; }

}

/// <summary>
/// Právnická osoba
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class PravnickaOsobaVr : OsobaVr
{
	/// <summary>
	/// Idenitifikační číslo právnické osoby
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("ico")]
	[System.ComponentModel.DataAnnotations.StringLength(8, MinimumLength = 8)]
	[System.ComponentModel.DataAnnotations.RegularExpression(@"^\d{8}$")]
	public string Ico { get; set; }

	/// <summary>
	/// Název právnické osoby
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("obchodniJmeno")]
	[System.ComponentModel.DataAnnotations.StringLength(2000, MinimumLength = 1)]
	public string ObchodniJmeno { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("zastoupeni")]
	public System.Collections.Generic.ICollection<AngazmaFyzickaOsobaVr> Zastoupeni { get; set; }

	/// <summary>
	/// Právní forma - kód (ciselnikKod: PravniForma, zdroj: res, com)
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("pravniForma")]
	[System.ComponentModel.DataAnnotations.StringLength(3, MinimumLength = 3)]
	[System.ComponentModel.DataAnnotations.RegularExpression(@"^\d{3}$")]
	public string PravniForma { get; set; }

}

/// <summary>
/// Společníci
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class SpolecniciVr : DatumZapisuVymazuUdajeVr
{
	/// <summary>
	/// Název orgánu - nestandardní
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("nazevOrganu")]
	[System.ComponentModel.DataAnnotations.StringLength(255)]
	public string NazevOrganu { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("spolecnik")]
	public System.Collections.Generic.ICollection<SpolecnikVr> Spolecnik { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("spolecnyPodil")]
	public System.Collections.Generic.ICollection<SpolecnyPodilVr> SpolecnyPodil { get; set; }

	/// <summary>
	/// Typ orgánu - kód (ciselnikKod: TypOrganu, zdroj: vr) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("typOrganu")]
	[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 1)]
	public string TypOrganu { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("uvolnenyPodil")]
	public System.Collections.Generic.ICollection<UvolnenyPodilVr> UvolnenyPodil { get; set; }

	/// <summary>
	/// Název orgánu - nestandardní
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("nazev")]
	[System.ComponentModel.DataAnnotations.StringLength(255)]
	public string Nazev { get; set; }

}

/// <summary>
/// Společník
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class SpolecnikVr : DatumZapisuVymazuUdajeVr
{

	[System.Text.Json.Serialization.JsonPropertyName("podil")]
	public PodilVr Podil { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("osoba")]
	public AngazmaOsobaVr Osoba { get; set; }

}

/// <summary>
/// Společný podíl
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class SpolecnyPodilVr : DatumZapisuVymazuUdajeVr
{

	[System.Text.Json.Serialization.JsonPropertyName("podilnik")]
	public System.Collections.Generic.ICollection<AngazmaOsobaVr> Podilnik { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("podil")]
	public PodilVr Podil { get; set; }

}

/// <summary>
/// Statutární orgán
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class StatutarniOrganVr : OrganVr
{

	[System.Text.Json.Serialization.JsonPropertyName("zpusobJednani")]
	public System.Collections.Generic.ICollection<ObecnyTextVr> ZpusobJednani { get; set; }

}

/// <summary>
/// Detailní informace o ekonomickém subjektu ze zdroje VR
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class ZaznamVr : ZaznamVrZaklad
{

	[System.Text.Json.Serialization.JsonPropertyName("ostatniOrgany")]
	public System.Collections.Generic.ICollection<OrganVr> OstatniOrgany { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("statutarniOrgany")]
	public System.Collections.Generic.ICollection<StatutarniOrganVr> StatutarniOrgany { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("podnikatel")]
	public System.Collections.Generic.ICollection<PodnikatelVr> Podnikatel { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("spolecnici")]
	public System.Collections.Generic.ICollection<SpolecniciVr> Spolecnici { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("odstepneZavody")]
	public System.Collections.Generic.ICollection<OdstepnyZavodVr> OdstepneZavody { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("insolvence")]
	public System.Collections.Generic.ICollection<InsolvencniRizeniVr> Insolvence { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("konkursy")]
	public System.Collections.Generic.ICollection<KonkursVr> Konkursy { get; set; }

}

/// <summary>
/// Adresa
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class AdresaVr : DatumZapisuVymazuUdajeVr
{
	/// <summary>
	/// Adresa
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("adresa")]
	public Adresa Adresa { get; set; }

	/// <summary>
	/// Typ typu adresy - kód (ciselnikKod: TypAdresy, zdroj:vr) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("typAdresy")]
	[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 1)]
	public string TypAdresy { get; set; }

}

/// <summary>
/// Členství v angažmá 
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class AngazmaClenstviVr
{
	/// <summary>
	/// Doplňující text k osobě
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("textZaOsobu")]
	public string TextZaOsobu { get; set; }

	/// <summary>
	/// Členství osoby v angažmá
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("clenstvi")]
	public ClenstviVr Clenstvi { get; set; }

	/// <summary>
	/// Funkce osoby v angažmá
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("funkce")]
	public FunkceVr Funkce { get; set; }

	/// <summary>
	/// Doplňující text k zrušení  osoby
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("textZruseni")]
	public string TextZruseni { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

/// <summary>
/// Činnosti
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class CinnostiVr
{

	[System.Text.Json.Serialization.JsonPropertyName("predmetPodnikani")]
	public System.Collections.Generic.ICollection<ObecnyTextVr> PredmetPodnikani { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("doplnkovaCinnost")]
	public System.Collections.Generic.ICollection<ObecnyTextVr> DoplnkovaCinnost { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("predmetCinnosti")]
	public System.Collections.Generic.ICollection<ObecnyTextVr> PredmetCinnosti { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("ucel")]
	public System.Collections.Generic.ICollection<ObecnyTextVr> Ucel { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

/// <summary>
/// Členství
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class ClenstviVr
{

	[System.Text.Json.Serialization.JsonPropertyName("vznikClenstvi")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset VznikClenstvi { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("zanikClenstvi")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset ZanikClenstvi { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

/// <summary>
/// Datum
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class DatumVr : DatumZapisuVymazuUdajeVr
{

	[System.Text.Json.Serialization.JsonPropertyName("hodnota")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset Hodnota { get; set; }

}

/// <summary>
/// Datum zápisu, výmazu údaje - obecný předek
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class DatumZapisuVymazuUdajeVr
{
	/// <summary>
	/// Datum zápisu údaje
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("datumZapisu")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset DatumZapisu { get; set; }

	/// <summary>
	/// Datum výmazu údaje
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("datumVymazu")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset DatumVymazu { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

/// <summary>
/// Emise akcie
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class EmiseAkcieVr : DatumZapisuVymazuUdajeVr
{
	/// <summary>
	/// Typ akcie - kód (ciselnikKod: TypAkcie) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("typAkcie")]
	[System.ComponentModel.DataAnnotations.StringLength(50)]
	public string TypAkcie { get; set; }

	/// <summary>
	/// Podoby akcií (listinná, zaknihovaná, imobilizovaná)  - kód (ciselnikKod: PodobaAkcie) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("podobaAkcie")]
	[System.ComponentModel.DataAnnotations.StringLength(50)]
	public string PodobaAkcie { get; set; }

	/// <summary>
	/// Počet akcií v emisi
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("pocet")]
	[System.ComponentModel.DataAnnotations.Range(0, int.MaxValue)]
	public int Pocet { get; set; }

	/// <summary>
	/// Doplňkový text za akcií
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("text")]
	public string Text { get; set; }

	/// <summary>
	/// Hodnota akcie
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("hodnota")]
	public ObnosVr Hodnota { get; set; }

}

/// <summary>
/// Funkce
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class FunkceVr
{
	/// <summary>
	/// Datum vzniku funkce
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("vznikFunkce")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset VznikFunkce { get; set; }

	/// <summary>
	/// Datum zániku funkce
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("zanikFunkce")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset ZanikFunkce { get; set; }

	/// <summary>
	/// Název funkce
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("nazev")]
	[System.ComponentModel.DataAnnotations.StringLength(255)]
	public string Nazev { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

/// <summary>
/// Fyzická osoba
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class FyzickaOsobaVr : OsobaVr
{
	/// <summary>
	/// Adresa bydliště fyzické osoby
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("bydliste")]
	public Adresa Bydliste { get; set; }

	/// <summary>
	/// Datum narození
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("datumNarozeni")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset DatumNarozeni { get; set; }

	/// <summary>
	/// Jméno
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("jmeno")]
	[System.ComponentModel.DataAnnotations.StringLength(100)]
	public string Jmeno { get; set; }

	/// <summary>
	/// Příjmení
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("prijmeni")]
	[System.ComponentModel.DataAnnotations.StringLength(100)]
	public string Prijmeni { get; set; }

	/// <summary>
	/// Státní občanství osoby - kod (ciselnikKod: Stat)
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("statniObcanstvi")]
	[System.ComponentModel.DataAnnotations.StringLength(3, MinimumLength = 3)]
	public string StatniObcanstvi { get; set; }

	/// <summary>
	/// Titul před jménem
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("titulPredJmenem")]
	[System.ComponentModel.DataAnnotations.StringLength(32)]
	public string TitulPredJmenem { get; set; }

	/// <summary>
	/// Titul za jménem
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("titulZaJmenem")]
	[System.ComponentModel.DataAnnotations.StringLength(32)]
	public string TitulZaJmenem { get; set; }

}

/// <summary>
/// Ićo
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class IcoVr : DatumZapisuVymazuUdajeVr
{
	/// <summary>
	/// Hodnota IČO
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("hodnota")]
	[System.ComponentModel.DataAnnotations.StringLength(8, MinimumLength = 8)]
	[System.ComponentModel.DataAnnotations.RegularExpression(@"^\d{8}$")]
	public string Hodnota { get; set; }

}

/// <summary>
/// Insolvenční zápis
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class InsolvencniZapisVr : DatumZapisuVymazuUdajeVr
{

	[System.Text.Json.Serialization.JsonPropertyName("text")]
	public string Text { get; set; }

	/// <summary>
	/// Typ insolvenčního zápisu- kód (ciselnikKod: TypInsolvencnihoZapisu) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("typZapisu")]
	[System.ComponentModel.DataAnnotations.StringLength(50)]
	public string TypZapisu { get; set; }

}

/// <summary>
/// Kategorie zahraniční organizace
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class KategorieZoVr : DatumZapisuVymazuUdajeVr
{
	/// <summary>
	/// Typ kategorie zahraniční osoby - kód (ciselnikKod: KategorieZo) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("typKategorieZo")]
	[System.ComponentModel.DataAnnotations.StringLength(50)]
	public string TypKategorieZo { get; set; }

}

/// <summary>
/// Obecný text
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class ObecnyTextVr : DatumZapisuVymazuUdajeVr
{

	[System.Text.Json.Serialization.JsonPropertyName("hodnota")]
	public string Hodnota { get; set; }

}

/// <summary>
/// Obchodní jméno - cizí
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class ObchodniJmenoCiziVr : ObchodniJmenoVr
{
	/// <summary>
	/// jazyk
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("jazyk")]
	[System.ComponentModel.DataAnnotations.StringLength(255)]
	public string Jazyk { get; set; }

}

/// <summary>
/// Obchodní jméno - obecný předek
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class ObchodniJmenoVr : DatumZapisuVymazuUdajeVr
{
	/// <summary>
	/// Hodnota obchodního jména
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("hodnota")]
	[System.ComponentModel.DataAnnotations.StringLength(2000, MinimumLength = 1)]
	public string Hodnota { get; set; }

}

/// <summary>
/// Obnos
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class ObnosVr
{
	/// <summary>
	/// Typ obnosu - kód (ciselnikKod: TypObnosu)
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("typObnos")]
	[System.ComponentModel.DataAnnotations.StringLength(50)]
	public string TypObnos { get; set; }

	/// <summary>
	/// Hodnota
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("hodnota")]
	public string Hodnota { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

/// <summary>
/// Osoba - obecný předek
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class OsobaVr
{
	/// <summary>
	/// Doplňková informace k osobě
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("textOsoba")]
	public string TextOsoba { get; set; }

	/// <summary>
	/// Platnost doplňkové informace o osobě od data
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("textOsobaOd")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset TextOsobaOd { get; set; }

	/// <summary>
	/// Primární adresa dané osoby (u fyzické pobyt, u právnické sídlo)
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("adresa")]
	public Adresa Adresa { get; set; }

	/// <summary>
	/// Platnost doplňkové informace o osobě od data
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("textOsobaDo")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset TextOsobaDo { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

/// <summary>
/// Počet členů orgánu
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class PocetClenuVr : DatumZapisuVymazuUdajeVr
{

	[System.Text.Json.Serialization.JsonPropertyName("pocetClenu")]
	[System.ComponentModel.DataAnnotations.Range(0, int.MaxValue)]
	public int PocetClenu { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("maxPocetClenu")]
	[System.ComponentModel.DataAnnotations.Range(0, int.MaxValue)]
	public int MaxPocetClenu { get; set; }

	/// <summary>
	/// Typ počet členů - kód (ciselnikKod: TypPocetClenu) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("typ")]
	[System.ComponentModel.DataAnnotations.StringLength(15)]
	public string Typ { get; set; }

}

/// <summary>
/// Podíl
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class PodilVr : DatumZapisuVymazuUdajeVr
{

	[System.Text.Json.Serialization.JsonPropertyName("text")]
	public string Text { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("vklad")]
	public ObnosVr Vklad { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("velikostPodilu")]
	public ObnosVr VelikostPodilu { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("splaceni")]
	public ObnosVr Splaceni { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("zastavniPravo")]
	public System.Collections.Generic.ICollection<ZastavniPravoVr> ZastavniPravo { get; set; }

}

/// <summary>
/// Právní forma
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class PravniFormaVr : DatumZapisuVymazuUdajeVr
{
	/// <summary>
	/// Hodnota pravní formy - kód (ciselnikKod: PravniForma, zdroj:res, com) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("hodnota")]
	[System.ComponentModel.DataAnnotations.StringLength(3, MinimumLength = 3)]
	[System.ComponentModel.DataAnnotations.RegularExpression(@"^\d{3}$")]
	public string Hodnota { get; set; }

}

/// <summary>
/// Spisová značka
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class SpisovaZnackaVr : DatumZapisuVymazuUdajeVr
{
	/// <summary>
	/// Obchodní soud - kód (ciselnikKod: SoudVr, zdroj: vr) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("soud")]
	[System.ComponentModel.DataAnnotations.StringLength(15)]
	public string Soud { get; set; }

	/// <summary>
	/// Oddíl spisové značky
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("oddil")]
	[System.ComponentModel.DataAnnotations.StringLength(20)]
	public string Oddil { get; set; }

	/// <summary>
	/// Vlozka spisové značky
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("vlozka")]
	public int Vlozka { get; set; }

}

/// <summary>
/// Uvolněný podíl
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class UvolnenyPodilVr : DatumZapisuVymazuUdajeVr
{
	/// <summary>
	/// Text k uvolněnému podílu
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("clenstvi")]
	public AngazmaClenstviVr Clenstvi { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("podil")]
	public PodilVr Podil { get; set; }

}

/// <summary>
/// Vklady
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class VkladVr : DatumZapisuVymazuUdajeVr
{

	[System.Text.Json.Serialization.JsonPropertyName("vklad")]
	public ObnosVr Vklad { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("text")]
	public string Text { get; set; }

	/// <summary>
	/// Typ vkladu - kód (ciselnikKod: TypObnosu)
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("typVkladu")]
	[System.ComponentModel.DataAnnotations.StringLength(50)]
	public string TypVkladu { get; set; }

}

/// <summary>
///  Základní kapitál
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class ZakladniKapitalVr : DatumZapisuVymazuUdajeVr
{
	/// <summary>
	/// Typ jmění - kód (ciselnikKod: TypJmeni)
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("typJmeni")]
	[System.ComponentModel.DataAnnotations.StringLength(50)]
	public string TypJmeni { get; set; }

	/// <summary>
	/// Doplňující text
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("text")]
	public string Text { get; set; }

	/// <summary>
	/// Celkový vklad
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("vklad")]
	public ObnosVr Vklad { get; set; }

	/// <summary>
	/// Informace o splacení
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("splaceni")]
	public ObnosVr Splaceni { get; set; }

}

/// <summary>
/// Zástavní právo
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class ZastavniPravoVr : DatumZapisuVymazuUdajeVr
{

	[System.Text.Json.Serialization.JsonPropertyName("text")]
	public string Text { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("vznikZastavnihoPrava")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset VznikZastavnihoPrava { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("zanikZastavnihoPrava")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset ZanikZastavnihoPrava { get; set; }

}

/// <summary>
/// Detailní informace o ekonomickém subjektu - obecný předek
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class ZaznamVrZaklad
{

	[System.Text.Json.Serialization.JsonPropertyName("akcie")]
	public System.Collections.Generic.ICollection<EmiseAkcieVr> Akcie { get; set; }

	/// <summary>
	/// Typ veřejného rejstříku (VR) - kód (ciselnikKod: TypRejstriku ) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("rejstrik")]
	[System.ComponentModel.DataAnnotations.StringLength(15)]
	public string Rejstrik { get; set; }

	/// <summary>
	/// Primární záznam
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("primarniZaznam")]
	public bool PrimarniZaznam { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("spisovaZnacka")]
	public System.Collections.Generic.ICollection<SpisovaZnackaVr> SpisovaZnacka { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("ico")]
	public System.Collections.Generic.ICollection<IcoVr> Ico { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("obchodniJmeno")]
	public System.Collections.Generic.ICollection<ObchodniJmenoVr> ObchodniJmeno { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("vklady")]
	public System.Collections.Generic.ICollection<VkladVr> Vklady { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("obchodniJmenoCizi")]
	public System.Collections.Generic.ICollection<ObchodniJmenoCiziVr> ObchodniJmenoCizi { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("zakladniKapital")]
	public System.Collections.Generic.ICollection<ZakladniKapitalVr> ZakladniKapital { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("pravniForma")]
	public System.Collections.Generic.ICollection<PravniFormaVr> PravniForma { get; set; }

	/// <summary>
	/// Finanční úřad - kód (ciselnikKod: FinancniUrad, zdroj: ufo) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("financniUrad")]
	[System.ComponentModel.DataAnnotations.StringLength(3, MinimumLength = 3)]
	[System.ComponentModel.DataAnnotations.RegularExpression(@"^\d{3}$")]
	public string FinancniUrad { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("adresy")]
	public System.Collections.Generic.ICollection<AdresaVr> Adresy { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("ostatniSkutecnosti")]
	public System.Collections.Generic.ICollection<ObecnyTextVr> OstatniSkutecnosti { get; set; }

	/// <summary>
	/// Datum aktualizace
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("datumAktualizace")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset DatumAktualizace { get; set; }

	/// <summary>
	/// Stav ekonomického subjektu v ARES - kód (ciselnikKod: StavZdroje, zdroj:com) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("stavSubjektu")]
	[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 1)]
	public string StavSubjektu { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("datumVzniku")]
	public System.Collections.Generic.ICollection<DatumVr> DatumVzniku { get; set; }

	/// <summary>
	/// Datum zápisu subjektu do VR
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("datumZapisu")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset DatumZapisu { get; set; }

	/// <summary>
	/// Datum výmazu subjektu z VR
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("datumVymazu")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset DatumVymazu { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("zpusobRizeni")]
	public System.Collections.Generic.ICollection<ZpusobRizeniVr> ZpusobRizeni { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("kategorieZO")]
	public System.Collections.Generic.ICollection<KategorieZoVr> KategorieZO { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("pravniDuvodVymazu")]
	public System.Collections.Generic.ICollection<ObecnyTextVr> PravniDuvodVymazu { get; set; }

	/// <summary>
	/// Předmět podnikání, předmět činnosti, účel
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("cinnosti")]
	public CinnostiVr Cinnosti { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("nazevNejvyssihoOrganu")]
	public System.Collections.Generic.ICollection<ObecnyTextVr> NazevNejvyssihoOrganu { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("exekuce")]
	public System.Collections.Generic.ICollection<ObecnyTextVr> Exekuce { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

/// <summary>
/// Způsob řízení
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class ZpusobRizeniVr : DatumZapisuVymazuUdajeVr
{
	/// <summary>
	/// Způsob řízení - kód (ciselnikKod: TypZpusobuRizeni) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("typ")]
	[System.ComponentModel.DataAnnotations.StringLength(50)]
	public string Typ { get; set; }

}

/// <summary>
/// Statistické informace o subjektu
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class StatistickeUdaje
{
	/// <summary>
	/// Institucinální sektor dle ESA2010 - kód (ciselnikKod: FceVladnichInstituci) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("institucionalniSektor2010")]
	[System.ComponentModel.DataAnnotations.StringLength(5, MinimumLength = 5)]
	[System.ComponentModel.DataAnnotations.RegularExpression(@"^\d{5}$")]
	public string InstitucionalniSektor2010 { get; set; }

	/// <summary>
	/// Kategorie dle počtu pracovníků - kód (ciselnikKod: KategoriePoctuPracovniku, zdroj: res) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("kategoriePoctuPracovniku")]
	[System.ComponentModel.DataAnnotations.StringLength(3, MinimumLength = 3)]
	[System.ComponentModel.DataAnnotations.RegularExpression(@"^\d{3}$")]
	public string KategoriePoctuPracovniku { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

/// <summary>
/// Detailní informace o ekonomickém subjektu ze zdroje RES
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class ZaznamRes : EkonomickySubjektZaklad
{
	/// <summary>
	/// Právní forma ROS - kód (ciselnikKod: PravniFormaRos, zdroj:res) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("pravniFormaRos")]
	[System.ComponentModel.DataAnnotations.StringLength(3, MinimumLength = 3)]
	[System.ComponentModel.DataAnnotations.RegularExpression(@"^\d{3}$")]
	public string PravniFormaRos { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("czNace")]
	public System.Collections.Generic.ICollection<string> CzNace { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("doplnkovePravniFormy")]
	public System.Collections.Generic.ICollection<string> DoplnkovePravniFormy { get; set; }

	/// <summary>
	/// Statistické údaje ekonomického subjektu
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("statistickeUdaje")]
	public StatistickeUdaje StatistickeUdaje { get; set; }

	/// <summary>
	/// Základní územní jednotka sídla organizace - kód (ciselnikKod: ZakladniUzemniJednotka) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("zakladniUzemniJednotka")]
	[System.ComponentModel.DataAnnotations.StringLength(6, MinimumLength = 6)]
	[System.ComponentModel.DataAnnotations.RegularExpression(@"^\d{6}$")]
	public string ZakladniUzemniJednotka { get; set; }

	/// <summary>
	/// Logická informace o primárním(hlavním) záznamu ekonomického subjektu. 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("primarniZaznam")]
	public bool PrimarniZaznam { get; set; }

}

/// <summary>
/// Seznam ekonomických subjektů ze zdroje RES
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class EkonomickeSubjektyResSeznam : Seznam
{

	[System.Text.Json.Serialization.JsonPropertyName("ekonomickeSubjekty")]
	public System.Collections.Generic.ICollection<EkonomickySubjektRes> EkonomickeSubjekty { get; set; }

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class EkonomickySubjektRes
{
	/// <summary>
	/// ičo/id ekonomického subjektu 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("icoId")]
	[System.ComponentModel.DataAnnotations.StringLength(32)]
	[System.ComponentModel.DataAnnotations.RegularExpression(@"^(ARES_)?\d{8}$")]
	public string IcoId { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("zaznamy")]
	public System.Collections.Generic.ICollection<ZaznamRes> Zaznamy { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class AngazovanySubjektAdresa : Adresa
{
	/// <summary>
	/// Platnost adresy od data
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("platnostOd")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset PlatnostOd { get; set; }

	/// <summary>
	/// Platnost adresy do data
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("platnostDo")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset PlatnostDo { get; set; }

}

/// <summary>
/// Právnické osoby v angažmá ekonomického subjektu. 
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class AngazovanySubjektRzpZaklad
{
	/// <summary>
	/// Typ angažmá osoby u subjektu ve zdroji RŽP (Registr živnostenského podnikání) - kód (ciselnikKod: TypAngazma, zdroj: rzp) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("typAngazma")]
	[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 1)]
	public string TypAngazma { get; set; }

	/// <summary>
	/// Platnost angažmá subjektu od data
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("platnostOd")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset PlatnostOd { get; set; }

	/// <summary>
	/// Platnost angažmá subjektu do data
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("platnostDo")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset PlatnostDo { get; set; }

	/// <summary>
	/// Ičo angažovaného subjektu
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("ico")]
	[System.ComponentModel.DataAnnotations.StringLength(8, MinimumLength = 8)]
	[System.ComponentModel.DataAnnotations.RegularExpression(@"^\d{8}$")]
	public string Ico { get; set; }

	/// <summary>
	/// obchodní jméno angažovaného subjektu
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("obchodniJmeno")]
	[System.ComponentModel.DataAnnotations.StringLength(2000, MinimumLength = 1)]
	public string ObchodniJmeno { get; set; }

	/// <summary>
	/// Adresa sídla angažovaného subjektu
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("sidlo")]
	public AngazovanySubjektAdresa Sidlo { get; set; }

	/// <summary>
	/// Typ subjektu - kód (ciselnikKod: TypSubjektu, zdroj: rzp) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("typSubjektu")]
	[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 1)]
	public string TypSubjektu { get; set; }

	/// <summary>
	/// Právní forma - kód (ciselnikKod: PravniForma, zdroj:com, res) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("pravniForma")]
	[System.ComponentModel.DataAnnotations.StringLength(3, MinimumLength = 3)]
	[System.ComponentModel.DataAnnotations.RegularExpression(@"^\d{3}$")]
	public string PravniForma { get; set; }

	/// <summary>
	/// Kód státu (ciselnikKod: Stat, zdroj:com) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("kodStatu")]
	[System.ComponentModel.DataAnnotations.StringLength(3, MinimumLength = 3)]
	public string KodStatu { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

/// <summary>
/// Vazební tabulka adres
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class EkonomickySubjektRzpAdresa : Adresa
{
	/// <summary>
	/// Platnost adresy od data
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("platnostOd")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset PlatnostOd { get; set; }

	/// <summary>
	/// Platnost adresy do data 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("platnostDo")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset PlatnostDo { get; set; }

	/// <summary>
	/// Typ adresy  - kód (ciselnikKod: TypAdresy, zdroj: rzp) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("typAdresy")]
	[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 1)]
	public string TypAdresy { get; set; }

}

/// <summary>
/// Události v rámci insolvenčního řízení
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class InsolvencniRizeni
{
	/// <summary>
	/// Datum zápisu události 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("datumZapisu")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset DatumZapisu { get; set; }

	/// <summary>
	/// Datum zplatnění události 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("platnostOd")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset PlatnostOd { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class ProvozovnaZaklad
{
	/// <summary>
	/// Adresa sídla provozovny
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("sidloProvozovny")]
	public Adresa SidloProvozovny { get; set; }

	/// <summary>
	/// Umístění provozovny
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("umisteniProvozovny")]
	[System.ComponentModel.DataAnnotations.StringLength(254)]
	public string UmisteniProvozovny { get; set; }

	/// <summary>
	/// Platnost provozovny od data
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("platnostOd")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset PlatnostOd { get; set; }

	/// <summary>
	/// Platnost provozovny do data 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("platnostDo")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset PlatnostDo { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("pozastaveniProvozovny")]
	public System.Collections.Generic.ICollection<ZivnostProvozovnaPozastaveni> PozastaveniProvozovny { get; set; }

	/// <summary>
	/// Typ provozovny - kód (ciselnikKod: TypProvozovny) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("typProvozovny")]
	[System.ComponentModel.DataAnnotations.StringLength(1, MinimumLength = 1)]
	[System.ComponentModel.DataAnnotations.RegularExpression(@"^\d{1}$")]
	public string TypProvozovny { get; set; }

	/// <summary>
	/// Název provozovny
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("nazev")]
	[System.ComponentModel.DataAnnotations.StringLength(254)]
	public string Nazev { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class ProvozovnyRzpStav
{
	/// <summary>
	/// Celkový počet provozoven
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("pocetCelkem")]
	[System.ComponentModel.DataAnnotations.Range(0, int.MaxValue)]
	public int PocetCelkem { get; set; }

	/// <summary>
	/// Celkový počet zaniklých provozoven
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("pocetZaniklych")]
	[System.ComponentModel.DataAnnotations.Range(0, int.MaxValue)]
	public int PocetZaniklych { get; set; }

	/// <summary>
	/// Celkový počet aktivnich provozoven
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("pocetAktivnich")]
	[System.ComponentModel.DataAnnotations.Range(0, int.MaxValue)]
	public int PocetAktivnich { get; set; }

	/// <summary>
	/// Celkový počet zaniklých provozoven
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("pocetPozastavenych")]
	[System.ComponentModel.DataAnnotations.Range(0, int.MaxValue)]
	public int PocetPozastavenych { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

/// <summary>
/// Detailní informace o ekonomickém subjektu ze zdroje RŽP
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class ZaznamRzpZaklad : EkonomickySubjektZaklad
{
	/// <summary>
	/// Události v rámci insolvenčního řízení
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("insolvencniRizeni")]
	public InsolvencniRizeni InsolvencniRizeni { get; set; }

	/// <summary>
	/// Datum doručení prvního výpisu sloužícího jako průkaz živnostenského podnikání, 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("datumDoruceniVypisu")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset DatumDoruceniVypisu { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("adresySubjektu")]
	public System.Collections.Generic.ICollection<EkonomickySubjektRzpAdresa> AdresySubjektu { get; set; }

	/// <summary>
	/// Typ subjektu - kód (ciselnikKod: TypSubjektu, zdroj: rzp) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("typSubjektu")]
	[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 1)]
	public string TypSubjektu { get; set; }

	/// <summary>
	/// Živnostenský úřadu - kód
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("zivnostenskyUrad")]
	[System.ComponentModel.DataAnnotations.RegularExpression(@"^\d{6}$")]
	public string ZivnostenskyUrad { get; set; }

	/// <summary>
	/// Název organizační složky
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("organizacniSlozka")]
	[System.ComponentModel.DataAnnotations.StringLength(2000, MinimumLength = 1)]
	public string OrganizacniSlozka { get; set; }

	/// <summary>
	/// Stav živnosti - kód (ciselnikKod: StavZivnosti) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("zivnostiStav")]
	public ZivnostiRzpStav ZivnostiStav { get; set; }

	/// <summary>
	/// Datum zápisu do Obchodního nebo podobného rejstříku 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("datumZapisuVr")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset DatumZapisuVr { get; set; }

	/// <summary>
	/// Stav provozovny - kód (ciselnikKod: StavProvozovny) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("provozovnyStav")]
	public ProvozovnyRzpStav ProvozovnyStav { get; set; }

	/// <summary>
	/// Identifikace primárního záznamu  pozn.: U multiplicitních registrací je pouze jedna registrace primární
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("primarniZaznam")]
	public bool PrimarniZaznam { get; set; }

	/// <summary>
	/// Kód státu  (ciselnikKod: Stat, zdroj:com) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("kodStatu")]
	[System.ComponentModel.DataAnnotations.StringLength(3, MinimumLength = 3)]
	public string KodStatu { get; set; }

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class ZivnostBezOZ
{
	/// <summary>
	/// Zahájení vykonávání živnosti bez odpovědného zástupce od data 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("platnostOd")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset PlatnostOd { get; set; }

	/// <summary>
	/// Ukončení vykonávání živnosti bez odpovědného zástupce od data 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("platnostDo")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset PlatnostDo { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class ZivnostiRzpStav
{
	/// <summary>
	/// Celkový počet aktivních živností
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("pocetAktivnich")]
	[System.ComponentModel.DataAnnotations.Range(0, int.MaxValue)]
	public int PocetAktivnich { get; set; }

	/// <summary>
	/// Celkový počet zaniklých živností
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("pocetZaniklych")]
	[System.ComponentModel.DataAnnotations.Range(0, int.MaxValue)]
	public int PocetZaniklych { get; set; }

	/// <summary>
	/// Celkový počet zaniklých živností
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("pocetPozastavenych")]
	[System.ComponentModel.DataAnnotations.Range(0, int.MaxValue)]
	public int PocetPozastavenych { get; set; }

	/// <summary>
	/// Celkový počet zaniklých živností
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("pocetPrerusenych")]
	[System.ComponentModel.DataAnnotations.Range(0, int.MaxValue)]
	public int PocetPrerusenych { get; set; }

	/// <summary>
	/// Celkový počet živností
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("pocetCelkem")]
	[System.ComponentModel.DataAnnotations.Range(0, int.MaxValue)]
	public int PocetCelkem { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class ZivnostOborCinnosti
{
	/// <summary>
	/// Platnost záznamu od data
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("platnostOd")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset PlatnostOd { get; set; }

	/// <summary>
	/// Platnost záznamu do data
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("platnostDo")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset PlatnostDo { get; set; }

	/// <summary>
	/// Název oboru
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("oborNazev")]
	[System.ComponentModel.DataAnnotations.StringLength(750, MinimumLength = 5)]
	public string OborNazev { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

/// <summary>
/// Podmínky pro vykonávání živnosti
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class ZivnostPodminky
{
	/// <summary>
	/// Platnost podmínky od data
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("platnostOd")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset PlatnostOd { get; set; }

	/// <summary>
	/// Platnost podmínky do data
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("platnostDo")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset PlatnostDo { get; set; }

	/// <summary>
	/// Text podmínky provozování živnosti
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("podminka")]
	public string Podminka { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class ZivnostPreruseni
{
	/// <summary>
	/// Platnost přerušení živnosti od data
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("platnostOd")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset PlatnostOd { get; set; }

	/// <summary>
	/// Platnost přerušení živnosti do data
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("platnostDo")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset PlatnostDo { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class ZivnostProvozovnaPozastaveni
{
	/// <summary>
	/// Platnost pozastavení živnosti od data
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("platnostOd")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset PlatnostOd { get; set; }

	/// <summary>
	/// Platnost pozastavení živnosti do data
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("platnostDo")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset PlatnostDo { get; set; }

	/// <summary>
	/// Popis rozsahu pozastavení živnosti
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("rozsahPozastaveni")]
	[System.ComponentModel.DataAnnotations.StringLength(1024)]
	public string RozsahPozastaveni { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

/// <summary>
/// Živnosti, které ekonomický subjekt provozuje nebo provozoval
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class ZivnostZaklad
{
	/// <summary>
	/// Datum vzniku živnosti 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("datumVzniku")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset DatumVzniku { get; set; }

	/// <summary>
	/// Datum zániku živnosti 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("datumZaniku")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset DatumZaniku { get; set; }

	/// <summary>
	/// Platnost živnosti do data
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("platnostDo")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset PlatnostDo { get; set; }

	/// <summary>
	/// Předmět podnikáni živnosti
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("predmetPodnikani")]
	[System.ComponentModel.DataAnnotations.StringLength(750, MinimumLength = 5)]
	public string PredmetPodnikani { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("pozastaveniZivnosti")]
	public System.Collections.Generic.ICollection<ZivnostProvozovnaPozastaveni> PozastaveniZivnosti { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("podminkyProvozovaniZivnosti")]
	public System.Collections.Generic.ICollection<ZivnostPodminky> PodminkyProvozovaniZivnosti { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("preruseniZivnosti")]
	public System.Collections.Generic.ICollection<ZivnostPreruseni> PreruseniZivnosti { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("zivnostBezOz")]
	public System.Collections.Generic.ICollection<ZivnostBezOZ> ZivnostBezOz { get; set; }

	/// <summary>
	/// Datum aktualizace záznamu
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("datumAktualizace")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset DatumAktualizace { get; set; }

	/// <summary>
	/// Druh živnosti - kód (ciselnikKod: DruhZivnosti) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("druhZivnosti")]
	[System.ComponentModel.DataAnnotations.StringLength(1, MinimumLength = 1)]
	public string DruhZivnosti { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

/// <summary>
/// Angažovaná osoba zdroje RŽP
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class AngazovanaOsobaRzp : AngazovanaOsoba
{
	/// <summary>
	/// Platnost angažmá osoby od data
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("platnostOd")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset PlatnostOd { get; set; }

	/// <summary>
	/// Platnost angažmá osoby do data 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("platnostDo")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset PlatnostDo { get; set; }

	/// <summary>
	/// Státní občanství osoby - kód (ciselnikKod: Stat)
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("statniObcanstvi")]
	[System.ComponentModel.DataAnnotations.StringLength(3, MinimumLength = 3)]
	public string StatniObcanstvi { get; set; }

	/// <summary>
	/// Typ angažmá osoby  - kód (ciselnikKod: TypAngazma, zdroj: rzp) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("typAngazma")]
	[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 1)]
	public string TypAngazma { get; set; }

}

/// <summary>
/// Právnické osoby v angažmá ekonomického subjektu. 
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class AngazovanySubjektRzp : AngazovanySubjektRzpZaklad
{

	[System.Text.Json.Serialization.JsonPropertyName("osobyZastupce")]
	public System.Collections.Generic.ICollection<AngazovanaOsobaRzp> OsobyZastupce { get; set; }

}

/// <summary>
/// Seznam ekonomických subjektů ze zdroje RŽP
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class EkonomickeSubjektyRzpSeznam : Seznam
{

	[System.Text.Json.Serialization.JsonPropertyName("ekonomickeSubjekty")]
	public System.Collections.Generic.ICollection<EkonomickySubjektRzp> EkonomickeSubjekty { get; set; }

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class EkonomickySubjektRzp
{
	/// <summary>
	/// ičo/id ekonomického subjektu
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("icoId")]
	[System.ComponentModel.DataAnnotations.StringLength(32)]
	[System.ComponentModel.DataAnnotations.RegularExpression(@"^(ARES_)?\d{8}$")]
	public string IcoId { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("zaznamy")]
	public System.Collections.Generic.ICollection<ZaznamRzp> Zaznamy { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class Provozovna : ProvozovnaZaklad
{

	[System.Text.Json.Serialization.JsonPropertyName("oboryCinnosti")]
	public System.Collections.Generic.ICollection<ZivnostOborCinnosti> OboryCinnosti { get; set; }

}

/// <summary>
/// Detailní informace o ekonomickém subjektu ze zdroje RŽP
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class ZaznamRzp : ZaznamRzpZaklad
{

	[System.Text.Json.Serialization.JsonPropertyName("souvisejiciSubjekty")]
	public System.Collections.Generic.ICollection<AngazovanySubjektRzp> SouvisejiciSubjekty { get; set; }

	/// <summary>
	/// Informace o podnikateli
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("osobaPodnikatel")]
	public AngazovanaOsobaRzp OsobaPodnikatel { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("angazovaneOsoby")]
	public System.Collections.Generic.ICollection<AngazovanaOsobaRzp> AngazovaneOsoby { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("zivnosti")]
	public System.Collections.Generic.ICollection<Zivnost> Zivnosti { get; set; }

}

/// <summary>
/// Živnosti, které ekonomický subjekt provozuje nebo provozoval ve zdroji RŽP
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class Zivnost : ZivnostZaklad
{

	[System.Text.Json.Serialization.JsonPropertyName("oboryCinnosti")]
	public System.Collections.Generic.ICollection<ZivnostOborCinnosti> OboryCinnosti { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("odpovedniZastupci")]
	public System.Collections.Generic.ICollection<AngazovanaOsobaRzp> OdpovedniZastupci { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("provozovny")]
	public System.Collections.Generic.ICollection<Provozovna> Provozovny { get; set; }

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class AngazovanaOsobaNrpzs : AngazovanaOsoba
{
	/// <summary>
	/// Typ angažmá osoby  - kód (ciselnikKod: TypAngazma, zdroj: nrpzs) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("typAngazma")]
	[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 1)]
	public string TypAngazma { get; set; }

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class Kontakty
{
	/// <summary>
	/// Email zdravotnického zařízení 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("email")]
	[System.ComponentModel.DataAnnotations.StringLength(50)]
	public string Email { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("fax")]
	[System.ComponentModel.DataAnnotations.StringLength(25, MinimumLength = 1)]
	public string Fax { get; set; }

	/// <summary>
	/// Telefoní kontakt
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("telefon")]
	[System.ComponentModel.DataAnnotations.StringLength(25, MinimumLength = 1)]
	public string Telefon { get; set; }

	/// <summary>
	/// WWW zdravotnického zařízení
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("www")]
	[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength = 1)]
	public string Www { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class ZaznamNrpzs : EkonomickySubjektZaklad
{
	/// <summary>
	/// Pořadové číslo zařízení 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("poradoveCisloZar")]
	[System.ComponentModel.DataAnnotations.StringLength(3, MinimumLength = 3)]
	[System.ComponentModel.DataAnnotations.RegularExpression(@"'^\d{3}$'")]
	public string PoradoveCisloZar { get; set; }

	/// <summary>
	/// Pořadové číslo pracovistě 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("poradoveCisloPrac")]
	[System.ComponentModel.DataAnnotations.StringLength(3, MinimumLength = 3)]
	[System.ComponentModel.DataAnnotations.RegularExpression(@"'^\d{3}$'")]
	public string PoradoveCisloPrac { get; set; }

	/// <summary>
	/// Typ ekonomického subjektu - forma hospodaření - kód (ciselnikKod: TypSubjektu, zdroj: nrpzs)
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("typSubjektu")]
	[System.ComponentModel.DataAnnotations.StringLength(2, MinimumLength = 2)]
	public string TypSubjektu { get; set; }

	/// <summary>
	/// Druh zdravotnického zařízení - kód (ciselnikKod: DruhZarizeni, zdroj: nrpzs)
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("druhZarizeni")]
	[System.ComponentModel.DataAnnotations.StringLength(3, MinimumLength = 3)]
	[System.ComponentModel.DataAnnotations.RegularExpression(@"'^\d{3}$'")]
	public string DruhZarizeni { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("primarniZaznam")]
	public bool PrimarniZaznam { get; set; }

	/// <summary>
	/// Typ zřizovatele zdravotnického zařízení - kód (ciselnikKod: Zrizovatel, zdroj: nrpzs) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("typZrizovatele")]
	[System.ComponentModel.DataAnnotations.StringLength(1, MinimumLength = 1)]
	public string TypZrizovatele { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("angazovaneOsoby")]
	public System.Collections.Generic.ICollection<AngazovanaOsobaNrpzs> AngazovaneOsoby { get; set; }

	/// <summary>
	/// Kontakty pro komunikaci se zdravotnickéhým zažízením
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("kontakty")]
	public Kontakty Kontakty { get; set; }

}

/// <summary>
/// Seznam ekonomických subjektů ze zdroje NRPZS
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class EkonomickeSubjektyNrpzsSeznam : Seznam
{

	[System.Text.Json.Serialization.JsonPropertyName("ekonomickeSubjekty")]
	public System.Collections.Generic.ICollection<EkonomickySubjektNrpzs> EkonomickeSubjekty { get; set; }

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class EkonomickySubjektNrpzs
{
	/// <summary>
	/// ičo/id ekonomického subjektu 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("icoId")]
	[System.ComponentModel.DataAnnotations.StringLength(32)]
	[System.ComponentModel.DataAnnotations.RegularExpression(@"^(ARES_)?\d{8}$")]
	public string IcoId { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("zaznamy")]
	public System.Collections.Generic.ICollection<ZaznamNrpzs> Zaznamy { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

/// <summary>
/// Identifikace fyzické osoby statutárního orgánu subjektu. 
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class AngazovanaOsobaRpsh : AngazovanaOsoba
{
	/// <summary>
	/// Název fukce
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("funkce")]
	[System.ComponentModel.DataAnnotations.StringLength(120)]
	public string Funkce { get; set; }

	/// <summary>
	/// Platnost záznamu od data
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("platnostOd")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset PlatnostOd { get; set; }

	/// <summary>
	/// Platnost záznamu do data 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("platnostDo")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset PlatnostDo { get; set; }

	/// <summary>
	/// adresa angažované osoby
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("adresa")]
	public Adresa Adresa { get; set; }

	/// <summary>
	/// Kód fukce
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("kod")]
	[System.ComponentModel.DataAnnotations.StringLength(10)]
	public string Kod { get; set; }

	/// <summary>
	/// Typ angažmá osoby  - kód (ciselnikKod: TypAngazma) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("typAngazma")]
	[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 1)]
	public string TypAngazma { get; set; }

}

/// <summary>
/// Informace o způsobu jednání právnické osoby. 
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class StatutarniOrgan
{
	/// <summary>
	/// Platnost záznamu od data 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("platnostOd")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset PlatnostOd { get; set; }

	/// <summary>
	/// Texty způsobu jednání právnické osoby. 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("popis")]
	[System.ComponentModel.DataAnnotations.StringLength(1000)]
	public string Popis { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

/// <summary>
/// Stav, ve kterém se subjekt nachází, s udáním počátku platnosti. 
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class StavSubjektu
{
	/// <summary>
	/// Popis stavu subjektu
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("popis")]
	[System.ComponentModel.DataAnnotations.StringLength(1000)]
	public string Popis { get; set; }

	/// <summary>
	/// Platnost záznamu od data 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("platnostOd")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset PlatnostOd { get; set; }

	/// <summary>
	/// Stav ekonomického subjektu - kód (ciselnikKod: StavSubjektu(zdroj:rpsh) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("stavSubjektu")]
	[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 1)]
	public string StavSubjektu1 { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

/// <summary>
/// Detailní informace o ekonomickém subjektu ze zdroje RPSH
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class ZaznamRpsh : EkonomickySubjektZaklad
{
	/// <summary>
	/// Číslo registrace
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("cisloRegistrace")]
	[System.ComponentModel.DataAnnotations.StringLength(20)]
	public string CisloRegistrace { get; set; }

	/// <summary>
	/// Typ subjektu - strana/hnutí - kód (ciselnikKod: TypSubjektuRpsh) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("typSubjektu")]
	[System.ComponentModel.DataAnnotations.RegularExpression(@"^\d{1}$")]
	public string TypSubjektu { get; set; }

	/// <summary>
	/// Obchodní jméno zkrácené
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("obchodniJmenoZkratka")]
	[System.ComponentModel.DataAnnotations.StringLength(1000)]
	public string ObchodniJmenoZkratka { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("angazovaneOsoby")]
	public System.Collections.Generic.ICollection<AngazovanaOsobaRpsh> AngazovaneOsoby { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("primarniZaznam")]
	public bool PrimarniZaznam { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("zmenaStanov")]
	public System.Collections.Generic.ICollection<ZmenaStanov> ZmenaStanov { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("statutarniOrgan")]
	public System.Collections.Generic.ICollection<StatutarniOrgan> StatutarniOrgan { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("stavSubjektu")]
	public System.Collections.Generic.ICollection<StavSubjektu> StavSubjektu { get; set; }

}

/// <summary>
/// Seznam datumů změn stanov. 
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class ZmenaStanov
{
	/// <summary>
	/// Datum změny stanov.
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("datumZmeny")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset DatumZmeny { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

/// <summary>
/// Seznam ekonomických subjektů ze zdroje RPSH
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class EkonomickeSubjektyRpshSeznam : Seznam
{

	[System.Text.Json.Serialization.JsonPropertyName("ekonomickeSubjekty")]
	public System.Collections.Generic.ICollection<EkonomickySubjektRpsh> EkonomickeSubjekty { get; set; }

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class EkonomickySubjektRpsh
{
	/// <summary>
	/// ičo/id ekonomického subjektu 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("icoId")]
	[System.ComponentModel.DataAnnotations.StringLength(32)]
	[System.ComponentModel.DataAnnotations.RegularExpression(@"^(ARES_)?\d{8}$")]
	public string IcoId { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("zaznamy")]
	public System.Collections.Generic.ICollection<ZaznamRpsh> Zaznamy { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class AdresaRcns : Adresa
{
	/// <summary>
	/// Platnost adresy od data
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("platnostOd")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset PlatnostOd { get; set; }

	/// <summary>
	/// Platnost adresy do data
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("platnostDo")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset PlatnostDo { get; set; }

	/// <summary>
	/// Typ adresy  - kód (ciselnikKod: TypAdresy, zdroj: rcns) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("typAdresy")]
	[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 1)]
	public string TypAdresy { get; set; }

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class AngazovanySubjektRcnsZaklad
{

	[System.Text.Json.Serialization.JsonPropertyName("ico")]
	[System.ComponentModel.DataAnnotations.StringLength(8, MinimumLength = 8)]
	[System.ComponentModel.DataAnnotations.RegularExpression(@"^\d{8}$")]
	public string Ico { get; set; }

	/// <summary>
	/// DIČ
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("dic")]
	public string Dic { get; set; }

	/// <summary>
	/// Platnost záznamu od data
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("platnostOd")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset PlatnostOd { get; set; }

	/// <summary>
	/// Platnost záznamu do data
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("platnostDo")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset PlatnostDo { get; set; }

	/// <summary>
	/// Adresa sídla
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("sidlo")]
	public AdresaRcns Sidlo { get; set; }

	/// <summary>
	/// Obchodní jméno subjektu
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("obchodniJmeno")]
	[System.ComponentModel.DataAnnotations.StringLength(2000, MinimumLength = 1)]
	public string ObchodniJmeno { get; set; }

	/// <summary>
	/// Kód státu  (ciselnikKod: Stat) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("kodStatu")]
	[System.ComponentModel.DataAnnotations.StringLength(3, MinimumLength = 3)]
	public string KodStatu { get; set; }

	/// <summary>
	/// Právní forma - kód (ciselnikKod: PravniForma) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("pravniForma")]
	[System.ComponentModel.DataAnnotations.StringLength(3, MinimumLength = 3)]
	[System.ComponentModel.DataAnnotations.RegularExpression(@"^\d{3}$")]
	public string PravniForma { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class ClenSvazu
{
	/// <summary>
	/// IČO člana svazu
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("ico")]
	[System.ComponentModel.DataAnnotations.StringLength(8, MinimumLength = 8)]
	[System.ComponentModel.DataAnnotations.RegularExpression(@"^\d{8}$")]
	public string Ico { get; set; }

	/// <summary>
	/// Platnost členství od data 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("platnostOd")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset PlatnostOd { get; set; }

	/// <summary>
	/// Platnost členství do data
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("platnostDo")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset PlatnostDo { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

/// <summary>
/// Oprávnění k výkonu zvláštních práv církve
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class PravoZvlastni
{
	/// <summary>
	/// Začátek platnosti zvláštního práva subjektu 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("platnostOd")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset PlatnostOd { get; set; }

	/// <summary>
	/// Konec platnosti zvláštního práva subjektu
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("platnostDo")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset PlatnostDo { get; set; }

	/// <summary>
	/// Oprávnění pro výkon církve - kód (ciselnikKod: Pravo, zdroj: rcns) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("kodPravo")]
	public int KodPravo { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class RegistraceRcns
{
	/// <summary>
	/// Pro subjekt typu církev a svaz církví je zde uvedeno registrační číslo pod kterým byl daný subjekt zaregistrován na MK. Pro subjekty typu právnická osoba je zde uvedeno evidenční číslo pod kterým byl daný subjekt zaevidován na MK.
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("cisloRegistrace")]
	[System.ComponentModel.DataAnnotations.StringLength(30)]
	public string CisloRegistrace { get; set; }

	/// <summary>
	/// Datum zrušení registrace, evidence subjektu na MK
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("cisloZruseniRegistrace")]
	[System.ComponentModel.DataAnnotations.StringLength(30)]
	public string CisloZruseniRegistrace { get; set; }

	/// <summary>
	/// Datum vyhlášení likvidace subjektu
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("datumLikvidace")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset DatumLikvidace { get; set; }

	/// <summary>
	/// Datum vyhlášení konkurzu subjektu
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("datumKonkurzu")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset DatumKonkurzu { get; set; }

	/// <summary>
	/// Datum jmenování opatrovníka
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("datumOpatrovnik")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset DatumOpatrovnik { get; set; }

	/// <summary>
	/// Datum zrušení registrace, evidence subjektu na MK
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("datumZruseniRegistrace")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset DatumZruseniRegistrace { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class ZaznamRcnsZaklad : EkonomickySubjektZaklad
{
	/// <summary>
	/// Typ subjektu - kód (ciselnikKod: TypSubjektuRcns) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("typSubjektu")]
	[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 1)]
	public string TypSubjektu { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("stat")]
	[System.ComponentModel.DataAnnotations.StringLength(3, MinimumLength = 3)]
	public string Stat { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("primarniZaznam")]
	public bool PrimarniZaznam { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("registrace")]
	public RegistraceRcns Registrace { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("zpusobJednani")]
	public System.Collections.Generic.ICollection<ZpusobJednani> ZpusobJednani { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("adresySubjektu")]
	public System.Collections.Generic.ICollection<AdresaRcns> AdresySubjektu { get; set; }

	/// <summary>
	/// Identifikátor záznamu ve zdrojovém registru.
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("zdrojId")]
	[System.ComponentModel.DataAnnotations.StringLength(100)]
	public string ZdrojId { get; set; }

	/// <summary>
	/// Platnost subjekt v registru od
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("platnostOd")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset PlatnostOd { get; set; }

}

/// <summary>
/// tabulka způsobů jednání subjektu
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class ZpusobJednani
{
	/// <summary>
	/// popis způsobu jednání
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("popis")]
	public string Popis { get; set; }

	/// <summary>
	/// počátek platnosti způsobu jednání dle popisu
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("platnostOd")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset PlatnostOd { get; set; }

	/// <summary>
	/// konec platnosti způsobu jednání dle popisu 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("platnostDo")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset PlatnostDo { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

/// <summary>
/// Název vykonávané statutární(církevní) funkce 
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class AngazovanaOsobaRcns : AngazovanaOsoba
{
	/// <summary>
	/// Platnost angažované osoby od data
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("platnostOd")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset PlatnostOd { get; set; }

	/// <summary>
	/// Platnost angažované osoby od data
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("platnostDo")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset PlatnostDo { get; set; }

	/// <summary>
	/// Název orgánu
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("nazevAngazma")]
	[System.ComponentModel.DataAnnotations.StringLength(100)]
	public string NazevAngazma { get; set; }

	/// <summary>
	/// Dodatečná informace jako 'funkce neobsazena'
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("poznamka")]
	[System.ComponentModel.DataAnnotations.StringLength(100)]
	public string Poznamka { get; set; }

	/// <summary>
	/// Typ angažmá osoby  - kód (ciselnikKod: TypAngazma, zdroj: rcns) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("typAngazma")]
	[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 1)]
	public string TypAngazma { get; set; }

	/// <summary>
	/// Název orgánu
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("nazevOrganu")]
	[System.ComponentModel.DataAnnotations.StringLength(100)]
	public string NazevOrganu { get; set; }

	/// <summary>
	/// Kód státu  (ciselnikKod: Stat) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("kodStatu")]
	[System.ComponentModel.DataAnnotations.StringLength(3, MinimumLength = 3)]
	public string KodStatu { get; set; }

	/// <summary>
	/// Právní forma - kód (ciselnikKod: PravniForma) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("pravniForma")]
	[System.ComponentModel.DataAnnotations.StringLength(3, MinimumLength = 3)]
	[System.ComponentModel.DataAnnotations.RegularExpression(@"^\d{3}$")]
	public string PravniForma { get; set; }

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class SubjektCirkevZaklad
{
	/// <summary>
	/// Datum registrace práv dané církvi.
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("datumRegistracePrav")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset DatumRegistracePrav { get; set; }

	/// <summary>
	/// Číslo registrace práv dané církvi.
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("cisloRegistracePrav")]
	[System.ComponentModel.DataAnnotations.StringLength(30)]
	public string CisloRegistracePrav { get; set; }

	/// <summary>
	/// IČO nástupce zrušené právnické osoby. 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("icoNastupce")]
	[System.ComponentModel.DataAnnotations.StringLength(8, MinimumLength = 8)]
	[System.ComponentModel.DataAnnotations.RegularExpression(@"^\d{8}$")]
	public string IcoNastupce { get; set; }

	/// <summary>
	/// Datum zrušení registrace práv dané církvi.
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("datumZruseniRegistracePrav")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset DatumZruseniRegistracePrav { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("pravoZvlastni")]
	public System.Collections.Generic.ICollection<PravoZvlastni> PravoZvlastni { get; set; }

	/// <summary>
	/// Číslo zrušení registrace práv dané církvi.
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("cisloZruseniRegistracePrav")]
	[System.ComponentModel.DataAnnotations.StringLength(30)]
	public string CisloZruseniRegistracePrav { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class SubjektPravnickaOsobaZaklad
{
	/// <summary>
	/// IČO zřizovatele právnické osoby. 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("icoZrizovatel")]
	[System.ComponentModel.DataAnnotations.StringLength(8, MinimumLength = 8)]
	[System.ComponentModel.DataAnnotations.RegularExpression(@"^\d{8}$")]
	public string IcoZrizovatel { get; set; }

	/// <summary>
	/// IČO nástupce zrušené právnické osoby. 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("icoNastupce")]
	[System.ComponentModel.DataAnnotations.StringLength(8, MinimumLength = 8)]
	[System.ComponentModel.DataAnnotations.RegularExpression(@"^\d{8}$")]
	public string IcoNastupce { get; set; }

	/// <summary>
	/// Způsob zruseni registrace - kód
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("zpusobZruseniRegistrace")]
	public int ZpusobZruseniRegistrace { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class SubjektSvazCirkviZaklad
{

	[System.Text.Json.Serialization.JsonPropertyName("clenoveSvazu")]
	public System.Collections.Generic.ICollection<ClenSvazu> ClenoveSvazu { get; set; }

	/// <summary>
	/// IČO nástupce zrušené právnické osoby. 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("icoNastupce")]
	[System.ComponentModel.DataAnnotations.StringLength(8, MinimumLength = 8)]
	[System.ComponentModel.DataAnnotations.RegularExpression(@"^\d{8}$")]
	public string IcoNastupce { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class AngazmaRcns
{

	[System.Text.Json.Serialization.JsonPropertyName("osobaPravnicka")]
	public AngazovanySubjektRcns OsobaPravnicka { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("osobaFyzicka")]
	public AngazovanaOsobaRcns OsobaFyzicka { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class AngazovanySubjektRcns : AngazovanySubjektRcnsZaklad
{

	[System.Text.Json.Serialization.JsonPropertyName("statutarniOrgany")]
	public System.Collections.Generic.ICollection<AngazovanaOsobaRcns> StatutarniOrgany { get; set; }

}

/// <summary>
/// Seznam ekonomických subjektů ze zdroje RCNS
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class EkonomickeSubjektyRcnsSeznam : Seznam
{

	[System.Text.Json.Serialization.JsonPropertyName("ekonomickeSubjekty")]
	public System.Collections.Generic.ICollection<EkonomickySubjektRcns> EkonomickeSubjekty { get; set; }

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class StatutatniOrganRcns
{
	/// <summary>
	/// Struktura s údaji sledovanými u subjektu typu církev
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("subjektCirkev")]
	public SubjektCirkev SubjektCirkev { get; set; }

	/// <summary>
	/// Struktura s údaji sledovanými u subjektu typu svaz církví
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("subjektSvazCirkvi")]
	public SubjektSvazCirkvi SubjektSvazCirkvi { get; set; }

	/// <summary>
	/// Struktura s údaji sledovanými u subjektu typu právnická osoba dříve církevní právnická osoba.
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("subjektPravnickaOsoba")]
	public SubjektPravnickaOsoba SubjektPravnickaOsoba { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class EkonomickySubjektRcns
{
	/// <summary>
	/// ičo/id ekonomického subjektu 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("icoId")]
	[System.ComponentModel.DataAnnotations.StringLength(32)]
	[System.ComponentModel.DataAnnotations.RegularExpression(@"^(ARES_)?\d{8}$")]
	public string IcoId { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("zaznamy")]
	public System.Collections.Generic.ICollection<ZaznamRcns> Zaznamy { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class SubjektCirkev : SubjektCirkevZaklad
{

	[System.Text.Json.Serialization.JsonPropertyName("organy")]
	public System.Collections.Generic.ICollection<AngazovanySubjektRcns> Organy { get; set; }

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class SubjektPravnickaOsoba : SubjektPravnickaOsobaZaklad
{

	[System.Text.Json.Serialization.JsonPropertyName("organy")]
	public System.Collections.Generic.ICollection<AngazovanaOsobaRcns> Organy { get; set; }

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class SubjektSvazCirkvi : SubjektSvazCirkviZaklad
{

	[System.Text.Json.Serialization.JsonPropertyName("organy")]
	public System.Collections.Generic.ICollection<AngazovanySubjektRcns> Organy { get; set; }

}

/// <summary>
/// Detailní informace o ekonomickém subjektu ze zdroje RCNS
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class ZaznamRcns : ZaznamRcnsZaklad
{
	/// <summary>
	/// Statutární orgány církve
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("statutarniOrgan")]
	public StatutatniOrganRcns StatutarniOrgan { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("likvidatori")]
	public System.Collections.Generic.ICollection<AngazmaRcns> Likvidatori { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("konkurzniSpravci")]
	public System.Collections.Generic.ICollection<AngazmaRcns> KonkurzniSpravci { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("opatrovnici")]
	public System.Collections.Generic.ICollection<AngazmaRcns> Opatrovnici { get; set; }

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class AngazovanaOsobaSzrZaklad : AngazovanaOsoba
{
	/// <summary>
	/// Typ angažmá osoby  - kód (ciselnikKod: TypAngazma) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("typAngazma")]
	[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 1)]
	public string TypAngazma { get; set; }

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class EkonomickySubjektEzpZaklad : EkonomickySubjektZaklad
{
	/// <summary>
	/// URL odkaz na záznam zdrojového IS.
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("odkaz")]
	[System.ComponentModel.DataAnnotations.StringLength(255)]
	public string Odkaz { get; set; }

}

/// <summary>
/// Seznam ekonomických subjektů ze zdroje SZR
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class EkonomickeSubjektySzrSeznam : Seznam
{

	[System.Text.Json.Serialization.JsonPropertyName("ekonomickeSubjekty")]
	public System.Collections.Generic.ICollection<EkonomickySubjektSzr> EkonomickeSubjekty { get; set; }

}

/// <summary>
/// Seznam ekonomických subjektů ze zdroje SZR (část EZP) 
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class EkonomickySubjektSzr
{
	/// <summary>
	/// ičo/id ekonomického subjektu 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("icoId")]
	[System.ComponentModel.DataAnnotations.StringLength(32)]
	[System.ComponentModel.DataAnnotations.RegularExpression(@"^(ARES_)?\d{8}$")]
	public string IcoId { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("zaznamy")]
	public System.Collections.Generic.ICollection<ZaznamSzr> Zaznamy { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class Ezp
{
	/// <summary>
	/// Osoba podnikatele EZP
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("osobaEzp")]
	public AngazovanaOsobaSzrZaklad OsobaEzp { get; set; }

	/// <summary>
	/// Ekonomický subjekt EZP
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("subjektEzp")]
	public EkonomickySubjektEzpZaklad SubjektEzp { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class ZaznamSzr
{
	/// <summary>
	/// Evidence zemědělského podnikatele
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("ezp")]
	public Ezp Ezp { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class AngazovanaOsobaRs : AngazovanaOsoba
{

	[System.Text.Json.Serialization.JsonPropertyName("typAngazma")]
	[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 1)]
	public string TypAngazma { get; set; }

}

/// <summary>
/// Detailní informace o ekonomickém subjektu ze zdroje RŠ
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class AngazovanySubjektRs
{
	/// <summary>
	/// IČO
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("ico")]
	[System.ComponentModel.DataAnnotations.StringLength(32)]
	[System.ComponentModel.DataAnnotations.RegularExpression(@"^(ARES_)?\d{8}$")]
	public string Ico { get; set; }

	/// <summary>
	/// Jméno subjektu
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("obchodniJmeno")]
	[System.ComponentModel.DataAnnotations.StringLength(2000, MinimumLength = 1)]
	public string ObchodniJmeno { get; set; }

	/// <summary>
	/// Zkrácené jméno subjektu
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("obchodniJmenoZkracene")]
	[System.ComponentModel.DataAnnotations.StringLength(40, MinimumLength = 1)]
	public string ObchodniJmenoZkracene { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("typAngazma")]
	[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 1)]
	public string TypAngazma { get; set; }

	/// <summary>
	/// Adresa angažovaného subjektu
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("adresa")]
	public Adresa Adresa { get; set; }

	/// <summary>
	/// Právní forma 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("pravniForma")]
	[System.ComponentModel.DataAnnotations.StringLength(3, MinimumLength = 3)]
	[System.ComponentModel.DataAnnotations.RegularExpression(@"^\d{3}$")]
	public string PravniForma { get; set; }

	/// <summary>
	/// Datum vzniku
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("datumVzniku")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset DatumVzniku { get; set; }

	/// <summary>
	/// Datum zániku
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("datumZaniku")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset DatumZaniku { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

/// <summary>
/// Kontakty subjektu
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class KontaktyRs
{
	/// <summary>
	/// kontaktní telefon
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("telefon")]
	[System.ComponentModel.DataAnnotations.StringLength(25, MinimumLength = 1)]
	public string Telefon { get; set; }

	/// <summary>
	/// číslo faxu
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("fax")]
	[System.ComponentModel.DataAnnotations.StringLength(25, MinimumLength = 1)]
	public string Fax { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("email")]
	public System.Collections.Generic.ICollection<string> Email { get; set; }

	/// <summary>
	/// webová adresa ekonomického subjektu
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("www")]
	[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength = 1)]
	public string Www { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class SkolaZarizeni
{

	[System.Text.Json.Serialization.JsonPropertyName("kontakty")]
	public KontaktyRs Kontakty { get; set; }

	/// <summary>
	/// IZO - resortní identifikátor
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("izo")]
	[System.ComponentModel.DataAnnotations.StringLength(9, MinimumLength = 1)]
	public string Izo { get; set; }

	/// <summary>
	/// Jméno subjektu
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("obchodniJmeno")]
	[System.ComponentModel.DataAnnotations.StringLength(2000, MinimumLength = 1)]
	public string ObchodniJmeno { get; set; }

	/// <summary>
	/// Zkrácené jméno subjektu
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("obchodniJmenoZkracene")]
	[System.ComponentModel.DataAnnotations.StringLength(40, MinimumLength = 1)]
	public string ObchodniJmenoZkracene { get; set; }

	/// <summary>
	/// Typ školy
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("typSkoly")]
	[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 1)]
	public string TypSkoly { get; set; }

	/// <summary>
	/// Adresa angažovaného subjektu
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("adresa")]
	public Adresa Adresa { get; set; }

	/// <summary>
	/// Datum vzniku
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("datumVzniku")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset DatumVzniku { get; set; }

	/// <summary>
	/// Datum zániku
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("datumZaniku")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset DatumZaniku { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

/// <summary>
/// Detailní informace o ekonomickém subjektu ze zdroje RŠ
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class ZaznamRsZaklad : EkonomickySubjektZaklad
{
	/// <summary>
	/// REDIZO - resortní identifikátor
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("redizo")]
	[System.ComponentModel.DataAnnotations.StringLength(9, MinimumLength = 1)]
	public string Redizo { get; set; }

	/// <summary>
	/// Zkrácené obchodní jméno
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("obchodniJmenoZkracene")]
	[System.ComponentModel.DataAnnotations.StringLength(40, MinimumLength = 1)]
	public string ObchodniJmenoZkracene { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("kontakty")]
	public KontaktyRs Kontakty { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("primarniZaznam")]
	public bool PrimarniZaznam { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("skolyAZarizeni")]
	public System.Collections.Generic.ICollection<SkolaZarizeni> SkolyAZarizeni { get; set; }

	/// <summary>
	/// Typ subjektu
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("typSubjektu")]
	[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 1)]
	public string TypSubjektu { get; set; }

}

/// <summary>
/// Seznam ekonomických subjektů ze zdroje RŠ
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class EkonomickeSubjektyRsSeznam : Seznam
{

	[System.Text.Json.Serialization.JsonPropertyName("ekonomickeSubjekty")]
	public System.Collections.Generic.ICollection<EkonomickySubjektRs> EkonomickeSubjekty { get; set; }

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class EkonomickySubjektRs
{
	/// <summary>
	/// ičo ekonomického subjektu
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("icoId")]
	[System.ComponentModel.DataAnnotations.StringLength(32)]
	[System.ComponentModel.DataAnnotations.RegularExpression(@"^(ARES_)?\d{8}$")]
	public string IcoId { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("zaznamy")]
	public System.Collections.Generic.ICollection<ZaznamRs> Zaznamy { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class ZaznamRs : ZaznamRsZaklad
{

	[System.Text.Json.Serialization.JsonPropertyName("angazovanySubjekt")]
	public System.Collections.Generic.ICollection<AngazovanySubjektRs> AngazovanySubjekt { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("angazovanaOsoba")]
	public System.Collections.Generic.ICollection<AngazovanaOsobaRs> AngazovanaOsoba { get; set; }

}

/// <summary>
/// Seznam číselníků
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class CiselnikyNazevnikSeznam : Seznam
{

	[System.Text.Json.Serialization.JsonPropertyName("ciselniky")]
	public System.Collections.Generic.ICollection<Ciselnik> Ciselniky { get; set; }

}

/// <summary>
/// Číselník
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class Ciselnik
{
	/// <summary>
	/// Kód číselníku
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("kodCiselniku")]
	[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 1)]
	public string KodCiselniku { get; set; }

	/// <summary>
	/// Název číselníku
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("nazevCiselniku")]
	[System.ComponentModel.DataAnnotations.StringLength(255)]
	public string NazevCiselniku { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("polozkyCiselniku")]
	public System.Collections.Generic.ICollection<PolozkaCiselniku> PolozkyCiselniku { get; set; }

	/// <summary>
	/// Zdroj číselníku (ciselnikKod: StavZdroje) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("zdrojCiselniku")]
	[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 1)]
	public string ZdrojCiselniku { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

/// <summary>
/// Filtr pro vyhledávání číselníků
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class CiselnikyZakladniFiltr : StrankovaniARazeni
{
	/// <summary>
	/// Zdroj/oblast číselníku - kód (ciselnikKod: TypZdrojeAres, zdroj:com) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("zdrojCiselniku")]
	[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 1)]
	public string ZdrojCiselniku { get; set; }

	/// <summary>
	/// Kód číselníku
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("kodCiselniku")]
	[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 1)]
	public string KodCiselniku { get; set; }

}

/// <summary>
/// Seznam názvů položky číselníků z ohledem na jazykovou mutaci
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class NazevPolozky
{
	/// <summary>
	/// Kód jazyka položky číselníku
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("kodJazyka")]
	public string KodJazyka { get; set; }

	/// <summary>
	/// Název položky číselníku
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("nazev")]
	[System.ComponentModel.DataAnnotations.StringLength(255)]
	public string Nazev { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

/// <summary>
/// Položka číselníku
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class PolozkaCiselniku
{
	/// <summary>
	/// Kód položky číselníku
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("kod")]
	[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 1)]
	public string Kod { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("nazev")]
	public System.Collections.Generic.ICollection<NazevPolozky> Nazev { get; set; }

	/// <summary>
	/// Platnost položky od data
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("platnostOd")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset PlatnostOd { get; set; }

	/// <summary>
	/// Platnost položky do data 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("platnostDo")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset PlatnostDo { get; set; }

	/// <summary>
	/// Nadřízený záznam položky číselníku
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("kodNadrizeny")]
	[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 1)]
	public string KodNadrizeny { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

/// <summary>
/// Adresa 
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class AdresaFiltr
{
	/// <summary>
	/// Kód časti obce
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("kodCastiObce")]
	[System.ComponentModel.DataAnnotations.Range(0, 999999)]
	public int KodCastiObce { get; set; }

	/// <summary>
	/// Kód správního obvodu Prahy
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("kodSpravnihoObvodu")]
	[System.ComponentModel.DataAnnotations.Range(0, 999)]
	public int KodSpravnihoObvodu { get; set; }

	/// <summary>
	/// Kód městské části statutárního města
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("kodMestskeCastiObvodu")]
	[System.ComponentModel.DataAnnotations.Range(0, 999999)]
	public int KodMestskeCastiObvodu { get; set; }

	/// <summary>
	/// Kód ulice, veřejného prostranství ze zdroje
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("kodUlice")]
	[System.ComponentModel.DataAnnotations.Range(0, 9999999)]
	public int KodUlice { get; set; }

	/// <summary>
	/// Číslo domovní
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("cisloDomovni")]
	[System.ComponentModel.DataAnnotations.Range(int.MinValue, 9999)]
	public int CisloDomovni { get; set; }

	/// <summary>
	/// Kód obce
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("kodObce")]
	[System.ComponentModel.DataAnnotations.Range(0, 999999)]
	public int KodObce { get; set; }

	/// <summary>
	/// Číslo orientační - číselná část
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("cisloOrientacni")]
	[System.ComponentModel.DataAnnotations.Range(int.MinValue, 999)]
	public int CisloOrientacni { get; set; }

	/// <summary>
	/// Číslo orientační - písmenná část
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("cisloOrientacniPismeno")]
	[System.ComponentModel.DataAnnotations.StringLength(1)]
	public string CisloOrientacniPismeno { get; set; }

	/// <summary>
	/// Nestrukturovaná adresa
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("textovaAdresa")]
	[System.ComponentModel.DataAnnotations.StringLength(1500)]
	public string TextovaAdresa { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

/// <summary>
/// Filtr pro vyhledání seznamu ekonomických subjektů podle parametru IČO. 
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class EkonomickeSubjektyRegistraceFiltr : StrankovaniARazeni
{

	[System.Text.Json.Serialization.JsonPropertyName("ico")]
	public System.Collections.Generic.ICollection<string> Ico { get; set; }

}

/// <summary>
/// Obecný filtr pro vyhledání seznamu ekonomických subjektů
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class EkonomickeSubjektyZakladFiltr : StrankovaniARazeni
{

	[System.Text.Json.Serialization.JsonPropertyName("ico")]
	public System.Collections.Generic.ICollection<string> Ico { get; set; }

	/// <summary>
	/// Obchodní jméno ekonomického subjektu
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("obchodniJmeno")]
	[System.ComponentModel.DataAnnotations.StringLength(2000, MinimumLength = 1)]
	public string ObchodniJmeno { get; set; }

	/// <summary>
	/// Adresa sídla ekonomického subjektu
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("sidlo")]
	public AdresaFiltr Sidlo { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("pravniForma")]
	public System.Collections.Generic.ICollection<string> PravniForma { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("financniUrad")]
	public System.Collections.Generic.ICollection<string> FinancniUrad { get; set; }

}

/// <summary>
/// Seznam nalezených standardizovaných adres
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class StandardizovaneAdresySeznam : Seznam
{

	[System.Text.Json.Serialization.JsonPropertyName("standardizovaneAdresy")]
	public System.Collections.Generic.ICollection<StandardizovanaAdresa> StandardizovaneAdresy { get; set; }

	/// <summary>
	/// Stav standardizace adresy - kod (Číselník kod:StavStandardizaceAdresy) UPLNA, CASTECNA_OBEC/..., NEUSPESNA
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("stavStandardizace")]
	public string StavStandardizace { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("request")]
	public StandardizovanaAdresaFiltr Request { get; set; }

}

/// <summary>
/// Standardizovaná adresa
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class StandardizovanaAdresa
{
	/// <summary>
	/// Typ stavebního objektu - kód (Číselník kod:TypStavebnihoObjektu, zdroj:ruian) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("typStavebnihoObjektu")]
	public string TypStavebnihoObjektu { get; set; }

	/// <summary>
	/// Číslo domovní
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("cisloDomovni")]
	[System.ComponentModel.DataAnnotations.Range(int.MinValue, 9999)]
	public int CisloDomovni { get; set; }

	/// <summary>
	/// Číslo orientační - číselná část
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("cisloOrientacni")]
	[System.ComponentModel.DataAnnotations.Range(int.MinValue, 999)]
	public int CisloOrientacni { get; set; }

	/// <summary>
	/// Číslo orientační - písmenná část
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("cisloOrientacniPismeno")]
	[System.ComponentModel.DataAnnotations.StringLength(1)]
	public string CisloOrientacniPismeno { get; set; }

	/// <summary>
	/// Kód adresního místa
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("kodAdresnihoMista")]
	[System.ComponentModel.DataAnnotations.Range(0, 999999999)]
	public int KodAdresnihoMista { get; set; }

	/// <summary>
	/// Kód časti obce
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("kodCastiObce")]
	[System.ComponentModel.DataAnnotations.Range(0, 999999)]
	public int KodCastiObce { get; set; }

	/// <summary>
	/// Kód kraje
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("kodKraje")]
	[System.ComponentModel.DataAnnotations.Range(0, 999)]
	public int KodKraje { get; set; }

	/// <summary>
	/// Kód městské části statutárního města
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("kodMestskeCastiObvodu")]
	[System.ComponentModel.DataAnnotations.Range(0, 999999)]
	public int KodMestskeCastiObvodu { get; set; }

	/// <summary>
	/// Kód městského obvodu Prahy
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("kodMestskehoObvoduP")]
	[System.ComponentModel.DataAnnotations.Range(0, 999)]
	public int KodMestskehoObvoduP { get; set; }

	/// <summary>
	/// Kód obce
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("kodObce")]
	[System.ComponentModel.DataAnnotations.Range(0, 999999)]
	public int KodObce { get; set; }

	/// <summary>
	/// Kód okresu
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("kodOkresu")]
	[System.ComponentModel.DataAnnotations.Range(0, 9999)]
	public int KodOkresu { get; set; }

	/// <summary>
	/// Kód správního obvodu Prahy
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("kodSpravnihoObvoduP")]
	[System.ComponentModel.DataAnnotations.Range(0, 999)]
	public int KodSpravnihoObvoduP { get; set; }

	/// <summary>
	/// Kód stavebního objektu
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("kodStavebnihoObjektu")]
	[System.ComponentModel.DataAnnotations.Range(0, 999999999)]
	public int KodStavebnihoObjektu { get; set; }

	/// <summary>
	/// Kód ulice, veřejného prostranství ze zdroje
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("kodUlice")]
	[System.ComponentModel.DataAnnotations.Range(0, 9999999)]
	public int KodUlice { get; set; }

	/// <summary>
	/// Název části obce
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("nazevCastiObce")]
	[System.ComponentModel.DataAnnotations.StringLength(48)]
	public string NazevCastiObce { get; set; }

	/// <summary>
	/// Název kraje
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("nazevKraje")]
	[System.ComponentModel.DataAnnotations.StringLength(32)]
	public string NazevKraje { get; set; }

	/// <summary>
	/// Název městské části statutárního města 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("nazevMestskeCastiObvodu")]
	[System.ComponentModel.DataAnnotations.StringLength(48)]
	public string NazevMestskeCastiObvodu { get; set; }

	/// <summary>
	/// Název městského obvodu Prahy
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("nazevMestskehoObvoduP")]
	[System.ComponentModel.DataAnnotations.StringLength(32)]
	public string NazevMestskehoObvoduP { get; set; }

	/// <summary>
	/// Název obce
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("nazevObce")]
	[System.ComponentModel.DataAnnotations.StringLength(48)]
	public string NazevObce { get; set; }

	/// <summary>
	/// Název okresu
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("nazevOkresu")]
	[System.ComponentModel.DataAnnotations.StringLength(32)]
	public string NazevOkresu { get; set; }

	/// <summary>
	/// Název správního obvodu Prahy 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("nazevSpravnihoObvoduP")]
	[System.ComponentModel.DataAnnotations.StringLength(32)]
	public string NazevSpravnihoObvoduP { get; set; }

	/// <summary>
	/// Název ulice, veřejného prostranství 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("nazevUlice")]
	[System.ComponentModel.DataAnnotations.StringLength(48)]
	public string NazevUlice { get; set; }

	/// <summary>
	/// Poštovní směrovací číslo adresní pošty
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("psc")]
	public int Psc { get; set; }

	/// <summary>
	/// Textová podoba adresy
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("textovaAdresa")]
	[System.ComponentModel.DataAnnotations.StringLength(1500)]
	public string TextovaAdresa { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

/// <summary>
/// Komplexní filtr pro standardizaci adresy RÚIAN 
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class StandardizovanaAdresaFiltr : StrankovaniARazeni
{
	/// <summary>
	/// Kód obce
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("kodObce")]
	[System.ComponentModel.DataAnnotations.Range(0, 999999)]
	public int KodObce { get; set; }

	/// <summary>
	/// Název obce
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("nazevObce")]
	[System.ComponentModel.DataAnnotations.StringLength(48)]
	public string NazevObce { get; set; }

	/// <summary>
	/// Kód části obce
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("kodCastiObce")]
	[System.ComponentModel.DataAnnotations.Range(0, 999999)]
	public int KodCastiObce { get; set; }

	/// <summary>
	/// Název části obce
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("nazevCastiObce")]
	[System.ComponentModel.DataAnnotations.StringLength(48)]
	public string NazevCastiObce { get; set; }

	/// <summary>
	/// Kód městské části statutárního města nebo Prahy 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("kodMestskehoCastiObvodu")]
	[System.ComponentModel.DataAnnotations.Range(0, 999999)]
	public int KodMestskehoCastiObvodu { get; set; }

	/// <summary>
	/// Název městské části statutárního města nebo Prahy
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("nazevMestskehoCastiObvodu")]
	[System.ComponentModel.DataAnnotations.StringLength(32)]
	public string NazevMestskehoCastiObvodu { get; set; }

	/// <summary>
	/// Kód ulice, veřejného prostranství 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("kodUlice")]
	[System.ComponentModel.DataAnnotations.Range(0, 9999999)]
	public int KodUlice { get; set; }

	/// <summary>
	/// Název ulice, veřejného prostranství 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("nazevUlice")]
	[System.ComponentModel.DataAnnotations.StringLength(48)]
	public string NazevUlice { get; set; }

	/// <summary>
	/// Číslo domovní
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("cisloDomovni")]
	[System.ComponentModel.DataAnnotations.Range(int.MinValue, 9999)]
	public int CisloDomovni { get; set; }

	/// <summary>
	/// Číslo orientační - číselná část
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("cisloOrientacni")]
	[System.ComponentModel.DataAnnotations.Range(int.MinValue, 999)]
	public int CisloOrientacni { get; set; }

	/// <summary>
	/// Číslo orientační - písmenná část
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("cisloOrientacniPismeno")]
	[System.ComponentModel.DataAnnotations.StringLength(1)]
	public string CisloOrientacniPismeno { get; set; }

	/// <summary>
	/// Kód adresního místa
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("kodAdresnihoMista")]
	[System.ComponentModel.DataAnnotations.Range(0, 999999999)]
	public int KodAdresnihoMista { get; set; }

	/// <summary>
	/// Nestrukturovaná adresa
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("textovaAdresa")]
	[System.ComponentModel.DataAnnotations.StringLength(1500)]
	public string TextovaAdresa { get; set; }

	/// <summary>
	/// Typ požadované standardizace - kód (číselník kod:TypStandardizaceAdresy) UPLNA_STANDARDIZACE, VYHOVUJICI_ADRESY
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("typStandardizaceAdresy")]
	public string TypStandardizaceAdresy { get; set; }

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class AdresaCeu : Adresa
{
	/// <summary>
	/// Typ adresy
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("typAdresy")]
	[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 1)]
	public string TypAdresy { get; set; }

}

/// <summary>
/// Tabulka angažovaných osob
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class AngazovanaOsobaCeu
{
	/// <summary>
	/// Jméno, příjmení správce
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("jmenoPrijmeni")]
	[System.ComponentModel.DataAnnotations.StringLength(100)]
	public string JmenoPrijmeni { get; set; }

	/// <summary>
	/// Typ angažmá
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("typAngazma")]
	[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 1)]
	public string TypAngazma { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class EkonomickySubjektCeuZaklad : EkonomickySubjektZaklad
{
	/// <summary>
	/// Typ subjektu  (ciselnikKod: TypSubjektu, zdroj: Ceu) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("typSubjektu")]
	[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 1)]
	public string TypSubjektu { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("adresy")]
	public System.Collections.Generic.ICollection<AdresaCeu> Adresy { get; set; }

	/// <summary>
	/// Jméno, příjmení fyzické osoby
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("jmenoPrijmeni")]
	[System.ComponentModel.DataAnnotations.StringLength(100)]
	public string JmenoPrijmeni { get; set; }

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class UpadekCeu
{
	/// <summary>
	/// Podnět 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("podnet")]
	public string Podnet { get; set; }

	/// <summary>
	/// Spisová značka
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("spisZn")]
	public string SpisZn { get; set; }

	/// <summary>
	/// Datum
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("datum")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset Datum { get; set; }

	/// <summary>
	/// Odkaz na detail úpadku 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("detail")]
	[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength = 1)]
	public string Detail { get; set; }

	/// <summary>
	/// Odkaz na usnesení
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("usneseni")]
	[System.ComponentModel.DataAnnotations.StringLength(255, MinimumLength = 1)]
	public string Usneseni { get; set; }

	/// <summary>
	/// Akce úpadku
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("akceUpadek")]
	[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 1)]
	public string AkceUpadek { get; set; }

	/// <summary>
	/// Typ úpadku
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("typUpadek")]
	[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 1)]
	public string TypUpadek { get; set; }

	/// <summary>
	/// Soud rozhodující o úpadku
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("soudUpadek")]
	[System.ComponentModel.DataAnnotations.StringLength(64, MinimumLength = 1)]
	public string SoudUpadek { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

/// <summary>
/// Seznam ekonomických subjektů ze zdroje CEÚ
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class EkonomickeSubjektyCeuSeznam : Seznam
{

	[System.Text.Json.Serialization.JsonPropertyName("ekonomickeSubjekty")]
	public System.Collections.Generic.ICollection<EkonomickySubjektCeu> EkonomickeSubjekty { get; set; }

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class EkonomickySubjektCeu
{
	/// <summary>
	/// ičo/Id ekonomického subjektu
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("icoId")]
	[System.ComponentModel.DataAnnotations.StringLength(32)]
	[System.ComponentModel.DataAnnotations.RegularExpression(@"^(ARES_)?\d{8}$")]
	public string IcoId { get; set; }

	[System.Text.Json.Serialization.JsonPropertyName("zaznamy")]
	public System.Collections.Generic.ICollection<ZaznamCeu> Zaznamy { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

/// <summary>
/// Tabulka úpadků
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class UpadekCeuVerejny : UpadekCeu
{
	/// <summary>
	/// Správce úpadku 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("spravceUpadku")]
	public AngazovanaOsobaCeu SpravceUpadku { get; set; }

}

/// <summary>
/// Detailní informace o ekonomickém subjektu ze zdroje CEÚ
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class ZaznamCeu : EkonomickySubjektCeuZaklad
{

	[System.Text.Json.Serialization.JsonPropertyName("upadek")]
	public System.Collections.Generic.ICollection<UpadekCeuVerejny> Upadek { get; set; }

}

/// <summary>
/// Filtr notifikační dávky ARES
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class EkonomickeSubjektyNotifikaceFiltr
{
	/// <summary>
	/// Datový zdroj notifikační dávky - kód (ciselnikKod: TypZdrojeAres, zdroj:com) Podporované zdroje:  vr - Věřejný rejstřík res - Registr ekonomických subjektů rzp - Registr živnostenského podnikání nrpzs - Národní registr poskytovatelů zdravotnických služeb rcns - Registr církvní a náboženských společenství rpsh - Registr politických stran a hnutí rs - Registr škol szr - Společný zemědělský registr 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("datovyZdroj")]
	[System.ComponentModel.DataAnnotations.StringLength(30)]
	public string DatovyZdroj { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

/// <summary>
/// Notifikační změna
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class Notifikace
{
	/// <summary>
	/// Typ notifikační změny - kód (kodCiselniku: TypZmenyAres)
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("typZmeny")]
	[System.ComponentModel.DataAnnotations.StringLength(50)]
	public string TypZmeny { get; set; }

	/// <summary>
	/// Ičo ekonomického subjektu, pokud je ičo přidělené. Id ekonomického subjektu, polkud je ičo nepřidělené.
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("icoId")]
	[System.ComponentModel.DataAnnotations.StringLength(32)]
	[System.ComponentModel.DataAnnotations.RegularExpression(@"^(ARES_)?\d{8}$")]
	public string IcoId { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

/// <summary>
/// Notifikační dávka datového zdroje
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class NotifikacniDavka
{
	/// <summary>
	/// Číslo notifikační dávky
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("cisloDavky")]
	public int CisloDavky { get; set; }

	/// <summary>
	/// Datový zdroj notifikační dávky - kód (ciselnikKod: TypZdrojeAres, zdroj:com) 
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("datovyZdroj")]
	[System.ComponentModel.DataAnnotations.StringLength(30)]
	public string DatovyZdroj { get; set; }

	/// <summary>
	/// Datum uvolnění notifikační dávky
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("datumUvolneniDavky")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset DatumUvolneniDavky { get; set; }

	/// <summary>
	/// Počet změn v notifikační dávce
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("pocetZmen")]
	public int PocetZmen { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

/// <summary>
/// Notifikační dávka datového zdroje
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class NotifikacniDavkaZaznam : NotifikacniDavka
{

	[System.Text.Json.Serialization.JsonPropertyName("seznamNotifikaci")]
	public System.Collections.Generic.ICollection<Notifikace> SeznamNotifikaci { get; set; }

}

/// <summary>
/// Seznam notifikačních dávek
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class SeznamNotifikacnichDavek
{

	[System.Text.Json.Serialization.JsonPropertyName("notifikacniDavky")]
	public System.Collections.Generic.ICollection<NotifikacniDavka> NotifikacniDavky { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

/// <summary>
/// Angažovaná osoba
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class AngazovanaOsobaFiltr
{
	/// <summary>
	/// Jméno angažované osoby
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("jmeno")]
	[System.ComponentModel.DataAnnotations.StringLength(100)]
	public string Jmeno { get; set; }

	/// <summary>
	/// Rodné číslo osoby
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("rodneCislo")]
	[System.ComponentModel.DataAnnotations.StringLength(10, MinimumLength = 9)]
	public string RodneCislo { get; set; }

	/// <summary>
	/// Příjmení angažované osoby
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("prijmeni")]
	[System.ComponentModel.DataAnnotations.StringLength(100)]
	public string Prijmeni { get; set; }

	/// <summary>
	/// Datum narození angažované osoby
	/// </summary>

	[System.Text.Json.Serialization.JsonPropertyName("datumNarozeni")]
	[System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
	public System.DateTimeOffset DatumNarozeni { get; set; }

	private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

	[System.Text.Json.Serialization.JsonExtensionData]
	public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
	{
		get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
		set { _additionalProperties = value; }
	}

}

/// <summary>
/// Chybové kódy.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public enum KodChybyEnum
{

	[System.Runtime.Serialization.EnumMember(Value = @"OBECNA_CHYBA")]
	OBECNA_CHYBA = 0,

	[System.Runtime.Serialization.EnumMember(Value = @"CHYBA_VSTUPU")]
	CHYBA_VSTUPU = 1,

	[System.Runtime.Serialization.EnumMember(Value = @"NENALEZENO")]
	NENALEZENO = 2,

	[System.Runtime.Serialization.EnumMember(Value = @"NENI_IMPLEMENTOVANO")]
	NENI_IMPLEMENTOVANO = 3,

	[System.Runtime.Serialization.EnumMember(Value = @"NEPRIHLASENY_UZIVATEL")]
	NEPRIHLASENY_UZIVATEL = 4,

	[System.Runtime.Serialization.EnumMember(Value = @"NENI_OPRAVNENI")]
	NENI_OPRAVNENI = 5,

}

[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
internal class DateFormatConverter : System.Text.Json.Serialization.JsonConverter<System.DateTimeOffset>
{
	public override System.DateTimeOffset Read(ref System.Text.Json.Utf8JsonReader reader, System.Type typeToConvert, System.Text.Json.JsonSerializerOptions options)
	{
		var dateTime = reader.GetString();
		if (dateTime == null)
		{
			throw new System.Text.Json.JsonException("Unexpected JsonTokenType.Null");
		}

		return System.DateTimeOffset.Parse(dateTime);
	}

	public override void Write(System.Text.Json.Utf8JsonWriter writer, System.DateTimeOffset value, System.Text.Json.JsonSerializerOptions options)
	{
		writer.WriteStringValue(value.ToString("yyyy-MM-dd"));
	}
}



[System.CodeDom.Compiler.GeneratedCode("NSwag", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class ApiException : System.Exception
{
	public int StatusCode { get; private set; }

	public string Response { get; private set; }

	public System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> Headers { get; private set; }

	public ApiException(string message, int statusCode, string response, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, System.Exception innerException)
		: base(message + "\n\nStatus: " + statusCode + "\nResponse: \n" + ((response == null) ? "(null)" : response.Substring(0, response.Length >= 512 ? 512 : response.Length)), innerException)
	{
		StatusCode = statusCode;
		Response = response;
		Headers = headers;
	}

	public override string ToString()
	{
		return string.Format("HTTP Response: \n\n{0}\n\n{1}", Response, base.ToString());
	}
}

[System.CodeDom.Compiler.GeneratedCode("NSwag", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
public partial class ApiException<TResult> : ApiException
{
	public TResult Result { get; private set; }

	public ApiException(string message, int statusCode, string response, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, TResult result, System.Exception innerException)
		: base(message, statusCode, response, headers, innerException)
	{
		Result = result;
	}
}


#pragma warning restore 108
#pragma warning restore 114
#pragma warning restore 472
#pragma warning restore 612
#pragma warning restore 1573
#pragma warning restore 1591
#pragma warning restore 8073
#pragma warning restore 3016
#pragma warning restore 8603
#pragma warning restore 8604
#pragma warning restore 8625
