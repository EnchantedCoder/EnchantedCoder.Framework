// The following code was generated by Microsoft Visual Studio 2005.
// The test owner should check each test for validity.
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.Text;
using System.Collections.Generic;
using Havit.Business;
using Havit.BusinessLayerTest;
namespace Havit.BusinessTest
{
	/// <summary>
	///This is a test class for Havit.Business.BusinessObjectCollection&lt;T&gt; and is intended
	///to contain all Havit.Business.BusinessObjectCollection&lt;T&gt; Unit Tests
	///</summary>
	[TestClass()]
	public class BusinessObjectCollectionTest
	{
		/// <summary>
		/// Testuje výchozí hodnotu AllowDuplicates.
		/// </summary>
		[TestMethod()]
		public void AllowDuplicatesTest_Default()
		{
			SubjektCollection subjekty = new SubjektCollection();
			Assert.IsTrue(subjekty.AllowDuplicates);
		}

		/// <summary>
		/// Testuje zákaz duplicit - pomocí insertu.
		/// </summary>
		[TestMethod()]
		[ExpectedException(typeof(ArgumentException))]
		public void AllowDuplicatesTest_DoNotAllow_Insert()
		{
			SubjektCollection subjekty = new SubjektCollection();
			subjekty.AllowDuplicates = false;
			Subjekt subjekt = Subjekt.CreateObject();

			subjekty.Add(subjekt);
			subjekty.Add(subjekt);
		}

		/// <summary>
		/// Testuje zákaz duplicit - pomocí indexeru.
		/// </summary>
		[TestMethod()]
		public void AllowDuplicatesTest_DoNotAllow_Indexer_SameNew()
		{
			SubjektCollection subjekty = new SubjektCollection();
			subjekty.AllowDuplicates = false;

			Subjekt subjekt1 = Subjekt.CreateObject();
			Subjekt subjekt2 = Subjekt.CreateObject();

			subjekty.Add(subjekt1);
			subjekty.Add(subjekt2);
			subjekty[0] = subjekt1;			
			// ok
		}

		/// <summary>
		/// Testuje zákaz duplicit - pomocí indexeru.
		/// </summary>
		[TestMethod()]
		public void AllowDuplicatesTest_DoNotAllow_Indexer_Same()
		{
			SubjektCollection subjekty = new SubjektCollection();
			subjekty.AllowDuplicates = false;

			Subjekt subjekt1 = Subjekt.GetObject(1);
			Subjekt subjekt2 = Subjekt.GetObject(1);

			subjekty.Add(subjekt1);
			subjekty.Add(subjekt2);
			subjekty[0] = subjekt1;
			// ok
		}

		/// <summary>
		/// Testuje zákaz duplicit - pomocí indexeru.
		/// </summary>
		[TestMethod()]
		[ExpectedException(typeof(ArgumentException))]		
		public void AllowDuplicatesTest_DoNotAllow_Indexer_Different()
		{
			SubjektCollection subjekty = new SubjektCollection();
			subjekty.AllowDuplicates = false;

			Subjekt subjekt1 = Subjekt.CreateObject();
			Subjekt subjekt2 = Subjekt.CreateObject();

			subjekty.Add(subjekt1);
			subjekty.Add(subjekt2);
			subjekty[1] = subjekt1;
		}

		/// <summary>
		/// Testuje povolení duplicit.
		/// </summary>
		[TestMethod()]
		public void AllowDuplicatesTest_Allow()
		{
			SubjektCollection subjekty;

			Subjekt subjekt = Subjekt.CreateObject();

			subjekty = new SubjektCollection();
			subjekty.AllowDuplicates = true;
			subjekty.Add(subjekt);
			subjekty.Add(subjekt);
			Assert.IsTrue(subjekty.Count == 2);

			subjekty[0] = subjekt;
			subjekty[1] = subjekt;
			// ok
		}

	}


}
