<Project>

	<PropertyGroup>
		<GeneratePackageOnBuild>true</GeneratePackageOnBuild>
		<Authors>HAVIT</Authors>
		<PackageLicenseExpression>MIT</PackageLicenseExpression>
		<PackageIcon>logo.png</PackageIcon>

		<!-- Error NU5104: Warning As Error: A stable release of a package should not have a prerelease dependency -->
		<NoWarn>$(NoWarn);NU5104</NoWarn>
	</PropertyGroup>

	<Import Project="NuGetVersions.targets" />

	<ItemGroup>
		<None Include="../logo.png" Pack="true" PackagePath="" Visible="false" />
	</ItemGroup>


	<!-- Publish NuGet -->
	<PropertyGroup>
		<NuGetPublishFolder Condition="'$(NuGetPublishFolder)' == ''">PublicNuGets</NuGetPublishFolder>
		<PackageOutputPath Condition="'$(PublishDirectory)' != ''">$(PublishDirectory)\$(NuGetPublishFolder)</PackageOutputPath>
	</PropertyGroup>
	<!-- /Publish NuGet -->

	<Target Name="HavitCheckPackageIsNotEmpty" BeforeTargets="GenerateNuspec" AfterTargets="_CalculateInputsOutputsForPack" Condition=" $(GeneratePackageOnBuild) == 'true' ">
		<!-- _BuildOutputInPackage - výstup buildu -->
		<!-- _PackageFiles - content -->
		<!-- Nereflektujeme zde _PackageFilesToExclude. -->
		<!-- _PackageFiles obsahuje logo.png, proto je test na jedničku, nikoliv na nulu -->
		<PropertyGroup>
			<CheckPackageIsNotEmpty Condition=" $(CheckPackageIsNotEmpty) == '' ">true</CheckPackageIsNotEmpty>
		</PropertyGroup>
		<Error Text="Generated nuget package is empty." Condition="( ($(CheckPackageIsNotEmpty) == 'true') And @(_BuildOutputInPackage->Count()) == 0) And (@(_PackageFiles->Count()) &lt;= 1)" />
	</Target>

	<Target Name="HavitCheckPackageVersionIsSet" BeforeTargets="GenerateNuspec" AfterTargets="_CalculateInputsOutputsForPack" Condition=" $(GeneratePackageOnBuild) == 'true' ">
		<Error Text="Nuget package version not set." Condition="$(PackageVersion) == '$(VersionPrefix)'"  />
	</Target>
</Project>