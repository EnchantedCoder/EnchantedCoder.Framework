<Project>

  <PropertyGroup>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <Authors>HAVIT</Authors>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
	<PackageIcon>logo.png</PackageIcon>
  </PropertyGroup>

  <ItemGroup>
    <None Include="../logo.png" Pack="true" PackagePath="" />
  </ItemGroup>
	
  <!-- SourceLink -->
  <PropertyGroup>
    <!-- Source: https://github.com/dotnet/sourcelink/#using-sourcelink -->
    <!-- Optional: Publish the repository URL in the built .nupkg (in the NuSpec <Repository> element) -->
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <!-- Optional: Embed source files that are not tracked by the source control manager in the PDB -->
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <!-- Optional: Include the PDB in the built .nupkg -->
    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
  </PropertyGroup>
  
  <ItemGroup>
    <!-- Pokud se nuget balíček Microsoft.SourceLink.Vsts.Git (předchůdce současného Microsoft.SourceLink.AzureRepos.Git)
         dostane do WebForms projektu, rozbije restorování nuget balíčků, bohužel nepomáhá ani jedno podmínění pomocí Condition.
         Proto nepoužíváme Directory.Build.targets,  který by se automaticky použil pro všechny projekty,
         ale do projektů importujeme tento NuGet.targets.
         Chování balíčku Microsoft.SourceLink.AzureRepos.Git neověřuji, předpokládám, že jde víceméně jen o přejmenování.
    -->
    <PackageReference Include="Microsoft.SourceLink.AzureRepos.Git" Version="1.0.0" PrivateAssets="All" />
  </ItemGroup>

  <!-- Publish NuGet -->
  <PropertyGroup>
    <NuGetPublishFolder Condition="'$(NuGetPublishFolder)' == ''">PublicNuGets</NuGetPublishFolder>
    <PackageOutputPath Condition="'$(PublishDirectory)' != ''">$(PublishDirectory)\$(NuGetPublishFolder)</PackageOutputPath>
  </PropertyGroup>
  <!-- /Publish NuGet -->

</Project>