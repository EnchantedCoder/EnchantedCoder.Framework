// The following code was generated by Microsoft Visual Studio 2005.
// The test owner should check each test for validity.
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.Text;
using System.Collections.Generic;
namespace Havit.Tests
{
	/// <summary>
	/// Test třídy MathExt.	
	/// </summary>
	[TestClass]
	public class MathExtTest
	{
		[TestMethod]
		public void MathExt_IsInteger_ReturnsFalseForNull()
		{
			string text = null;

			bool expected = false;
			bool actual;

			actual = Havit.MathExt.IsInteger(text);

			Assert.AreEqual(expected, actual, "Havit.MathExt.IsInteger did not return the expected value.");
		}

		[TestMethod]
		public void MathExt_IsInteger_ReturnsTrueForPositiveInteger()
		{
			string text = "156";

			bool expected = true;
			bool actual;

			actual = Havit.MathExt.IsInteger(text);

			Assert.AreEqual(expected, actual, "Havit.MathExt.IsInteger did not return the expected value.");
		}

		[TestMethod]
		public void MathExt_IsInteger_ReturnsTrueForNegativeInteger()
		{
			string text = "-156";

			bool expected = true;
			bool actual;

			actual = Havit.MathExt.IsInteger(text);

			Assert.AreEqual(expected, actual, "Havit.MathExt.IsInteger did not return the expected value.");
		}

		[TestMethod]
		public void MathExt_IsIntegerTest_ReturnsFalseForEmptyString()
		{
			string text = String.Empty;

			bool expected = false;
			bool actual;

			actual = Havit.MathExt.IsInteger(text);

			Assert.AreEqual(expected, actual, "Havit.MathExt.IsInteger did not return the expected value.");
		}

		[TestMethod]
		public void MathExt_IsIntegerTest_ReturnsFalseForInvalidValue()
		{
			string text = "10.";

			bool expected = false;
			bool actual;

			actual = Havit.MathExt.IsInteger(text);

			Assert.AreEqual(expected, actual, "Havit.MathExt.IsInteger did not return the expected value.");
		}
	}
}
