// <auto-generated />
using System;
using EnchantedCoder.EFCoreTests.Entity;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EnchantedCoder.EFCoreTests.Entity.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200610083541_PropertyWithProtectedMembers")]
    partial class PropertyWithProtectedMembers
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EnchantedCoder.Data.EntityFrameworkCore.Model.DataSeedVersion", b =>
                {
                    b.Property<string>("ProfileName")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProfileName")
                        .HasName("PK_DataSeed");

                    b.ToTable("__DataSeed");
                });

            modelBuilder.Entity("EnchantedCoder.EFCoreTests.Model.BusinessCase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("BusinessCase");

                    b.HasAnnotation("Caching-AllKeysEnabled", true);

                    b.HasAnnotation("Caching-EntitiesEnabled", true);
                });

            modelBuilder.Entity("EnchantedCoder.EFCoreTests.Model.Modelation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BusinessCaseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessCaseId");

                    b.ToTable("Modelation");
                });

            modelBuilder.Entity("EnchantedCoder.EFCoreTests.Model.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BossId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BossId");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("EnchantedCoder.EFCoreTests.Model.PropertyWithProtectedMembers", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("ProtectedSetterValue")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PropertyWithProtectedMembers");
                });

            modelBuilder.Entity("EnchantedCoder.EFCoreTests.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("EnchantedCoder.EFCoreTests.Model.Modelation", b =>
                {
                    b.HasOne("EnchantedCoder.EFCoreTests.Model.BusinessCase", "BusinessCase")
                        .WithMany("Modelations")
                        .HasForeignKey("BusinessCaseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("EnchantedCoder.EFCoreTests.Model.Person", b =>
                {
                    b.HasOne("EnchantedCoder.EFCoreTests.Model.Person", "Boss")
                        .WithMany("Subordinates")
                        .HasForeignKey("BossId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
